/**
 *  Classe che implementa l'interfaccia dell' Operatore  Agenzia
 *
 * @author  Martone  Giuseppe
 * @version  . 
 * 
 * &#   ;      e Tour  Project -  Copyright by  S E@ S A  Lab  D M I -  University of  Salerno
 */
package unisa.gps.etour.repository;

import java.sql. Connection;
import java.sql. Result Set;
import java.sql. S Q L Exception;
import java.sql. Statement;

import unisa.gps.etour.bean. Bean Operatore Agenzia;

public class  D B Operatore Agenzia implements  I D B Operatore Agenzia
{

	/* (non- Javadoc)
	 * @see unisa.gps.etour.repository. I D B Operatore Agenzia#ottieni Operatore Agenzia(int)
	 */
	public  Bean Operatore Agenzia ottieni Operatore Agenzia( String p Username)
			throws  S Q L Exception
	{
		// Connessione al database
		 Connection conn = null;
		//  Statement per eseguire le query
		 Statement stat = null;
		//  Resut set dove verra inserito l'output della query
		 Result Set result = null;
		//  Blocco try dove vengono eseguite le query e la connessione al database
		try
		{
			//  Si ottiene la connessione al database dal pool
			conn =  D B Connessione Pool.ottieni Connessione();
			//  Si crea lo statement
			stat = conn.create Statement();
			//  Query
			 String query = " S E L E C T *  F R O M operatore agenzia   W H E R E  Username ='"
					+ p Username + "'";
			result = stat.execute Query(query);
			 Bean Operatore Agenzia oa = null;
			if (result.next())
			{
				//  Si genera  Il bean nel caso in cui la query restituisca un
				// valore
				// altrimenti verra restituito null
				oa = new  Bean Operatore Agenzia();
				oa.set Id(result.get Int(" Id"));
				oa.set Username(result.get String(" Username"));
				oa.set Nome(result.get String(" Nome"));
				oa.set Cognome(result.get String(" Cognome"));
				oa.set Password(result.get String(" Password"));
			}
			return oa;
		}
		//  Blocco finally che contiene le istruzione per chiudere le connessioni
		// iene eseguito in qualsiasi caso
		finally
		{
			//  Si chiude il result set solo se e' stata effettuata la query
			if (result != null)
			{
				result.close();
			}
			//  Si chiude lo statement se e' stato aperto
			if (stat != null)
			{
				stat.close();
			}
			//  Si restituisce la connessione al pool se e' stata aperta
			if (conn != null)
			{
				 D B Connessione Pool.rilascia Connessione(conn);
			}
		}

	}

	/* (non- Javadoc)
	 * @see unisa.gps.etour.repository. I D B Operatore Agenzia#modifica Password(java.lang. String)
	 */
	public boolean modifica Password( Bean Operatore Agenzia p Oa) throws  S Q L Exception
	{
		// Connessione al database
		 Connection conn = null;
		//  Statement per eseguire le query
		 Statement stat = null;
		//  Blocco try dove vengono eseguite le query e la connessione al database
		try
		{
			//  Si ottiene la connessione al database dal pool
			conn =  D B Connessione Pool.ottieni Connessione();
			//  Si crea lo statement
			stat = conn.create Statement();

			//  Query
			 String query = " U P D A T E operatore agenzia   S E T " + " Password ='"
					+ p Oa.get Password() + "'  W H E R E  Id =" + p Oa.get Id();
			//  Si esegue la query
			int i = stat.execute Update(query);

			return (i ==  );
		}
		//  Blocco finally che contiene le istruzione per chiudere le connessioni
		// iene eseguito in qualsiasi caso
		finally
		{
			//  Si chiude lo statement se e' stato aperto
			if (stat != null)
			{
				stat.close();
			}
			//  Si restituisce la connessione al pool se e' stata aperta
			if (conn != null)
			{
				 D B Connessione Pool.rilascia Connessione(conn);
			}
		}
	}	
}
