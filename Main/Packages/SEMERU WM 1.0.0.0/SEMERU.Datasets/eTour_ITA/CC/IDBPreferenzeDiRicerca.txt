package unisa.gps.etour.repository;

import java.sql. S Q L Exception;
import java.util. Array List;

import unisa.gps.etour.bean. Bean Preferenza Di Ricerca;

/**
 *  Interfaccia per la gestione delle preferenze di ricerca nel database
 * 
 * @author  Martone  Giuseppe
 * @version  .  �      e Tour  Project -  Copyright by  S E@ S A  Lab  D M I �  University
 *          of  Salerno
 */
public interface  I D B Preferenze Di Ricerca
{
	/**
	 *  Aggiunge  Una preferenza  Di  Ricerca
	 * 
	 * @param p Preferenza  Preferenza di ricerca
	 * @throws  S Q L Exception
	 */
	public boolean inserisci Preferenza Di Ricerca(
			 Bean Preferenza Di Ricerca p Preferenza) throws  S Q L Exception;

	/**
	 *  Elimina una preferenza di ricerca
	 * 
	 * @param p Preferenza  Preferenza da eliminare
	 * @throws  S Q L Exception
	 * @return  True se e' stata cancellata false altrimenti
	 */
	public boolean cancella Preferenza Di Ricerca(int p Id Preferenza)
			throws  S Q L Exception;

	/**
	 *  Restituisce la lista delle preferenze di ricerca di un turista
	 * 
	 * @param p Id Turista  Id del turista
	 * @throws  S Q L Exception
	 * @return  Lista delle preferenze di ricerca
	 */
	public  Array List< Bean Preferenza Di Ricerca> ottieni Preferenze Di Ricerca Del Turista(
			int p Id Turista) throws  S Q L Exception;

	/**
	 *  Restituisce la lista delle preferenze di ricerca di un bene culturale
	 * 
	 * @param p Id Bene Culturale  Identificativo del bene culturale
	 * @throws  S Q L Exception
	 * @return  Lista delle preferenze di ricerca.
	 */
	public  Array List< Bean Preferenza Di Ricerca> ottieni Preferenze Di Ricerca Del B C(
			int p Id Bene Culturale) throws  S Q L Exception;

	/**
	 *  Restituisce la lista delle preferenze di ricerca di un punto di ristoro
	 * 
	 * @param p Id Punto Di Ristoro identificativo di un punto di ristoro
	 * @throws  S Q L Exception
	 * @return  Lista delle preferenze di ricerca.
	 */
	public  Array List< Bean Preferenza Di Ricerca> ottieni Preferenze Di Ricerca Del P R(
			int p Id Punto Di Ristoro) throws  S Q L Exception;

	/**
	 *  Aggiunge una preferenza ad un  Bene culturale
	 * 
	 * @param p Id Bene Culturale  Identificativo del bene culturale
	 * @param p Id Preferenza Di Ricerca  Identificativo della  Preferenza Di Ricerca
	 * @throws  S Q L Exception
	 * @param p Preferenza  Preferenza di ricerca
	 */
	public boolean inserisci Preferenza Di Ricerca Del B C(int p Id Bene Culturale,
			int p Id Preferenza Di Ricerca) throws  S Q L Exception;

	/**
	 *  Aggiunge una preferenza di ricerca ad un turista
	 * 
	 * @param p Id Turista  Id del turista
	 * @param p Id Preferenza Di Ricerca  Identificativo delle  Preferenze Di Ricerca
	 * @throws  S Q L Exception
	 * @param p Preferenza  Preferenza di ricerca
	 */
	public boolean inserisci Preferenza Di Ricerca Del Turista(int p Id Turista,
			int p Id Preferenza Di Ricerca) throws  S Q L Exception;

	/**
	 *  Aggiunge una preferenza di ricerca ad un punto di ristoro
	 * 
	 * @param p Id Punto Di Ristoro  Identificativo del punto di ristoro
	 * @param p Id Preferenza Di Ricerca  Identificativo della  Preferenza Di Ricerca
	 * @throws  S Q L Exception
	 * @param p Preferenza  Preferenza di ricerca
	 */
	public boolean inserisci Preferenza Di Ricerca Del P R(int p Id Punto Di Ristoro,
			int p Id Preferenza Di Ricerca) throws  S Q L Exception;

	/**
	 *  Elimina una preferenza di ricerca di un  Turista
	 * 
	 * @param p Id Turista  Id del turista
	 * @param p Id Preferenza  Preferenza di ricerca
	 * @throws  S Q L Exception
	 * @return  True se e' stata cancellata false altrimenti
	 */
	public boolean cancella Preferenza Di Ricerca Turista(int p Id Turista,
			int p Id Preferenza) throws  S Q L Exception;

	/**
	 *  Elimina una preferenza di ricerca di un bene culturale
	 * 
	 * @param p Id Preferenza Di Ricerca  Preferenza di ricerca
	 * @param p Id Bene Culturale  Identificativo del bene culturale
	 * @throws  S Q L Exception
	 * @return  True se e' stata cancellata false altrimenti
	 */
	public boolean cancella Preferenza Di Ricerca B C(int p Id Bene Culturale,
			int p Id Preferenza Di Ricerca) throws  S Q L Exception;

	/**
	 *  Elimina una preferenza di ricerca di un punto di ristoro
	 * 
	 * @param p Id Preferenza  Preferenza di ricerca
	 * @param p Id Punto Diistoro  Identificativo del punto di ristoro
	 * @throws  S Q L Exception
	 * @return  True se e' stata cancellata false altrimenti
	 */
	public boolean cancella Preferenza Di Ricerca P R(int p Id Punto Diistoro,
			int p Id Preferenza) throws  S Q L Exception;

	/**
	 *  Restituisce la lista di tutte le preferenze di ricerca presenti nel  D B
	 * 
	 * @throws  S Q L Exception
	 * @return  Lista delle preferenze di ricerca presenti nel  D B
	 */
	public  Array List< Bean Preferenza Di Ricerca> ottieni Preferenze Di Ricerca()
			throws  S Q L Exception;

}
