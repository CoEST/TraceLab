package unisa.gps.etour.control. Gestione Tag;

import java.rmi. Remote Exception;
import java.rmi.server. Unicast Remote Object;
import java.sql. S Q L Exception;
import java.util. Array List;
import unisa.gps.etour.bean. Bean Tag;
/*
 *  Per i test import unisa.gps.etour.control. Gestione Tag.test.stub. D B Tag;
 */
import unisa.gps.etour.repository. D B Tag;
import unisa.gps.etour.repository. I D B Tag;
import unisa.gps.etour.util. Messaggi Errore;

/**
 *  Classe che implementa le operazioni comuni per l'uso dei tag
 * 
 * @author  Morelli  Giuseppe
 * @version  .  �      e Tour  Project -  Copyright by  S E@ S A  Lab  D M I �  University
 *          of  Salerno
 */
public class  Gestione Tag Comune extends  Unicast Remote Object implements
		 I Gestione Tag Comune
{

	private static final long serial Version U I D =   L;
	//  Oggetto per la connessione al  Database
	protected  I D B Tag tag;

	public  Gestione Tag Comune() throws  Remote Exception
	{
		super();
		//  Connessione al  Database
		try
		{
			tag = new  D B Tag();
		}
		catch ( Exception e)
		{
			throw new  Remote Exception( Messaggi Errore. E R R O R E_ S C O N O S C I U T O);
		}
	}

	//  Metodo che restituisce tutti i  Tag
	public  Array List< Bean Tag> ottieni Tags() throws  Remote Exception
	{
		//  Array List da riempire con i tag per la restituzione
		 Array List< Bean Tag> to Return;
		//  Recupero dei dati dal  Database
		try
		{
			//  Ottengo le informazioni dal  Database
			to Return = tag.ottieni Lista Tag();
		}
		//  Eccezione nell'esecuzione delle operazioni sul  Database
		catch ( S Q L Exception e)
		{
			 System.out
					.println(" Errore nel metodo ottieni Tags: " + e.to String());
			throw new  Remote Exception( Messaggi Errore. E R R O R E_ D B M S);
		}
		//  Eccezioni impreviste causate da altri fattori
		catch ( Exception ee)
		{
			 System.out.println(" Errore nel metodo ottieni Tags: "
					+ ee.to String());
			throw new  Remote Exception( Messaggi Errore. E R R O R E_ S C O N O S C I U T O);
		}
		//  Controllo i dati di ritorno in modo da non restituire valori nulli al
		// chiamante
		if (to Return == null)
			throw new  Remote Exception( Messaggi Errore. E R R O R E_ F O R M A T O_ B E A N);
		return to Return;
	}
}
