package unisa.gps.etour.repository;

import java.sql. Connection;
import java.sql. Result Set;
import java.sql. S Q L Exception;
import java.sql. Statement;
import java.util. Array List;

/**
 *  Classe che implementa l'interfaccia  Statistiche  Localita
 * 
 * @author  Martone  Giuseppe
 * @version  .  &#   ;      e Tour  Project -  Copyright by  S E@ S A  Lab  D M I -
 *           University of  Salerno
 */
public class  D B Statistiche Localita implements  I D B Statistiche Localita
{
	//  Costruttore vuoto
	public  D B Statistiche Localita()
	{

	}

	public  Array List< String> ottieni Lista Localita() throws  S Q L Exception
	{
		//  Variabile per la connessione
		 Connection conn = null;
		//  Variabile per le query
		 Statement stat = null;
		//  Variabile per i risultati delle query
		 Result Set result = null;
		try
		{
			//  Ottengo la connessione
			conn =  D B Connessione Pool.ottieni Connessione();
			//  Creazione dello  Statement
			stat = conn.create Statement();
			//  Query per l'estrazione delle localita tra i  P R e i  B C
			 String query = " ( S E L E C T  D I S T I N C T  Localita "
					+ " F R O M bene culturale )  U N I O N "
					+ "( S E L E C T  D I S T I N C T  Localita  F R O M punto di ristoro )";
			//  Viene eseguita la query
			result = stat.execute Query(query);
			//  Si estraggono i risultati dal result set e si inseriscono nella
			// lista
			// da restituire
			//  Lista che conterrà i risultati ottenuti
			 Array List< String> lista = new  Array List< String>();
			while (result.next())
			{
				//  Aggiungo nella lista le località ottenute
				lista.add(result.get String(" Localita"));
			}
			return lista;
		}
		//  Viene eseguito sempre e si occupa di chiudere il  Result, lo  Statement
		// e la  Connessione
		finally
		{
			if (result != null)
			{
				result.close();
			}
			if (stat != null)
			{
				stat.close();
			}
			if (conn != null)
			{
				 D B Connessione Pool.rilascia Connessione(conn);
			}
		}
	}

	public double ottieni Medie Voti Localita( String plocalita)
			throws  S Q L Exception
	{
		//  Variabile per la connessione
		 Connection conn = null;
		//  Variabile per le query
		 Statement stat = null;
		//  Variabile per i risultati delle query
		 Result Set result = null;
		try
		{
			//  Ottengo la connessione
			conn =  D B Connessione Pool.ottieni Connessione();
			//  Creazione dello  Statement
			stat = conn.create Statement();
			//  Query per l'estrazione della media dei voti dei punti di ristoro
			// in base ad una localita passata
			 String query = " S E L E C T  avg( Media Voti) as  Media Voti  F R O M punto di ristoro   W H E R E  Localita ='"
					+ plocalita + "'";
			//  Viene eseguita la query
			result = stat.execute Query(query);
			//  Si estraggono i risultati dal result set
			double punto =  . ;
			if (result.next())
			{
				punto = result.get Double(" Media Voti");
			}
			//  Query per l'estrazione della media dei voti dei beni culturali
			// in base ad una localita passata
			query = " S E L E C T  avg( Media Voti)  A S  Media Voti  F R O M bene culturale   W H E R E  Localita ='"
					+ plocalita + "'";
			//  Viene eseguita la query
			result = stat.execute Query(query);
			//  Si estraggono i risultati dal result set
			double bene =  . ;
			if (result.next())
			{
				bene = result.get Double(" Media Voti");
			}
			//  Si restituisce la media tra i punti di ristoro e i beni culturali
			return (punto + bene) /  ;

		}
		//  Viene eseguito sempre e si occupa di chiudere il  Result, lo  Statement
		// e la  Connessione
		finally
		{
			if (result != null)
			{
				result.close();
			}
			if (stat != null)
			{
				stat.close();
			}
			if (conn != null)
			{
				 D B Connessione Pool.rilascia Connessione(conn);
			}

		}
	}
}
