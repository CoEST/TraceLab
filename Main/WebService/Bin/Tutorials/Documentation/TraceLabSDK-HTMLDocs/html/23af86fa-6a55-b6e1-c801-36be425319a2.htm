<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>TraceLabSDK Namespace</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="TraceLabSDK namespace" />
    <meta name="Microsoft.Help.F1" content="TraceLabSDK" />
    <meta name="Microsoft.Help.Id" content="N:TraceLabSDK" />
    <meta name="Description" content="The TraceLabSDK namespace contains all of the classes and interfaces necessary to create a component for TraceLab." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <link rel="stylesheet" type="text/css" href="../styles/Presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="../scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="../scripts/CommonUtilities.js"> </script>
    <meta name="container" content="TraceLabSDK" />
    <meta name="file" content="23af86fa-6a55-b6e1-c801-36be425319a2" />
    <meta name="guid" content="23af86fa-6a55-b6e1-c801-36be425319a2" />
    <xml>
      <MSHelp:Attr Name="AssetID" Value="N:TraceLabSDK" />
      <MSHelp:TOCTitle Title="TraceLabSDK Namespace" />
      <MSHelp:RLTitle Title="TraceLabSDK Namespace ()" />
      <MSHelp:Keyword Index="A" Term="N:TraceLabSDK" />
      <MSHelp:Keyword Index="A" Term="frlrfTraceLabSDK" />
      <MSHelp:Keyword Index="K" Term="TraceLabSDK namespace" />
      <MSHelp:Keyword Index="F" Term="TraceLabSDK" />
      <MSHelp:Attr Name="HelpPriority" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLang" Value="VB" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="Abstract" Value="The TraceLabSDK namespace contains all of the classes and interfaces necessary to create a component for TraceLab." />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">A Sandcastle Documented Class Library</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">TraceLabSDK Namespace</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <span id="headfeedbackarea" class="feedbackhead">
              <a href="javascript:SubmitFeedback('','A Sandcastle Documented Class Library','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a>
            </span>
          </td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <span style="color: DarkGray"></span>
        <div class="summary">
            The TraceLabSDK namespace contains all of the classes and interfaces necessary to create a component for TraceLab.
            </div>
        <h1 class="heading">
          <span onclick="ExpandCollapse(classToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(classToggle, event)" tabindex="0">
            <img id="classToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Classes</span>
        </h1>
        <div id="classSection" class="section" name="collapseableSection" style="">
          <table id="typeList" class="members" frame="lhs" cellpadding="2">
            <col width="10%" />
            <tr>
              <th class="iconColumn">
           
       </th>
              <th class="nameColumn">Class</th>
              <th class="descriptionColumn">Description</th>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="c0c950b2-c38d-bfc8-6002-a6943b536225.htm">BaseComponent</a>
              </td>
              <td>
                <div class="summary">
            An abstract base class that can be used when creating a component.
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="7094224b-341d-7b9a-bfe3-9513ec5686bc.htm">ComponentAttribute</a>
              </td>
              <td>
                <div class="summary">
            Used to define required metadata about a component.
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="9377da0e-8189-fa84-1122-13ba03077406.htm">ComponentException</a>
              </td>
              <td>
                <div class="summary">
            Component can throw ComponentException if the intention is that its details should not be displayed 
            in the output window. 
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="c1399d5c-e5e5-98a4-785c-e1ff5252ea76.htm">ComponentLoggerImplementation</a>
              </td>
              <td>
                <div class="summary">
            ComponentLoggerImplementation is used to write the logging info, debug, error, warning messages from a component - each component will be given one ComponentLogger.
            This implementation is using NLog.LogManager.
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="2bf6546d-69b1-cd2c-abba-be15602c7fe6.htm">IOSpecAttribute</a>
              </td>
              <td>
                <div class="summary">
            This attribute is used to declare what inputs or outputs a Component has.
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="3183f048-52cc-02d0-3ced-8949fb288619.htm">MultiDictionary<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TKey, TValue<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a>
              </td>
              <td>
                <div class="summary">
            A dictonary that implements a one-to-many lookup.
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="7c03c04e-8892-3f56-7ee1-b6a1e8c3d838.htm">SerializableDictionary<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TKey, TValue<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a>
              </td>
              <td>
                <div class="summary">
            A dictionary that can be serialized between AppDomains and to XML.  Note that all of the standard documentation for 
            System.Collections.Generic.Dictionary remains the same.
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="47db7e20-9980-f4a8-17f6-a9cb9c71a32e.htm">TagAttribute</a>
              </td>
              <td>
                <div class="summary">
            Is used to provide default tags for components
            Component class can be tagged to be added to certain category. To do it add Tag attribute to the component class.
            Tag can be simple, or can have subcategories.
            For example:
            [Tag("Importers")]
            will add component to Importers category.
            
            [Tag("Importers.TLArtifactsCollection.From XML")]
            will add component to subcategory From XML of subcategory of TLArtifactsCollection of category Importers.
            
            Component can have multiple tags.
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="57c8e665-f872-b58a-a086-7a4ec109241a.htm">TypeHelper</a>
              </td>
              <td>
                <div class="summary">
            A helper class for getting a TraceLab-friendly serializable type name.
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="eb6fd698-d348-aa30-c248-2a25176fc6f3.htm">WorkspaceTypeAttribute</a>
              </td>
              <td>
                <div class="summary">
            Represents a type that can be placed in the Workspace.
            
            This interface must be implemented for the Workspace recognize a custom
            type.
            </div>
              </td>
            </tr>
          </table>
        </div>
        <h1 class="heading">
          <span onclick="ExpandCollapse(structureToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(structureToggle, event)" tabindex="0">
            <img id="structureToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Structures</span>
        </h1>
        <div id="structureSection" class="section" name="collapseableSection" style="">
          <table id="typeList" class="members" frame="lhs" cellpadding="2">
            <col width="10%" />
            <tr>
              <th class="iconColumn">
           
       </th>
              <th class="nameColumn">Structure</th>
              <th class="descriptionColumn">Description</th>
            </tr>
            <tr data="structure; public">
              <td>
                <img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" />
              </td>
              <td>
                <a href="df789c51-f7af-f685-58ec-c954f72c1060.htm">MultiDictionary<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TKey, TValue<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span><span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Enumerator</a>
              </td>
              <td>
                <div class="summary">
            An enumerator for iterating through a MultiDictionary.
            </div>
              </td>
            </tr>
          </table>
        </div>
        <h1 class="heading">
          <span onclick="ExpandCollapse(interfaceToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(interfaceToggle, event)" tabindex="0">
            <img id="interfaceToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Interfaces</span>
        </h1>
        <div id="interfaceSection" class="section" name="collapseableSection" style="">
          <table id="typeList" class="members" frame="lhs" cellpadding="2">
            <col width="10%" />
            <tr>
              <th class="iconColumn">
           
       </th>
              <th class="nameColumn">Interface</th>
              <th class="descriptionColumn">Description</th>
            </tr>
            <tr data="interface; public">
              <td>
                <img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" />
              </td>
              <td>
                <a href="01ec396a-6a02-417e-cea8-5e054ccba988.htm">ComponentLogger</a>
              </td>
              <td>
                <div class="summary">
            Allows component to log different messages to the output window
            </div>
              </td>
            </tr>
            <tr data="interface; public">
              <td>
                <img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" />
              </td>
              <td>
                <a href="2b1e3dc3-77ae-009e-1b37-662bf544cd3c.htm">IComponent</a>
              </td>
              <td>
                <div class="summary">
            The interface that must be implemented by a component
            </div>
              </td>
            </tr>
            <tr data="interface; public">
              <td>
                <img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" />
              </td>
              <td>
                <a href="060c1206-f186-16d9-ecc8-7eac6f009df8.htm">IProgress</a>
              </td>
              <td>
                <div class="summary">
            Represents the interface to a user control depicting the progress of an operation.
            </div>
              </td>
            </tr>
            <tr data="interface; public">
              <td>
                <img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" />
              </td>
              <td>
                <a href="20ebea3f-ed1e-58ed-cecc-09aaee699067.htm">IRawSerializable</a>
              </td>
              <td>
                <div class="summary">
            Provides an interface to do raw binary serialization.  Note that this is an advanced form of serialization - it requires more maintenance, but can provide huge improvements in speed.
            </div>
              </td>
            </tr>
            <tr data="interface; public">
              <td>
                <img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" />
              </td>
              <td>
                <a href="ab351fda-a716-5343-5db5-a90926c6fe92.htm">IWorkspace</a>
              </td>
              <td>
                <div class="summary">
            An interface for communication with the Workspace.
            </div>
              </td>
            </tr>
            <tr data="interface; public">
              <td>
                <img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" />
              </td>
              <td>
                <a href="f2c57e3d-bb86-7fd1-4c3b-ef77af7bd26f.htm">IWorkspaceUnitEditor</a>
              </td>
              <td>
                <div class="summary">
            Represents an editor for a workspace unit.  This is to be applied to a UI element that will be used to edit
            the unit.
            </div>
              </td>
            </tr>
          </table>
        </div>
        <h1 class="heading">
          <span onclick="ExpandCollapse(enumerationToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(enumerationToggle, event)" tabindex="0">
            <img id="enumerationToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Enumerations</span>
        </h1>
        <div id="enumerationSection" class="section" name="collapseableSection" style="">
          <table id="typeList" class="members" frame="lhs" cellpadding="2">
            <col width="10%" />
            <tr>
              <th class="iconColumn">
           
       </th>
              <th class="nameColumn">Enumeration</th>
              <th class="descriptionColumn">Description</th>
            </tr>
            <tr data="enumeration; public">
              <td>
                <img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" />
              </td>
              <td>
                <a href="5f64a7e7-8fd5-2104-2d04-3eab0563eb8c.htm">IOSpecType</a>
              </td>
              <td>
                <div class="summary">
            Enumerates the various times of inputs or outputs a component may have.
            </div>
              </td>
            </tr>
          </table>
        </div>
      </div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" />
        </div>
        <A NAME="feedback"></A>
        <span id="fb" class="feedbackcss"></span>
      </div>
    </div>
  </body>
</html>