
// This file has been generated by the GUI designer. Do not modify.
namespace TraceLab.UI.GTK
{
	public partial class PackageBuilderSettingsPage
	{
		private global::Gtk.VBox vbox2;
		private global::Gtk.Label titleLabel;
		private global::Gtk.VBox configVBox;
		private global::Gtk.CheckButton CheckBoxIncludeIndependentFilesDirs;
		private global::Gtk.TextView DecriptionIncludeIndependentFilesDirs;
		private global::Gtk.CheckButton CheckBoxIncludeOtherPackagesFilesDirs;
		private global::Gtk.TextView DescriptionIncludeOtherPackagesFilesDirs;
		private global::Gtk.CheckButton CheckBoxIncludeOtherPackagesAssemblies;
		private global::Gtk.TextView DescriptionIncludeOtherPackagesAssemblies;
		private global::Gtk.TextView OtherNotes;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget TraceLab.UI.GTK.PackageBuilderSettingsPage
			global::Stetic.BinContainer.Attach (this);
			this.Name = "TraceLab.UI.GTK.PackageBuilderSettingsPage";
			// Container child TraceLab.UI.GTK.PackageBuilderSettingsPage.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.titleLabel = new global::Gtk.Label ();
			this.titleLabel.Name = "titleLabel";
			this.titleLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Title");
			this.vbox2.Add (this.titleLabel);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.titleLabel]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			w1.Padding = ((uint)(2));
			// Container child vbox2.Gtk.Box+BoxChild
			this.configVBox = new global::Gtk.VBox ();
			this.configVBox.Name = "configVBox";
			this.configVBox.Spacing = 6;
			this.configVBox.BorderWidth = ((uint)(4));
			// Container child configVBox.Gtk.Box+BoxChild
			this.CheckBoxIncludeIndependentFilesDirs = new global::Gtk.CheckButton ();
			this.CheckBoxIncludeIndependentFilesDirs.CanFocus = true;
			this.CheckBoxIncludeIndependentFilesDirs.Name = "CheckBoxIncludeIndependentFilesDirs";
			this.CheckBoxIncludeIndependentFilesDirs.Label = global::Mono.Unix.Catalog.GetString ("checkbutton4");
			this.CheckBoxIncludeIndependentFilesDirs.DrawIndicator = true;
			this.CheckBoxIncludeIndependentFilesDirs.UseUnderline = true;
			this.configVBox.Add (this.CheckBoxIncludeIndependentFilesDirs);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.CheckBoxIncludeIndependentFilesDirs]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child configVBox.Gtk.Box+BoxChild
			this.DecriptionIncludeIndependentFilesDirs = new global::Gtk.TextView ();
			this.DecriptionIncludeIndependentFilesDirs.Sensitive = false;
			this.DecriptionIncludeIndependentFilesDirs.CanFocus = true;
			this.DecriptionIncludeIndependentFilesDirs.Name = "DecriptionIncludeIndependentFilesDirs";
			this.DecriptionIncludeIndependentFilesDirs.Editable = false;
			this.DecriptionIncludeIndependentFilesDirs.CursorVisible = false;
			this.DecriptionIncludeIndependentFilesDirs.WrapMode = ((global::Gtk.WrapMode)(2));
			this.DecriptionIncludeIndependentFilesDirs.PixelsBelowLines = 2;
			this.DecriptionIncludeIndependentFilesDirs.LeftMargin = 2;
			this.DecriptionIncludeIndependentFilesDirs.RightMargin = 2;
			this.DecriptionIncludeIndependentFilesDirs.Indent = 4;
			this.configVBox.Add (this.DecriptionIncludeIndependentFilesDirs);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.DecriptionIncludeIndependentFilesDirs]));
			w3.Position = 1;
			// Container child configVBox.Gtk.Box+BoxChild
			this.CheckBoxIncludeOtherPackagesFilesDirs = new global::Gtk.CheckButton ();
			this.CheckBoxIncludeOtherPackagesFilesDirs.CanFocus = true;
			this.CheckBoxIncludeOtherPackagesFilesDirs.Name = "CheckBoxIncludeOtherPackagesFilesDirs";
			this.CheckBoxIncludeOtherPackagesFilesDirs.Label = global::Mono.Unix.Catalog.GetString ("checkbutton5");
			this.CheckBoxIncludeOtherPackagesFilesDirs.DrawIndicator = true;
			this.CheckBoxIncludeOtherPackagesFilesDirs.UseUnderline = true;
			this.configVBox.Add (this.CheckBoxIncludeOtherPackagesFilesDirs);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.CheckBoxIncludeOtherPackagesFilesDirs]));
			w4.Position = 2;
			w4.Expand = false;
			w4.Fill = false;
			// Container child configVBox.Gtk.Box+BoxChild
			this.DescriptionIncludeOtherPackagesFilesDirs = new global::Gtk.TextView ();
			this.DescriptionIncludeOtherPackagesFilesDirs.Sensitive = false;
			this.DescriptionIncludeOtherPackagesFilesDirs.CanFocus = true;
			this.DescriptionIncludeOtherPackagesFilesDirs.Name = "DescriptionIncludeOtherPackagesFilesDirs";
			this.DescriptionIncludeOtherPackagesFilesDirs.Editable = false;
			this.DescriptionIncludeOtherPackagesFilesDirs.CursorVisible = false;
			this.DescriptionIncludeOtherPackagesFilesDirs.WrapMode = ((global::Gtk.WrapMode)(2));
			this.DescriptionIncludeOtherPackagesFilesDirs.PixelsBelowLines = 2;
			this.DescriptionIncludeOtherPackagesFilesDirs.LeftMargin = 2;
			this.DescriptionIncludeOtherPackagesFilesDirs.RightMargin = 2;
			this.DescriptionIncludeOtherPackagesFilesDirs.Indent = 4;
			this.configVBox.Add (this.DescriptionIncludeOtherPackagesFilesDirs);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.DescriptionIncludeOtherPackagesFilesDirs]));
			w5.Position = 3;
			// Container child configVBox.Gtk.Box+BoxChild
			this.CheckBoxIncludeOtherPackagesAssemblies = new global::Gtk.CheckButton ();
			this.CheckBoxIncludeOtherPackagesAssemblies.CanFocus = true;
			this.CheckBoxIncludeOtherPackagesAssemblies.Name = "CheckBoxIncludeOtherPackagesAssemblies";
			this.CheckBoxIncludeOtherPackagesAssemblies.Label = global::Mono.Unix.Catalog.GetString ("checkbutton6");
			this.CheckBoxIncludeOtherPackagesAssemblies.DrawIndicator = true;
			this.CheckBoxIncludeOtherPackagesAssemblies.UseUnderline = true;
			this.configVBox.Add (this.CheckBoxIncludeOtherPackagesAssemblies);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.CheckBoxIncludeOtherPackagesAssemblies]));
			w6.Position = 4;
			w6.Expand = false;
			w6.Fill = false;
			// Container child configVBox.Gtk.Box+BoxChild
			this.DescriptionIncludeOtherPackagesAssemblies = new global::Gtk.TextView ();
			this.DescriptionIncludeOtherPackagesAssemblies.Sensitive = false;
			this.DescriptionIncludeOtherPackagesAssemblies.CanFocus = true;
			this.DescriptionIncludeOtherPackagesAssemblies.Name = "DescriptionIncludeOtherPackagesAssemblies";
			this.DescriptionIncludeOtherPackagesAssemblies.Editable = false;
			this.DescriptionIncludeOtherPackagesAssemblies.CursorVisible = false;
			this.DescriptionIncludeOtherPackagesAssemblies.WrapMode = ((global::Gtk.WrapMode)(2));
			this.DescriptionIncludeOtherPackagesAssemblies.PixelsBelowLines = 2;
			this.DescriptionIncludeOtherPackagesAssemblies.LeftMargin = 2;
			this.DescriptionIncludeOtherPackagesAssemblies.RightMargin = 2;
			this.DescriptionIncludeOtherPackagesAssemblies.Indent = 4;
			this.configVBox.Add (this.DescriptionIncludeOtherPackagesAssemblies);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.DescriptionIncludeOtherPackagesAssemblies]));
			w7.Position = 5;
			// Container child configVBox.Gtk.Box+BoxChild
			this.OtherNotes = new global::Gtk.TextView ();
			this.OtherNotes.Sensitive = false;
			this.OtherNotes.CanFocus = true;
			this.OtherNotes.Name = "OtherNotes";
			this.OtherNotes.Editable = false;
			this.OtherNotes.CursorVisible = false;
			this.OtherNotes.WrapMode = ((global::Gtk.WrapMode)(2));
			this.OtherNotes.PixelsAboveLines = 6;
			this.OtherNotes.LeftMargin = 2;
			this.OtherNotes.RightMargin = 2;
			this.configVBox.Add (this.OtherNotes);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.OtherNotes]));
			w8.Position = 6;
			this.vbox2.Add (this.configVBox);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.configVBox]));
			w9.Position = 1;
			w9.Padding = ((uint)(2));
			this.Add (this.vbox2);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}
