<!--
TraceLab - Software Traceability Instrument to Facilitate and Empower Traceability Research
Copyright (C) 2012-2013 CoEST - National Science Foundation MRI-R2 Grant # CNS: 0959924

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see<http://www.gnu.org/licenses/>.
-->

<Window x:Class="TraceLab.UI.WPF.Views.BenchmarkWizardDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Windows="System.Windows;assembly=PresentationCore"
             xmlns:Selectors="clr-namespace:TraceLab.UI.WPF.Selectors"
             xmlns:Converters="clr-namespace:TraceLab.UI.WPF.Converters"
             xmlns:Commands="clr-namespace:TraceLab.UI.WPF.Commands"
             xmlns:Experiments="clr-namespace:TraceLab.Core.Experiments;assembly=TraceLab.Core"
             xmlns:Utilities="clr-namespace:TraceLab.UI.WPF.Utilities"
             xmlns:viewmodels="clr-namespace:TraceLab.UI.WPF.ViewModels"
             xmlns:local="clr-namespace:TraceLab.UI.WPF.Views"
             xmlns:Controls="clr-namespace:TraceLab.UI.WPF.Controls"
             Title="Benchmarks" 
             x:Name="BenchmarkWizardRoot"
             WindowStartupLocation="CenterOwner"
             Height="620" Width="800" MinHeight="620" MinWidth="800">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Views/Nodes/BasicNodeControl.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Views/Nodes/ComponentNodeControl.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Views/Nodes/DecisionNodeControl.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Views/Nodes/ScopeNodeControl.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Views/Nodes/LoopScopeNodeControl.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Views/Nodes/ExitDecisionNodeControl.xaml"/>
                
                <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Controls/ExperimentBreadcrumb.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Views/Nodes/NodeResourcesReadOnly.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Resources/IOIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="LabelStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="10 2 10 2" />
            </Style>
            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="1 1 5 1" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Width" Value="Auto" />
            </Style>
            <Style x:Key="ShortDescStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="1 1 5 1" />
                <Setter Property="MinLines" Value="4" />
                <Setter Property="MaxLines" Value="4" />
                <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
                <Setter Property="Width" Value="Auto" />
            </Style>
            <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Margin" Value="1 5 5 4" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Width" Value="Auto" />
            </Style>
            <Style x:Key="ErrorMessageStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="10 4 10 2" />
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="FontSize" Value="11" />
            </Style>

            <!-- Select Contest Panel -->
            <DataTemplate x:Key="selectBenchmark">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Bottom" Text="{Binding Path=ErrorMessage, Converter={Converters:ErrorMessageShortenerConverter}, ConverterParameter=512}" 
                               Style="{StaticResource ResourceKey=ErrorMessageStyle}" 
                               Visibility="{Binding Path=ErrorMessage, Converter={Converters:EmptyStringToVisibilityConverter}, ConverterParameter=Hidden}"
                               TextWrapping="Wrap" />

                    <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Margin="5,10,5,10">
                        Select contest that you wish to enter.
                    </TextBlock>

                    <ListView ItemsSource="{Binding Benchmarks, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedBenchmark}" SelectionMode="Single"
                              local:BenchmarkWizardDialog.ListViewSelectBenchmarkCommand="{Binding AdvanceState}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="Height" Value="Auto" />
                                <Setter Property="Padding" Value="5,10,5,5" />
                                <Setter Property="Width" Value="540" />
                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                                <Setter Property="BorderBrush" Value="Lavender" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                            
                                <DockPanel HorizontalAlignment="Stretch">
                                    <Border Width="180" BorderThickness="1,0,0,0" Margin="4,4,4,4" BorderBrush="Lavender" DockPanel.Dock="Right">
                                        <DockPanel VerticalAlignment="Center" Visibility="{Binding Path=IsOnlineContest, Converter={Converters:BoolToVisibilityConverter}}">

                                            <StackPanel DockPanel.Dock="Top" FlowDirection="LeftToRight"  Orientation="Horizontal">
                                                <Image DockPanel.Dock="Left" Height="25" Width="25" Margin="10,0,10,0"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Source="/TraceLab.UI.WPF;component/Resources/HyperlinkIconSmall.png" OpacityMask="{x:Null}" />
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Hyperlink NavigateUri="{Binding Path=BenchmarkInfo.WebPageLink}" RequestNavigate="Hyperlink_RequestNavigate">
                                                            View contest page
                                                        </Hyperlink>
                                                </TextBlock>
                                            </StackPanel>

                                            <StackPanel Margin="10,10,10,10" Visibility="{Binding Path=ComponentTemplate, Converter={Converters:NullToVisibilityConverter}, Mode=OneTime}">
                                                <Button HorizontalAlignment="Stretch"
                                                    Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                            AncestorType={x:Type local:BenchmarkWizardDialog}}, 
                                                                            Path=DataContext.DownloadContestPackage}">
                                                    <Button.CommandParameter>
                                                        <MultiBinding Converter="{Converters:MultiBindingMultiValueConverter}">
                                                            <Binding Path="." />
                                                            <Binding ElementName="DownloadProgress" />
                                                            <Binding RelativeSource="{RelativeSource Mode=Self}" />
                                                        </MultiBinding>
                                                    </Button.CommandParameter>
                                                    Download Contest
                                                </Button>
                                                <Controls:ProgressControl x:Name="DownloadProgress" Visibility="Collapsed" HorizontalAlignment="Stretch" />
                                                <Border BorderThickness="1,1,1,1" Margin="1,1,1,1" BorderBrush="Red"  HorizontalAlignment="Stretch"
                                                    Visibility="{Binding Path=ErrorMessage, Converter={Converters:EmptyStringToVisibilityConverter}, ConverterParameter=Hidden }">
                                                    <TextBlock TextWrapping="Wrap" FontSize="10"
                                                                Text="{Binding Path=ErrorMessage, Converter={Converters:ErrorMessageShortenerConverter}, 
                                                                                                    ConverterParameter=32}" 
                                                                Margin="2,2,2,2">
                                                        <TextBlock.ToolTip>
                                                            <TextBlock Text="{Binding Path=ErrorMessage}" Width="180" TextWrapping="Wrap" Foreground="Red" />
                                                        </TextBlock.ToolTip>
                                                    </TextBlock>
                                                </Border>
                                            </StackPanel>
                                        </DockPanel>
                                    </Border>

                                    <StackPanel Width="340" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="2,2,2,2">
                                        <TextBlock Text="{Binding Path=BenchmarkInfo.Name}" FontSize="12" FontWeight="Bold" />
                                        <TextBlock Text="{Binding Path=BenchmarkInfo.ShortDescription}" FontStyle="Italic" TextWrapping="Wrap" />
                                    </StackPanel>
                                
                                </DockPanel>
                            
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </DockPanel>
            </DataTemplate>

            <!-- Configuration Panel -->
            <DataTemplate x:Key="benchmarkConfiguration">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" TextWrapping="Wrap" Margin="5,10,5,10">
                        The contest expects your solution to have certain inputs and outputs as shown below. 
                        Please map the inputs from the solution to the contracted imports of the contest and map the outputs to the contracted outputs. 
                        Only inputs and outputs of the correct type specified in your solution will appear in the drop list.
                    </TextBlock>
                    <ListView Grid.Row="1" ItemsSource="{Binding SelectedBenchmark.BenchmarkInputSetting}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="150" Header="Contract input name" DisplayMemberBinding="{Binding Path=Item.MappedTo}" />
                                <GridViewColumn Width="150" Header="Type" DisplayMemberBinding="{Binding Path=Item.IOItemDefinition.FriendlyType}" />
                                <GridViewColumn Width="150" Header="Solution input name">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type Experiments:ItemSettingCollection}">
                                            <ComboBox x:Name="InputCombo" ItemsSource="{Binding Path=CandidateSettings}" SelectedItem="{Binding Path=SelectedSetting}"
                                                  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type Experiments:ItemSetting}">
                                                        <TextBlock Text="{Binding ItemSettingName}"/>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView Grid.Row="2" ItemsSource="{Binding SelectedBenchmark.BenchmarkOutputsSetting}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="150" Header="Contract output name" DisplayMemberBinding="{Binding Path=Item.MappedTo}" />
                                <GridViewColumn Width="150" Header="Type" DisplayMemberBinding="{Binding Path=Item.IOItemDefinition.FriendlyType}" />
                                <GridViewColumn Width="150" Header="Solution output name">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type Experiments:ItemSettingCollection}">
                                            <ComboBox x:Name="OutputCombo" ItemsSource="{Binding Path=CandidateSettings}" SelectedItem="{Binding Path=SelectedSetting}"
                                                  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type Experiments:ItemSetting}">
                                                        <TextBlock Text="{Binding ItemSettingName}"/>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
                <!--<Label>Configuration</Label>-->
            </DataTemplate>

            <!-- Run Contest Panel -->
            <DataTemplate x:Key="executeBenchmark">
                <DockPanel>
                    <ContentPresenter Content="{Binding BenchmarkExperiment}"/>
                </DockPanel>
            </DataTemplate>

            <!-- Publish Results Panel -->
            <DataTemplate x:Key="questionToPublishResults">
                <DockPanel Background="White">
                    <Image DockPanel.Dock="Bottom" Name="CoestLogo" Height="106" Width="220" HorizontalAlignment="Right" Margin="0,0,20,40"
                       Source="/TraceLab.UI.WPF;component/Resources/CoEST_logo.png" OpacityMask="{x:Null}" />

                    <StackPanel Margin="0,10,40,20">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <!--labels-->
                                <ColumnDefinition Width="180" />
                                <!--values-->
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Image Grid.Column="0" Grid.Row="0" Width="132" Height="99"
                                HorizontalAlignment="Center" VerticalAlignment="Top"
                                Source="/TraceLab.UI.WPF;component/Resources/ResultsIcon.png" OpacityMask="{x:Null}" />

                            <TextBlock Grid.Column="1" Grid.Row="0" FontWeight="Bold" FontSize="16" VerticalAlignment="Center">Publish the results</TextBlock>

                            <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource LabelStyle}" TextWrapping="Wrap">
                                Would you like to publish the results to website?
                            </TextBlock>
                            <CheckBox Grid.Column="1" Grid.Row="1" Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding PublishResults}" />

                            <!-- Technique description -->
                            <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource LabelStyle}" TextWrapping="Wrap">Technique name:</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="2" Style="{StaticResource TextBoxStyle}" IsEnabled="{Binding Path=PublishResults}"
                                Text="{Binding Path=TechniqueName, UpdateSourceTrigger=PropertyChanged}" />

                            <!-- Technique description -->
                            <TextBlock Grid.Column="0" Grid.Row="3" Style="{StaticResource LabelStyle}" TextWrapping="Wrap">Technique description:</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="3" Style="{StaticResource ShortDescStyle}" IsEnabled="{Binding Path=PublishResults}"
                                Text="{Binding Path=TechniqueDescription, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>

                    </StackPanel>

                </DockPanel>
            </DataTemplate>

            <!-- Authenticate and Upload Results Panel -->
            <DataTemplate x:Key="authenticateAndUploadResults">

                <Controls:AuthenticationAndUploadControl DataContext="{Binding AuthenticationViewModel}" />

            </DataTemplate>
            
            <Selectors:BenchmarkWizardSelector x:Key="benchmarkWizardSelector" />

        </ResourceDictionary>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="local:BenchmarkWizardDialog">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentState}" Value="Process">
                    <Setter Property="ShowProcessArea" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="OpenComponentGraphCommand" Value="{Binding BenchmarkExperiment.OpenComponentGraph}" />
            <Setter Property="ToggleInfoPaneForNodeCommand" Value="{Binding BenchmarkExperiment.CurrentView.ToggleInfoPaneForNode}" />
        </Style>
    </Window.Style>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static Commands:RoutedCommands.OpenComponentGraphCommand}"
                    Executed="ExecuteOpenComponentGraphCommand" CanExecute="CanExecuteOpenComponentGraphCommand" />

        <CommandBinding Command="{x:Static Commands:RoutedCommands.ToggleNodeInfoCommand}"
                    Executed="ExecuteToggleNodeInfo"/>
    </Window.CommandBindings>

    <DockPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="keyBorderColumnDefinition" Width="195"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition x:Name="headerRowDefinition" Height="75"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="65"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Name="header" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="45"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Image Name="imageIcon" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" HorizontalAlignment="Left" Stretch="Fill" Margin="20,5,5,5" Opacity="128" />
                <TextBlock Grid.Row="0" Grid.ColumnSpan="2" FontSize="26" Name="headingLabel" FontWeight="Bold" Margin="15,0,0,0">Contest Wizard</TextBlock>
                <TextBlock Grid.Row="1" Grid.ColumnSpan="2" Name="summaryLabel" Margin="15,0,0,0" FontStyle="Italic" VerticalAlignment="Top" TextWrapping="Wrap">
                    This wizard will take you through the four steps needed to enter the contest. Please, note you must have your solution open before using this wizard.
                </TextBlock>
            </Grid>

            <Border Name="keyBorder" Grid.Row="1" Grid.Column="0" Grid.RowSpan="2" Background="WhiteSmoke" BorderThickness="0,2,0,0" BorderBrush="White">
                <ContentPresenter Content="{Binding CurrentState}">
                    <ContentPresenter.ContentTemplate>
                        <DataTemplate DataType="{x:Type viewmodels:BenchmarkWizardState}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="350"></RowDefinition>
                                </Grid.RowDefinitions>

                                <StackPanel Orientation="Vertical" Width="195" Grid.Row="0" Grid.RowSpan="2">
                                    <Label Height="28" Name="introductionLabel" Margin="30,10,0,0">Select Contest</Label>
                                    <Label Height="28" Name="confirmationLabel" Margin="30,0,0,0">Mapping</Label>
                                    <Label Height="28" Name="progressLabel" Margin="30,0,0,0">Execution</Label>
                                    <Label Height="28" Name="publishResultsLabel" Margin="30,0,0,0">Publish Results</Label>
                                </StackPanel>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding }" Value="{x:Static viewmodels:BenchmarkWizardState.SelectBenchmark}">
                                    <Setter Property="FontWeight" Value="Bold" TargetName="introductionLabel"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding }" Value="{x:Static viewmodels:BenchmarkWizardState.Configuration}">
                                    <Setter Property="FontWeight" Value="Bold" TargetName="confirmationLabel"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding }" Value="{x:Static viewmodels:BenchmarkWizardState.Process}">
                                    <Setter Property="FontWeight" Value="Bold" TargetName="progressLabel"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding }" Value="{x:Static viewmodels:BenchmarkWizardState.QuestionToPublishResults}">
                                    <Setter Property="FontWeight" Value="Bold" TargetName="publishResultsLabel"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding }" Value="{x:Static viewmodels:BenchmarkWizardState.AuthenticationAndUpload}">
                                    <Setter Property="FontWeight" Value="Bold" TargetName="publishResultsLabel"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ContentPresenter.ContentTemplate>
                </ContentPresenter>
            </Border>

            <Border Grid.Row="1" Grid.Column="1" BorderThickness="4,2,0,0" BorderBrush="White" Background="WhiteSmoke">
                <DockPanel Name="content">
                    <Controls:ProgressControl x:Name="executeBenchmarkProgress" DockPanel.Dock="Top">
                        <Controls:ProgressControl.Style>
                            <Style TargetType="{x:Type Controls:ProgressControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentState}" Value="Process">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentState}" Value="Configuration">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentState}" Value="SelectBenchmark">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentState}" Value="QuestionToPublishResults">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentState}" Value="AuthenticationAndUpload">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Controls:ProgressControl.Style>
                    </Controls:ProgressControl>

                    <ContentPresenter ContentTemplateSelector="{StaticResource benchmarkWizardSelector}">
                        <ContentPresenter.Content>
                            <MultiBinding Converter="{Converters:MultiBindingMultiValueConverter}">
                                <MultiBinding.Bindings>
                                    <Binding Path="."/>
                                    <Binding Path="CurrentState" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ContentPresenter.Content>
                    </ContentPresenter>

                </DockPanel>
            </Border>

            <Border Name="buttonBorder" Grid.Row="2" Grid.Column="1" BorderThickness="4,2,0,0" BorderBrush="White" Background="Transparent">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="10"/>
                    </Grid.ColumnDefinitions>
                    <Button Height="23" Name="backButton" Width="80" Command="{Binding BacktrackState}" Grid.Column="1">
                        Back
                    </Button>
                    <Button Height="23" Name="nextButton" Width="80" Command="{Binding AdvanceState}" Grid.Column="3"
                            Visibility="{Binding CanProcess, Converter={Converters:BoolConverter True=Hidden, False=Visible}}">
                        Next
                    </Button>
                    <Button Height="23" Name="processButton" Width="80" Command="{Binding Process}" 
                            CommandParameter="{Binding Path=., ElementName=executeBenchmarkProgress}" Grid.Column="3"
                            Visibility="{Binding CanProcess, Converter={Converters:BoolConverter True=Visible, False=Hidden}}">
                        Process
                    </Button>
                    <Button Height="23" Name="cancelButton" Width="80" Click="cancelButton_Click" Grid.Column="5">
                        Cancel
                    </Button>
                </Grid>
            </Border>

        </Grid>
    </DockPanel>
</Window>
