<!--
TraceLab - Software Traceability Instrument to Facilitate and Empower Traceability Research
Copyright (C) 2012-2013 CoEST - National Science Foundation MRI-R2 Grant # CNS: 0959924

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see<http://www.gnu.org/licenses/>.
-->

<Window x:Class="TraceLab.UI.WPF.Views.PackageBuilder.PackageBuilderMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:pkgsrc="clr-namespace:TraceLab.Core.PackageBuilder;assembly=TraceLab.Core"
        xmlns:local="clr-namespace:TraceLab.UI.WPF.Views.PackageBuilder"
        xmlns:wpf="clr-namespace:TraceLab.UI.WPF.Controls"
        xmlns:Converters="clr-namespace:TraceLab.UI.WPF.Converters"
        xmlns:Selectors="clr-namespace:TraceLab.UI.WPF.Selectors"
        xmlns:Core="clr-namespace:TraceLab.Core;assembly=TraceLab.Core"
        Title="Package Builder"
        Icon="/TraceLab.UI.WPF;component/Resources/Icon_PkgBuilder.ico"
        Background="SlateGray"
        Width="600"
        Height="600">
        
    <Window.Resources>
        <local:HasComponentsTemplateSelector x:Key="HasComponentsSelector" />
        <local:HasTypesTemplateSelector x:Key="HasTypesSelector" />

        <wpf:LevelToIndentConverter x:Key="LevelToIndentConverter"/>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="19" />
            <Setter Property="Height" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="19"
                            Height="13"
                            Background="Transparent">
                            <Border Width="9"
                                Height="9"
                                BorderThickness="1"
                                BorderBrush="#FF7898B5"
                                CornerRadius="1"
                                SnapsToDevicePixels="true">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="White" Offset=".2"/>
                                            <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path x:Name="ExpandPath"
                                  Margin="1,1,1,1"
                                  Fill="Black"
                                  Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 
                                  L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type wpf:TreeListViewExpander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpf:TreeListViewExpander}">
                        <ToggleButton x:Name="PART_Expander" 
                          Style="{StaticResource ExpandCollapseToggleStyle}" 
                          Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type wpf:TreeListViewItem}}}"
                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type wpf:TreeListViewItem}}}"
                          ClickMode="Press" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type wpf:TreeListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpf:TreeListViewItem}">
                        <StackPanel>
                            <Border Name="Bd"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                                <GridViewRowPresenter x:Name="PART_Header" 
                                                  Content="{TemplateBinding DataContext}" 
                                                  Columns="{TemplateBinding Columns}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Visibility="Visible" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type wpf:TreeListView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpf:TreeListView}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                            <DockPanel>
                                <GridViewHeaderRowPresenter Columns="{TemplateBinding Columns}" DockPanel.Dock="Top"/>
                                <ItemsPresenter/>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate DataType="{x:Type pkgsrc:PackageHeirarchyItem}" ItemsSource="{Binding Children}">
            <DockPanel AllowDrop="True" Drop="TreeView_Drop">
                <wpf:TreeListViewExpander />
                <Image Source="{Binding SourceFilePath, Converter={Converters:FilePathIconConverter}}" Height="16" Width="16" Margin="2"/>
                <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
            </DockPanel>
        </HierarchicalDataTemplate>

        <DataTemplate DataType="{x:Type pkgsrc:PackageFileSourceInfo}">
            <DockPanel AllowDrop="True" Drop="TreeView_Drop">
                <wpf:TreeListViewExpander Visibility="Hidden" />
                <Image Source="{Binding SourceFilePath, Converter={Converters:FilePathIconConverter}}" Height="16" Width="16" Margin="2"/>
                <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding SourceFilePath}" Margin="2"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type pkgsrc:PackageHeirarchyItem}" x:Key="HasComponentsCellTemplate">
            <CheckBox Focusable="False" IsChecked="{Binding HasComponents}" VerticalAlignment="Center" 
                      HorizontalAlignment="Center" ToolTip="Check if this directory contains component assemblies."/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type pkgsrc:PackageHeirarchyItem}" x:Key="HasTypesCellTemplate">
            <CheckBox Focusable="False" IsChecked="{Binding HasTypes}" VerticalAlignment="Center"
                      HorizontalAlignment="Center" ToolTip="Check if this directory contains type assemblies."/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type pkgsrc:PackageFileSourceInfo}" x:Key="EmptyCellTemplate">
        </DataTemplate>

        <DataTemplate x:Key="configurationPage">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <TextBlock Margin="15,15,15,15" FontSize="22" Foreground="White" FontWeight="Bold">Package experiment configuration</TextBlock>
                </Grid>

                <Grid Background="WhiteSmoke" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <CheckBox x:Name="cb1" Grid.Row="0" Margin="25,25,5,0" Content="{x:Static Core:Messages.PackageBuilderConfig1_IncludeIndependentFilesDirs}"
                              IsChecked="{Binding ExperimentPackageConfig.IncludeIndependentFilesDirs}" />
                    <TextBlock Grid.Row="1" FontStyle="Italic" TextWrapping="Wrap" Margin="45,5,25,0" 
                               Text="{x:Static Core:Messages.PackageBuilderConfig1_IncludeIndependentFilesDirs_Descr}" />

                    <CheckBox x:Name="cb2" Grid.Row="2" Margin="25,25,5,0" Content="{x:Static Core:Messages.PackageBuilderConfig2_IncludeOtherPackagesFilesDirs}"
                              IsChecked="{Binding ExperimentPackageConfig.IncludeOtherPackagesFilesDirs}" />
                    <TextBlock Grid.Row="3" FontStyle="Italic" TextWrapping="Wrap" Margin="45,5,25,0"
                               Text="{x:Static Core:Messages.PackageBuilderConfig2_IncludeOtherPackagesFilesDirs_Descr}" />

                    <CheckBox x:Name="cb3" Grid.Row="4" Margin="25,25,5,0" Content="{x:Static Core:Messages.PackageBuilderConfig3_IncludeOtherPackagesAssemblies}"
                              IsChecked="{Binding ExperimentPackageConfig.IncludeOtherPackagesAssemblies}" />
                    <TextBlock Grid.Row="5" FontStyle="Italic" TextWrapping="Wrap" Margin="45,5,25,0" 
                               Text="{x:Static Core:Messages.PackageBuilderConfig3_IncludeOtherPackagesAssemblies_Descr}" />

                    <Separator Grid.Row="6" Margin="25,25,25,25" />

                    <TextBlock Grid.Row="7" Margin="25,0,25,0" TextWrapping="Wrap" FontStyle="Italic" Text="{x:Static Core:Messages.PackageBuilderNote}" />
                </Grid>

                <Button x:Name="GenerateExperimentPackageButton" Grid.Row="2" Margin="0 5 0 0" Width="120" HorizontalAlignment="Right"
                        Click="GenerateExperimentPackageButton_Click" FontWeight="Bold" Content="Generate" />

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="packageFileTreeViewer">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>

                <DockPanel Grid.Row="0" Margin="0 0 0 5" Background="LightGray">
                    <TextBlock DockPanel.Dock="Left" Margin="5 5 0 5" VerticalAlignment="Center" FontWeight="Bold">Package Name:</TextBlock>
                    <TextBox Margin="5" Text="{Binding PackageSourceInfo.Root.Name, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>

                <Grid Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <wpf:TreeListView x:Name="PkgTreeView" Grid.Row="1" ItemsSource="{Binding PackageSourceInfo.Files}" AlternationCount="1" 
                                  AllowDrop="True" Drop="TreeView_Drop" DragOver="TreeView_DragOver" KeyUp="TreeListView_KeyUp">
                            <wpf:TreeListView.Columns>
                                <GridViewColumnCollection>
                                    <GridViewColumn Header="Name" Width="320" />
                                    <GridViewColumn Header="Has Components" Width="120" CellTemplateSelector="{StaticResource HasComponentsSelector}" />
                                    <GridViewColumn Header="Has Types" Width="100" CellTemplateSelector="{StaticResource HasTypesSelector}" />
                                </GridViewColumnCollection>
                            </wpf:TreeListView.Columns>
                            <wpf:TreeListView.ItemContainerStyle>
                                <Style TargetType="{x:Type wpf:TreeListViewItem}" BasedOn="{StaticResource {x:Type wpf:TreeListViewItem}}">
                                    <Setter Property="AllowDrop" Value="True"/>
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                    <Setter Property="IsExpanded" Value="True" />
                                    <EventSetter Event="DragOver" Handler="TreeViewItem_DragOver" />
                                </Style>
                            </wpf:TreeListView.ItemContainerStyle>
                        </wpf:TreeListView>
                    </ScrollViewer>

                    <Border x:Name="TreeViewBorder" Grid.RowSpan="1" BorderThickness="0" Background="#40000000"
                    Visibility="Visible" MouseLeftButtonDown="TreeView_MouseLeftButtonClick">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock Foreground="#DD000000" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                   FontSize="24" FontWeight="Bold" TextWrapping="Wrap">Drag and drop files/folders here</TextBlock>
                            <TextBlock Foreground="#DD000000" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                   FontSize="16" TextWrapping="Wrap">(Click to start)</TextBlock>
                        </StackPanel>
                    </Border>
                </Grid>

                <Button x:Name="BuildButton" Grid.Row="2" Margin="0 5 0 0" Width="120" HorizontalAlignment="Right"
                        Click="BuildPkgButton_Click" FontWeight="Bold" Content="Build Package"
                        IsEnabled="{Binding PackageSourceInfo.Root.Children.Count, Converter={Converters:CountToBoolConverter}}" />

            </Grid>
        </DataTemplate>

        <Selectors:PackageBuilderWizardSelector x:Key="packageBuilderWizardSelector" />

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <ContentPresenter ContentTemplateSelector="{StaticResource packageBuilderWizardSelector}">
            <ContentPresenter.Content>
                <MultiBinding Converter="{Converters:MultiBindingMultiValueConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="."/>
                        <!-- Provide the binding for the content panel -->
                        <Binding Path="CurrentState" UpdateSourceTrigger="PropertyChanged"/>
                        <!-- Implicit binding to wizard state for the selector -->
                    </MultiBinding.Bindings>
                </MultiBinding>
            </ContentPresenter.Content>
        </ContentPresenter>

        <Border x:Name="MainBorder" Grid.RowSpan="1" Margin="-5" BorderThickness="0" Background="#BB000000" Visibility="Hidden">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#DDFFFFFF"
                            TextWrapping="Wrap" FontSize="24" FontWeight="Bold" Text="Building... Please Wait!" />
        </Border>
    </Grid>

</Window>
