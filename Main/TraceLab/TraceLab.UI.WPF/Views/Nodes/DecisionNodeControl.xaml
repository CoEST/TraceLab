<!--
TraceLab - Software Traceability Instrument to Facilitate and Empower Traceability Research
Copyright (C) 2012-2013 CoEST - National Science Foundation MRI-R2 Grant # CNS: 0959924

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see<http://www.gnu.org/licenses/>.
-->

<ResourceDictionary
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Resources="clr-namespace:TraceLab.UI.WPF.Resources" 
             xmlns:GraphSharp_Controls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls" 
             xmlns:commands="clr-namespace:TraceLab.UI.WPF.Commands" 
             xmlns:NodeControls="clr-namespace:TraceLab.UI.WPF.Views.Nodes"
             xmlns:Controls="clr-namespace:TraceLab.UI.WPF.Controls"
             xmlns:Views="clr-namespace:TraceLab.UI.WPF.Views"
             xmlns:Converters="clr-namespace:TraceLab.UI.WPF.Converters"
             xmlns:ac="clr-namespace:TraceLab.UI.WPF.Controls.AdornedControl"
             mc:Ignorable="d" >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Views/Nodes/NodeResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="NodeControls:DecisionNodeControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NodeControls:DecisionNodeControl">
                    <AdornerDecorator>
                        <ac:AdornedControl HorizontalAdornerPlacement="Outside" VerticalAdornerPlacement="Outside" IsAdornerVisible="True">

                            <!-- component node control buttons - this is the adorner -->
                            <ac:AdornedControl.AdornerContent>
                                <Grid x:Name="PART_VertexControlButtonsGrid" HorizontalAlignment="Right">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="16" />
                                        <RowDefinition Height="16" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16" />
                                        <ColumnDefinition Width="16" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Create Connection Button (currently connection button is not displayed in any case -->
                                    <WrapPanel Grid.Row="0" Grid.Column="0" 
                                               Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type NodeControls:DecisionNodeControl}}, 
                                                                    Path=DisplayLinkCreationButton, Mode=OneTime, Converter={Converters:BoolToVisibilityConverter}}">
                                        <Button x:Name="PART_CreateConnectionButton" Style="{DynamicResource IconButton}" Opacity="0">
                                            <Button.InputBindings>
                                                <MouseBinding MouseAction="LeftClick" 
                                                                  Command="{x:Static commands:RoutedCommands.CreateConnectionCommand}"
                                                                  CommandParameter="{Binding Path=.}" />
                                            </Button.InputBindings>
                                            <Image Height="16" Width="16" Source="/TraceLab.UI.WPF;component/Resources/arrow.png" Style="{DynamicResource IconButtonImage}"/>
                                        </Button>
                                    </WrapPanel>

                                    <!-- Preview Remove Node Button -->
                                    <WrapPanel Grid.Row="0" Grid.Column="1"
                                               Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type NodeControls:DecisionNodeControl}}, 
                                                                    Path=DisplayRemoveNodeButton, Mode=OneTime, Converter={Converters:BoolToVisibilityConverter}}">
                                        <Button x:Name="PART_RemoveNodeButtonPreview" Style="{DynamicResource IconButton}"
                                            Opacity="0" Visibility="Visible">
                                            <Image Height="16" Width="16" Source="/TraceLab.UI.WPF;component/Resources/trashBin.png" Style="{DynamicResource IconButtonImage}"/>
                                        </Button>

                                        <!-- Actual Remove Node Button (at first it is collapsed until Preview button is clicked) -->
                                        <Button x:Name="PART_RemoveNodeButton" Style="{DynamicResource RemoveIconButton}"
                                            Command="{x:Static commands:RoutedCommands.RemoveNodeCommand}" 
                                            CommandParameter="{Binding Path=Vertex}"
                                            Visibility="Collapsed">
                                            <Image Height="16" Width="16" Source="/TraceLab.UI.WPF;component/Resources/trashBin.png" Style="{DynamicResource IconButtonImage}"/>
                                        </Button>
                                    </WrapPanel>

                                    <!-- Info Button -->
                                    <WrapPanel Grid.Row="1" Grid.Column="0" 
                                               Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type NodeControls:DecisionNodeControl}}, 
                                                                    Path=DisplayToogleInfoButton, Mode=OneTime, Converter={Converters:BoolToVisibilityConverter}}">
                                        <ToggleButton x:Name="PART_ToogleInfoButton" Style="{DynamicResource IconButton}"
                                                      Command="{x:Static commands:RoutedCommands.ToggleNodeInfoCommand}"
                                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type GraphSharp_Controls:VertexControl}}}"
                                                      IsChecked="{Binding Vertex.IsInfoPaneExpanded, Mode=OneWay}">
                                            <Image x:Name="PART_ToogleInfoButtonImage" Height="16" Width="16" Source="/TraceLab.UI.WPF;component/Resources/info.png" Style="{DynamicResource IconButtonImage}"/>
                                        </ToggleButton>
                                    </WrapPanel>

                                    <!-- Add scope button -->
                                    <WrapPanel Grid.Row="1" Grid.Column="1" 
                                               Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type NodeControls:DecisionNodeControl}}, 
                                                                    Path=DisplayAddScopeButton, Mode=OneTime, Converter={Converters:BoolToVisibilityConverter}}">
                                        <Button x:Name="PART_AddScopeButton" Style="{DynamicResource IconButton}" Opacity="0">
                                            <Button.InputBindings>
                                                <MouseBinding MouseAction="LeftClick" 
                                                                  Command="{x:Static commands:RoutedCommands.AddScopeToDecisionCommand}"
                                                                  CommandParameter="{Binding Path=.}" />
                                            </Button.InputBindings>
                                            <Image Height="16" Width="16" Source="/TraceLab.UI.WPF;component/Resources/addscope.png" Style="{DynamicResource IconButtonImage}"/>
                                        </Button>
                                    </WrapPanel>

                                </Grid>
                            </ac:AdornedControl.AdornerContent>

                            <!-- This the actual control that is being adorned -->
                            <Control x:Name="PART_NodeControl">
                                <Control.Template>
                                    <ControlTemplate>
                                        <Grid x:Name="OuterPanel">
                                            <Controls:AngleBorder x:Name="PART_NodeControlBorder" 
                                                    ClipToBounds="True"
                                                    Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GraphSharp_Controls:VertexControl}}}" 
                                                    AngleAmount="15, 0, 15, 0" 
                                                    BorderStrokeThickness="2"
                                                    BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GraphSharp_Controls:VertexControl}}}" >
                                                <Controls:AngleBorder.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Define composite component" Command="{x:Static commands:RoutedCommands.DefineCompositeComponentCommand}">
                                                            <MenuItem.Icon>
                                                                <Image Height="16" Source="/TraceLab.UI.WPF;component/Resources/DefineCompositeComponent.png" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                        <Separator />
                                                        <MenuItem Header="Remove selected nodes" Command="{x:Static commands:RoutedCommands.RemoveSelectedNodesCommand}">
                                                            <MenuItem.Icon>
                                                                <Image Height="16" Source="/TraceLab.UI.WPF;component/Resources/trashBin.png" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </Controls:AngleBorder.ContextMenu>

                                                <StackPanel DockPanel.Dock="Right" FlowDirection="LeftToRight" Orientation="Horizontal" Margin="0,3,0,3">

                                                    <ContentPresenter Margin="5,0,5,0">
                                                        <ContentPresenter.Content>
                                                            <Controls:EditableTextBlock x:Name="Label" Text="{Binding Vertex.Data.Metadata.Label, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                            IsEditable="{Binding Vertex.IsSelected}"
                                                                                            DelayEditableChange="True"
                                                                                            VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                        </ContentPresenter.Content>
                                                    </ContentPresenter>

                                                    <!-- Wait for Any/All incoming nodes button -->
                                                    <ToggleButton x:Name="PART_AnyAllButton"
                                                        IsChecked="{Binding Path=Vertex.Data.Metadata.WaitsForAllPredecessors, Mode=TwoWay}"
                                                        Opacity="0.25"
                                                        Style="{StaticResource AnyAllToggleStyle}"
                                                        Visibility="{Binding Path=Vertex.IncomingEdgesCount, Converter={Converters:AnyAllButtonVisibilityConverter}}"
                                                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type NodeControls:DecisionNodeControl}}, 
                                                                    Path=IsAnyAllButtonEnabled, Mode=OneTime}">

                                                        <Image Height="16" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                            <Image.Style>
                                                                <Style TargetType="Image">
                                                                    <Setter Property="Source" Value="/TraceLab.UI.WPF;component/Resources/all16.png" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ElementName=PART_AnyAllButton, Path=IsChecked}" Value="False">
                                                                            <Setter Property="Source" Value="/TraceLab.UI.WPF;component/Resources/any16.png" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Image.Style>
                                                        </Image>

                                                        <ToggleButton.Effect>
                                                            <Resources:GrayscaleEffect x:Name="grayscaleEffectAnyAll" />
                                                        </ToggleButton.Effect>

                                                        <ToggleButton.ToolTip>
                                                            <ContentPresenter Content="{StaticResource WaitForAllTooltip}" />
                                                        </ToggleButton.ToolTip>
                                                    </ToggleButton>
                                                </StackPanel>

                                            </Controls:AngleBorder>                                            
                                        </Grid>

                                        <!-- hide/show triggers for any all buttons, and error indication -->
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Vertex.HasError}" Value="True">
                                                <Setter TargetName="PART_NodeControlBorder" Property="Background" Value="Red"/>
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver" SourceName="PART_NodeControlBorder" Value="False">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!-- Gray out Any/All button -->
                                                            <DoubleAnimation Storyboard.TargetName="PART_AnyAllButton"
                                                                        Storyboard.TargetProperty="(Resources:GrayscaleEffect.Factor)"
                                                                        To="0" Duration="0:0:0.1"/>
                                                            <DoubleAnimation Storyboard.TargetName="PART_AnyAllButton"
                                                                        Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                        To="0.25" Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!-- Show Any/All button -->
                                                            <DoubleAnimation Storyboard.TargetName="grayscaleEffectAnyAll"
                                                                         Storyboard.TargetProperty="(Resources:GrayscaleEffect.Factor)"
                                                                         To="1" Duration="0:0:0.1"/>
                                                            <DoubleAnimation Storyboard.TargetName="PART_AnyAllButton"
                                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                         To="1" Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>

                                            <!-- Any/All Button Tooltip Triggers -->
                                            <DataTrigger Binding="{Binding ElementName=PART_AnyAllButton, Path=IsChecked}" Value="False">
                                                <Setter TargetName="PART_AnyAllButton" Property="ToolTip">
                                                    <Setter.Value>
                                                        <ContentPresenter Content="{StaticResource WaitForAnyTooltip}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Control.Template>
                            </Control>
                        </ac:AdornedControl>
                    </AdornerDecorator>

                    <!-- Visibility triggers for all adorners buttons -->
                    <ControlTemplate.Triggers>
                        
                        <!-- Trigger when mouse over the control to show adorner buttons and anyallbutton -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_NodeControl" Value="False"/>
                                <Condition Property="Grid.IsMouseOver" SourceName="PART_VertexControlButtonsGrid" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Reset state of buttons: shows Preview Remove Button and collapses Actual Remove Button  -->
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_RemoveNodeButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_RemoveNodeButtonPreview" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                        <!-- Hide adorner buttons -->
                                        <DoubleAnimation Storyboard.TargetName="PART_RemoveNodeButtonPreview"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="0" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_CreateConnectionButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="0" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_AddScopeButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Show adorner buttons -->
                                        <DoubleAnimation Storyboard.TargetName="PART_RemoveNodeButtonPreview"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="1" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_CreateConnectionButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="1" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_AddScopeButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!-- Triggers for toogle info button (it is seperate, as it has one additional condition that checks if info pane is expanded) -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_NodeControl, Path=IsMouseOver}" Value="False" />
                                <Condition Binding="{Binding ElementName=PART_VertexControlButtonsGrid, Path=IsMouseOver}" Value="False" />
                                <Condition Binding="{Binding Vertex.IsInfoPaneExpanded}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_ToogleInfoButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_ToogleInfoButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <!-- Data trigger that makes the ToogleInfoButton blue if info pane is expanded -->
                        <DataTrigger Binding="{Binding Vertex.IsInfoPaneExpanded}" Value="True">
                            <Setter Property="Effect" TargetName="PART_ToogleInfoButton">
                                <Setter.Value>
                                    <Resources:ColorToneEffect DarkColor="Blue" Toned="1.0" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Effect" TargetName="PART_ToogleInfoButtonImage">
                                <Setter.Value>
                                    <DropShadowEffect Color="Blue" Direction="225" ShadowDepth="4" BlurRadius="5" Opacity="0.6" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- When trash preview button is clicked, it hides itself and shows confirmation remove button -->
                        <EventTrigger RoutedEvent="Button.Click" SourceName="PART_RemoveNodeButtonPreview">
                            <BeginStoryboard Name="DisplayConfirmationRemoveNodeButton">
                                <Storyboard>
                                    <!-- Collapses Preview Remove Button and shows Actual Remove Button -->
                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_RemoveNodeButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_RemoveNodeButtonPreview" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!-- When red trash is displayed (confirmation remove button), and mouse is not over node, stop the storyboard -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_NodeControl, Path=IsMouseOver}" Value="False" />
                                <Condition Binding="{Binding ElementName=PART_VertexControlButtonsGrid, Path=IsMouseOver}" Value="False" />
                                <Condition Binding="{Binding ElementName=PART_RemoveNodeButton, Path=Visibility}" Value="Visible" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="DisplayConfirmationRemoveNodeButton" />
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
