<!--
TraceLab - Software Traceability Instrument to Facilitate and Empower Traceability Research
Copyright (C) 2012-2013 CoEST - National Science Foundation MRI-R2 Grant # CNS: 0959924

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see<http://www.gnu.org/licenses/>.
-->

<ResourceDictionary
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Resources="clr-namespace:TraceLab.UI.WPF.Resources" 
             xmlns:GraphSharp_Controls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls" 
             xmlns:commands="clr-namespace:TraceLab.UI.WPF.Commands" 
             xmlns:NodeControls="clr-namespace:TraceLab.UI.WPF.Views.Nodes"
             xmlns:Controls="clr-namespace:TraceLab.UI.WPF.Controls"
             xmlns:Views="clr-namespace:TraceLab.UI.WPF.Views"
             xmlns:Converters="clr-namespace:TraceLab.UI.WPF.Converters"
             xmlns:ac="clr-namespace:TraceLab.UI.WPF.Controls.AdornedControl"
             xmlns:controlsToolkit="clr-namespace:TraceLab.UI.WPF.Controls"
             mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/TraceLab.UI.WPF;component/Views/Nodes/NodeResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- Style for start and end node -->
    <Style TargetType="NodeControls:BasicNodeControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NodeControls:BasicNodeControl">
                    <AdornerDecorator>
                        <ac:AdornedControl HorizontalAdornerPlacement="Outside" VerticalAdornerPlacement="Outside" IsAdornerVisible="True">

                            <!-- This is the adorner, component node control buttons -->
                            <ac:AdornedControl.AdornerContent>
                                <Grid x:Name="PART_VertexControlButtonsGrid" HorizontalAlignment="Right">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="16" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16" />
                                    </Grid.ColumnDefinitions>
                                    <!-- Create Connection Button -->
                                    <WrapPanel Grid.Row="0" Grid.Column="0"
                                               Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type NodeControls:BasicNodeControl}}, 
                                                                    Path=DisplayLinkCreationButton, Mode=OneTime, Converter={Converters:BoolToVisibilityConverter}}">
                                        <Button x:Name="PART_CreateConnectionButton" Style="{DynamicResource IconButton}" Opacity="0">
                                            <Button.InputBindings>
                                                <MouseBinding MouseAction="LeftClick" 
                                                            Command="{x:Static commands:RoutedCommands.CreateConnectionCommand}"
                                                            CommandParameter="{Binding Path=.}" />
                                            </Button.InputBindings>
                                            <Image Height="16" Width="16" Source="/TraceLab.UI.WPF;component/Resources/arrow.png" Style="{DynamicResource IconButtonImage}"/>
                                        </Button>
                                    </WrapPanel>
                                </Grid>

                            </ac:AdornedControl.AdornerContent>

                            <DockPanel x:Name="OuterPanel">
                                <Border x:Name="PART_NodeControl" HorizontalAlignment="Stretch"
                                    Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GraphSharp_Controls:VertexControl}}}" 
                                    BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GraphSharp_Controls:VertexControl}}}" 
                                    BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GraphSharp_Controls:VertexControl}}}"
                                    CornerRadius="10,10,10,10"
                                    Padding="{Binding Padding, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GraphSharp_Controls:VertexControl}}}">
                                    <Border.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Define composite component" Command="{x:Static commands:RoutedCommands.DefineCompositeComponentCommand}">
                                                <MenuItem.Icon>
                                                    <Image Height="16" Source="/TraceLab.UI.WPF;component/Resources/DefineCompositeComponent.png" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Border.ContextMenu>
                                        
                                    <StackPanel FlowDirection="LeftToRight" Orientation="Horizontal">

                                        <ContentPresenter Margin="5,0,10,0" Content="{Binding Vertex.Data.Metadata.Label}" />

                                        <!-- Wait for Any/All incoming nodes button -->
                                        <ToggleButton x:Name="PART_AnyAllButton"
                                                    IsChecked="{Binding Path=Vertex.Data.Metadata.WaitsForAllPredecessors, Mode=TwoWay}"
                                                    Opacity="0.25"
                                                    Style="{StaticResource AnyAllToggleStyle}"
                                                    Visibility="{Binding Path=Vertex.IncomingEdgesCount, Converter={Converters:AnyAllButtonVisibilityConverter}, ConverterParameter=Collapsed}"
                                                    IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type NodeControls:BasicNodeControl}}, 
                                                                        Path=IsAnyAllButtonEnabled, Mode=OneTime}">

                                            <Image Height="16" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Setter Property="Source" Value="/TraceLab.UI.WPF;component/Resources/all16.png" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=PART_AnyAllButton, Path=IsChecked}" Value="False">
                                                                <Setter Property="Source" Value="/TraceLab.UI.WPF;component/Resources/any16.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>

                                            <ToggleButton.Effect>
                                                <Resources:GrayscaleEffect x:Name="grayscaleEffectAnyAll" />
                                            </ToggleButton.Effect>

                                            <ToggleButton.ToolTip>
                                                <ContentPresenter Content="{StaticResource WaitForAllTooltip}" />
                                            </ToggleButton.ToolTip>
                                        </ToggleButton>

                                    </StackPanel>
                                  
                                </Border>
                            </DockPanel>
                        </ac:AdornedControl>
                    </AdornerDecorator>

                    <ControlTemplate.Triggers>

                        <!-- Trigger when mouse over the control to show adorner buttons and anyallbutton -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="DockPanel.IsMouseOver" SourceName="OuterPanel" Value="False"/>
                                <Condition Property="Grid.IsMouseOver" SourceName="PART_VertexControlButtonsGrid" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Hide adorner buttons -->
                                        <DoubleAnimation Storyboard.TargetName="PART_CreateConnectionButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="0" Duration="0:0:0.1"/>

                                        <!-- Gray out Any/All button -->
                                        <DoubleAnimation Storyboard.TargetName="PART_AnyAllButton"
                                                     Storyboard.TargetProperty="(Resources:GrayscaleEffect.Factor)"
                                                     To="0" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_AnyAllButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="0.25" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Show adorner buttons -->
                                        <DoubleAnimation Storyboard.TargetName="PART_CreateConnectionButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="1" Duration="0:0:0.1"/>

                                        <!-- Show Any/All button -->
                                        <DoubleAnimation Storyboard.TargetName="grayscaleEffectAnyAll"
                                                     Storyboard.TargetProperty="(Resources:GrayscaleEffect.Factor)"
                                                     To="1" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_AnyAllButton"
                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!-- Any/All Button Tooltip Triggers -->
                        <DataTrigger Binding="{Binding ElementName=PART_AnyAllButton, Path=IsChecked}" Value="False">
                            <Setter TargetName="PART_AnyAllButton" Property="ToolTip">
                                <Setter.Value>
                                    <ContentPresenter Content="{StaticResource WaitForAnyTooltip}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
