<!--
TraceLab - Software Traceability Instrument to Facilitate and Empower Traceability Research
Copyright (C) 2012-2013 CoEST - National Science Foundation MRI-R2 Grant # CNS: 0959924

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see<http://www.gnu.org/licenses/>.
-->

<ResourceDictionary
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Views="clr-namespace:TraceLab.UI.WPF.Views"
             xmlns:Controls="clr-namespace:TraceLab.UI.WPF.Controls"
             xmlns:Converters="clr-namespace:TraceLab.UI.WPF.Converters"
             xmlns:GraphSharp_Controls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
             xmlns:GraphSharp_Converters="clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls"
             mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="RoutePointThumbStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <GraphSharp_Converters:EdgeRouteToPathDataConverter x:Key="routeToPathConverter" />

    <!-- 
    EDGE CONTROL Readonly style
    Base style for all edges in the subgraph or contest experiment (run in contest wizard).
    Edges don't change color on mouse over, and cannot be dragged.
    -->
    <Style TargetType="{x:Type GraphSharp_Controls:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GraphSharp_Controls:EdgeControl}">
                    <Canvas>
                        <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2"
                          MinWidth="1"
                          MinHeight="1"
                          x:Name="edgePath">
                            <Path.Data>
                                <MultiBinding Converter="{StaticResource routeToPathConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.CenterX" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.CenterY" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.VertexArea.ActualWidth" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.VertexArea.ActualHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.CenterX" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.CenterY" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.VertexArea.ActualWidth" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.VertexArea.ActualHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                Path="Edge.RoutePoints" Converter="{Converters:RoutePointsConverter}" />
                                </MultiBinding>
                            </Path.Data>
                        </Path>

                        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Edge.RoutePoints}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas Background="{x:Null}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Controls:RoutePointThumb x:Name="routePointThumb" Point="{Binding Path=.}" Cursor="SizeAll">
                                    </Controls:RoutePointThumb>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Canvas.Top" Value="{Binding Path=Y}" />
                                    <Setter Property="Canvas.Left" Value="{Binding Path=X}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GraphSharp_Controls:GraphElementBehaviour.HighlightTrigger" Value="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Panel.ZIndex" Value="-1"/>
        <Setter Property="Views:DockableGraph.IsLinkValid" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Views:DockableGraph.IsLinkValid" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InvalidEdgeBrush}" />
            </Trigger>

            <!-- If connection is fixed change the style -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Edge.IsFixed}" Value="True">
                <Setter Property="Foreground" Value="Silver" />
            </DataTrigger>

            <!-- If connection is set to invisible hide it -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Edge.IsVisible}" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>
