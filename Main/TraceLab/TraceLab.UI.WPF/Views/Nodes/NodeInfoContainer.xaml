<!--
TraceLab - Software Traceability Instrument to Facilitate and Empower Traceability Research
Copyright (C) 2012-2013 CoEST - National Science Foundation MRI-R2 Grant # CNS: 0959924

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see<http://www.gnu.org/licenses/>.
-->

<UserControl x:Class="TraceLab.UI.WPF.Views.Nodes.NodeInfoContainer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             mc:Ignorable="d" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:wpg="clr-namespace:WPG;assembly=WPG"
	         xmlns:WPFExtensions_AttachedBehaviours="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
             xmlns:controlsToolkit="clr-namespace:TraceLab.UI.WPF.Controls"
             xmlns:Controls="clr-namespace:TraceLab.UI.WPF.Controls" 
             xmlns:newConverters="clr-namespace:TraceLab.UI.WPF.Converters"
             xmlns:Selectors="clr-namespace:TraceLab.UI.WPF.Selectors" 
             xmlns:commands="clr-namespace:TraceLab.UI.WPF.Commands" 
             xmlns:local="clr-namespace:TraceLab.UI.WPF.Views.Nodes"
             xmlns:vm="clr-namespace:TraceLab.UI.WPF.ViewModels"
             Canvas.Top="{Binding Y}" Canvas.Left="{Binding X}"
             WPFExtensions_AttachedBehaviours:DragBehaviour.IsDragEnabled="True"
             WPFExtensions_AttachedBehaviours:DragBehaviour.X="{Binding X}"
             WPFExtensions_AttachedBehaviours:DragBehaviour.Y="{Binding Y}"

             IsKeyboardFocusWithinChanged="NodeInfoContainer_IsKeyboardFocusWithinChanged"
             PreviewMouseLeftButtonDown="NodeInfoContainer_PreviewMouseLeftButtonDown"
             x:Name="thisInfoContainer"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Storyboard x:Key="SelectedStoryboard">
            <ColorAnimation To="DarkBlue" Duration="0" 
                                        Storyboard.TargetName="InfoTipTitleBar"
                                        Storyboard.TargetProperty="Background.Color"/>
            <ColorAnimation To="AliceBlue" Duration="0"
                                        Storyboard.TargetName="InfoTipTitleName"
                                        Storyboard.TargetProperty="Foreground.Color"/>
            <Int32Animation To="5" Duration="0"
                                         Storyboard.TargetProperty="(Panel.ZIndex)" />
        </Storyboard>

        <Storyboard x:Key="UnselectedStoryboard">
            <ColorAnimation To="LightGray" Duration="0" 
                                        Storyboard.TargetName="InfoTipTitleBar"
                                        Storyboard.TargetProperty="Background.Color"/>
            <ColorAnimation To="Black" Duration="0"
                                        Storyboard.TargetName="InfoTipTitleName"
                                        Storyboard.TargetProperty="Foreground.Color"/>
            <Int32Animation To="0" Duration="0"
                                         Storyboard.TargetProperty="(Panel.ZIndex)" />
        </Storyboard>

    </UserControl.Resources>
    <UserControl.Style>
        <Style TargetType="{x:Type local:NodeInfoContainer}">
            <!--<Setter Property="OriginElement" Value="{Binding OriginVertexControl}" />-->
            <Setter Property="OriginElement">
                <Setter.Value>
                    <MultiBinding Converter="{newConverters:GetNodeControlConverter}">
                        <Binding Path="." RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="Node" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Style>
    
    <Border BorderThickness="1" BorderBrush="Black" x:Name="ComponentInfoTip">
        <StackPanel>

            <!--Info panel 'title' bar-->
            <Border Height="18" Focusable="True">
                <Grid Background="LightGray" x:Name="InfoTipTitleBar" Focusable="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Focusable="True" Foreground="Black" FontSize="10" Padding="0" Margin="0" x:Name="InfoTipTitleName"
                                   Text="{Binding Node.Data.Metadata.Label}" 
                                   TextAlignment="Left" 
                                   TextWrapping="NoWrap" 
                                   TextTrimming="CharacterEllipsis"
                                   VerticalAlignment="Center" />

                    <Button Content="X" Width="14" Height="14" Grid.Column="1" Margin="0" Padding="0" FontSize="8"
                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                            HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Command="{x:Static commands:RoutedCommands.ToggleNodeInfoCommand}"
                            CommandParameter="{Binding Path=OriginVertexControl}" />
                </Grid>
            </Border>
            
            <ContentPresenter Name="content" Content="{Binding}" />
        </StackPanel>
    </Border>
    <UserControl.Triggers>
        <!--<EventTrigger RoutedEvent="GotFocus">
            <EventTrigger.Actions>
            </EventTrigger.Actions>
        </EventTrigger>
        <EventTrigger RoutedEvent="LostFocus">
            <EventTrigger.Actions>
            </EventTrigger.Actions>
        </EventTrigger>-->
    </UserControl.Triggers>
</UserControl>
