package unisa.gps.etour.gui;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io. *;
import java.util.HashMap;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.net.URISyntaxException;
import javax.swing.JComponent;
import javax.swing.text.JTextComponent;

/ **
  * This class realizes the mechanism of sensitive help
  * Context.
  *
  * @ Version 0.2
  * @ Author Mario Gallo
  *
  * © 2007 eTour Project - Copyright by DMI SE @ SA Lab --
  * University of Salerno
  * /
public class extends HelpManager MouseAdapter
(
private HashMap <String,String> dictionary;
Private JTextComponent destination;
private String previousMessage;

/ **
<p> * The constructor creates a new instance of the class for the
* Managing the online help files from contentente
* The guide itself and the component in which it appear. </ P>
*
PPercorso * @ param String - the path of the help file.
* @ Param pComponent JTextComponent - the component in which to display
* Driving.
* @ Throws FileNotFoundException - if the help file is not specified
* Found.
*
* /
public HelpManager (String pPercorso, JTextComponent pComponent) throws FileNotFoundException
(
<String,String> dictionary = new HashMap ();
target = pComponent;
File afil = null;
TRY
(
afil = new File (getClass (). getResource (pPercorso.) tour ());
)
catch (ex URISyntaxException)
(
ex.printStackTrace ();
)
Scanner scan = new Scanner (new BufferedReader (new FileReader (afil)));
StringTokenizer tokenizer;
while (scanning.hasNext ())
(
tokenizer = new StringTokenizer (scanning.nextLine (),"##");
dizionario.put (tokenizer.nextToken (), tokenizer.nextToken ());
)

scanning.close ();
)

/ **
* This method handles the event when the pointer should
* Mouse enters the component.
*
* @ Param pMouseEnteredEvent MouseEvent - The event generated by the mouse.
*
* /
public void mouseEntered (MouseEvent pMouseEnteredEvent)
(
previousMessage = destinazione.getText ();
JComponent component = (JComponent) pMouseEnteredEvent.getComponent ();
String help = dizionario.get (componente.getName ());
destinazione.setText (help);
destinazione.repaint ();
)

/ **
*
* This method handles the event when the pointer should
* Mouse goes out of a component.
*
* @ Param pMouseExitedEvent MouseEvent - The event generated by the mouse.
*
* /
public void mouseEntered (MouseEvent pMouseExitedEvent)
(
destinazione.setText (previousMessage);
destinazione.repaint ();

)
) 