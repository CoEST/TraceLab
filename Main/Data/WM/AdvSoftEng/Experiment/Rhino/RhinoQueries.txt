unicod format control charact the unicod format control charact i e the charact in categori cf in the unicod charact databas such as left to right mark or right to left mark ar control code us to control theformat of a rang of text in the absenc of higher level protocol for thi such as mark up languag it is us to allow these in sourc text to facilit edit and displai the format control charact can occur anywher in the sourc text of an ecma script program thesecharact ar remov from the sourc text befor appli the lexic grammar sinc these charact areremov befor process string and regular express liter on must us a unicod escap sequencese 7 6 to includ a unicod format control charact insid a string or regular express liter 
white space white space charact ar us to improv sourc text readabl and to separ token indivisiblelex unit from each other but ar otherwis insignific white space mai occur between ani twotoken and mai occur within string where thei ar consid signific charact form part of theliter string valu but cannot appear within ani other kind of token the follow charact ar consid to be white space code point valu name formal nameu0009 tab tab u000b vertic tab vt u000c form feed ff u0020 space sp u00a0 no break space nbsp other categori zs ani other unicodespac separ usp syntax white space tab vt ff sp nbsp usp 
line termin like white space charact line termin charact ar us to improv sourc text readabl and tosepar token indivis lexic unit from each other howev unlik white space charact linetermin have some influenc over the behaviour of the syntact grammar in gener line terminatorsmai occur between ani two token but there ar a few place where thei ar forbidden by the syntacticgrammar a line termin cannot occur within ani token not even a string line termin also affectth process of automat semicolon insert 7 8 5 the follow charact ar consid to be line termin code point valu name formal nameu000a line feed lf u000d carriag return cr u2028 line separ ls u2029 paragraph separ ps syntax line termin lf cr ls ps 
comment descript comment can be either singl or multi line multi line comment cannot nest becaus a singl line comment can contain ani charact except a line termin charact and becauseof the gener rule that a token is alwai as long as possibl a singl line comment alwai consist of allcharact from the marker to the end of the line howev the line termin at the end of the line isnot consid to be part of the singl line comment it is recognis separ by the lexic grammar andbecom part of the stream of input element for the syntact grammar thi point is veri import becaus it impli that the presenc or absenc of singl line comment doe not affect the process ofautomat semicolon insert 7 9 comment behav like white space and ar discard except that if a multi line comment contain a linetermin charact then the entir comment is consid to be a line termin for purpos of parsingbi the syntact grammar syntax comment multi line comment singl line comment multi line comment multi line comment char multi line comment char multi line not asterisk char multi line comment char post asterisk comment charsopt post asterisk comment char multi line not forward slash or asterisk char multi line comment char post asterisk comment charsopt multi line not asterisk char sourc charact but not asterisk multi line not forward slash or asterisk char sourc charact but not forward slash or asterisk singl line comment singl line comment charsopt singl line comment char singl line comment char singl line comment charsopt singl line comment char sourc charact but not line termin 
reserv word descript reserv word cannot be us as identifi syntax reserv word keyword futur reserv word null liter boolean liter 
keyword the follow token ar ecma script keyword and mai not be us as identifi in ecma scriptprogram syntax keyword on ofbreak els new varcas final return voidcatch for switch whilecontinu function thi withdefault if throwdelet in trydo instanceof typeof 
futur reserv word the follow word ar us as keyword in propos extens and ar therefor reserv to allowfor the possibl of futur adopt of those extens syntax futur reserv word on ofabstract enum int shortboolean export interfac staticbyt extend long superchar final nativ synchronizedclass float packag throwsconst goto privat transientdebugg implement protect volatiledoubl import public 
identifi descript identifi ar interpret accord to the grammar given in section 5 16 of the upcom version 3 0 ofth unicod standard with some small modif thi grammar is base on both norm andinform charact categori specifi by the unicod standard the charact in the specifiedcategori in version 2 1 of the unicod standard must be treat as in those categori by all conform ecma script implement howev conform ecma script implement mai allow additionalleg identifi charact base on the categori assign from later version of unicod thi standard specifi on departur from the grammar given in the unicod standard the dollar sign and the underscor ar permit anywher in an identifi the dollar sign is intend for us onli inmechan gener code unicod escap sequenc ar also permit in identifi where thei contribut a singl charact to theidentifi as comput by the cv of the unicod escap sequenc see 7 8 4 the preced the unicod escap sequenc doe not contribut a charact to the identifi a unicod escap sequencecannot be us to put a charact into an identifi that would otherwis be illeg in other word if a unicod escap sequenc sequenc were replac by it unicod escap sequenc s cv the result must stillb a valid identifi that ha the exact same sequenc of charact as the origin identifi two identifi that ar canon equival accord to the unicod standard ar not equal unless theyar repres by the exact same sequenc of code point in other word conform ecma scriptimplement ar onli requir to do bitwis comparison on identifi the intent is that the incomingsourc text ha been convert to normalis form c befor it reach the compil syntax identifi identifi name but not reserv word identifi name identifi start identifi name identifi part identifi start unicod letter unicod escap sequenc identifi part identifi start unicod combin mark unicod digit unicod connector punctuat unicod escap sequenc unicod letterani charact in the unicod categori uppercas letter lu lowercas letter ll titlecas letter lt modifi letter lm other letter lo or letter number nl unicod combin markani charact in the unicod categori non space mark mn or combin space mark mc unicod digitani charact in the unicod categori decim number nd unicod connector punctuationani charact in the unicod categori connector punctuat pc unicod escap sequencese 7 8 4 hex digit on of0 1 2 3 4 5 6 7 8 9 a b c d e f a b c d e f 
punctuat syntax punctuat on of div punctuat on of 
null liter syntax null liter null semant the valu of the null liter null is the sole valu of the null type name null 
boolean liter syntax boolean liter truefals semant the valu of the boolean liter true is a valu of the boolean type name true the valu of the boolean liter fals is a valu of the boolean type name fals 
numer liter syntax numer liter decim liter hex integ liter decim liter decim integ liter decim digit expon partopt decim digit expon partopt decim integ liter expon partopt decim integ liter non zero digit decim digit decim digit decim digit decim digit decim digit decim digit on of0 1 2 3 4 5 6 7 8 9non zero digit on of1 2 3 4 5 6 7 8 9expon part expon indic sign integ expon indic on of esign integ decim digit decim digit decim digit hex integ liter 0x hex digit0x hex digit hex integ liter hex digit the sourc charact immedi follow a numer liter must not be an identifi start or decim digit notefor exampl 3ini an error and not the two input element 3 and in semant a numer liter stand for a valu of the number type thi valu is determin in two step first amathemat valu mv is deriv from the liter second thi mathemat valu is round asdescrib below the mv of numer liter decim liter is the mv of decim liter the mv of numer liter hex integ liter is the mv of hex integ liter the mv of decim liter decim integ liter is the mv of decim integ liter the mv of decim liter decim integ liter decim digit is the mv of decim integ literalplu the mv of decim digit time 10 n where n is the number of charact in decim digit the mv of decim liter decim integ liter expon part is the mv of decim integ literaltim 10e where e is the mv of expon part the mv of decim liter decim integ liter decim digit expon part is the mv of decim integ liter plu the mv of decim digit time 10 n time 10e where n is the number ofcharact in decim digit and e is the mv of expon part the mv of decim liter decim digit is the mv of decim digit time 10 n where n is thenumb of charact in decim digit the mv of decim liter decim digit expon part is the mv of decim digit time 10e n wheren is the number of charact in decim digit and e is the mv of expon part the mv of decim liter decim integ liter is the mv of decim integ liter the mv of decim liter decim integ liter expon part is the mv of decim integ literaltim 10e where e is the mv of expon part the mv of decim integ liter 0 is 0 the mv of decim integ liter non zero digit decim digit is the mv of non zero digit time 10n plu the mv of decim digit where n is the number of charact in decim digit the mv of decim digit decim digit is the mv of decim digit the mv of decim digit decim digit decim digit is the mv of decim digit time 10 plu the mv of decim digit the mv of expon part expon indic sign integ is the mv of sign integ the mv of sign integ decim digit is the mv of decim digit the mv of sign integ decim digit is the mv of decim digit the mv of sign integ decim digit is the neg of the mv of decim digit the mv of decim digit 0 or of hex digit 0 is 0 the mv of decim digit 1 or of non zero digit 1 or of hex digit 1 is 1 the mv of decim digit 2 or of non zero digit 2 or of hex digit 2 is 2 the mv of decim digit 3 or of non zero digit 3 or of hex digit 3 is 3 the mv of decim digit 4 or of non zero digit 4 or of hex digit 4 is 4 the mv of decim digit 5 or of non zero digit 5 or of hex digit 5 is 5 the mv of decim digit 6 or of non zero digit 6 or of hex digit 6 is 6 the mv of decim digit 7 or of non zero digit 7 or of hex digit 7 is 7 the mv of decim digit 8 or of non zero digit 8 or of hex digit 8 is 8 the mv of decim digit 9 or of non zero digit 9 or of hex digit 9 is 9 the mv of hex digit a or of hex digit a is 10 the mv of hex digit b or of hex digit b is 11 the mv of hex digit c or of hex digit c is 12 the mv of hex digit d or of hex digit d is 13 the mv of hex digit e or of hex digit e is 14 the mv of hex digit f or of hex digit f is 15 the mv of hex integ liter 0x hex digit is the mv of hex digit the mv of hex integ liter 0x hex digit is the mv of hex digit the mv of hex integ liter hex integ liter hex digit is the mv of hex integ liter time 16 plusth mv of hex digit onc the exact mv for a numer liter ha been determin it is then round to a valu of the number type if the mv is 0 then the round valu is 0 otherwis the round valu must be thenumb valu for the mv in the sens defin in 8 5 unless the liter is a decim liter and theliter ha more than 20 signific digit in which case the number valu mai be either the numbervalu for the mv of a liter produc by replac each signific digit after the 20th with a 0 digit orth number valu for the mv of a liter produc by replac each signific digit after the 20th witha 0 digit and then increment the liter at the 20th signific digit posit a digit is signific if iti not part of an expon part andit is not 0 orther is a nonzero digit to it left and there is a nonzero digit not in the expon part to it right 
string liter a string liter is zero or more charact enclos in singl or doubl quot each charact mai berepres by an escap sequenc syntax string liter doubl string charact singl string charact doubl string charact doubl string charact doubl string charact singl string charact singl string charact singl string charact doubl string charact sourc charact but not doubl quot or backslash or line termin escap sequenc singl string charact sourc charact but not singl quot or backslash or line termin escap sequenc escap sequenc charact escap sequence0 lookahead decim digit hex escap sequenc unicod escap sequenc charact escap sequenc singl escap charact non escap charact singl escap charact on ofb f n r t v non escap charact sourc charact but not escap charact or line termin escap charact singl escap charact decim digit hex escap sequenc x hex digit hex digit unicod escap sequenc u hex digit hex digit hex digit hex digit the definit of the nontermin hex digit is given in section 7 8 3 sourc charact is describ insect 2 and 6 a string liter stand for a valu of the string type the string valu sv of the liter is describ interm of charact valu cv contribut by the variou part of the string liter as part of thisprocess some charact within the string liter ar interpret as have a mathemat valu mv asdescrib below or in section 7 8 3 the sv of string liter is the empti charact sequenc the sv of string liter is the empti charact sequenc the sv of string liter doubl string charact is the sv of doubl string charact the sv of string liter singl string charact is the sv of singl string charact the sv of doubl string charact doubl string charact is a sequenc of on charact the cv of doubl string charact the sv of doubl string charact doubl string charact doubl string charact is a sequenc of the cv of doubl string charact follow by all the charact in the sv of doubl string charact in order the sv of singl string charact singl string charact is a sequenc of on charact the cv of singl string charact the sv of singl string charact singl string charact singl string charact is a sequenc of the cvof singl string charact follow by all the charact in the sv of singl string charact in order the cv of doubl string charact sourc charact but not doubl quot or backslash or line termin is the sourc charact charact itself the cv of doubl string charact escap sequenc is the cv of the escap sequenc the cv of singl string charact sourc charact but not singl quot or backslash or line termin is the sourc charact charact itself the cv of singl string charact escap sequenc is the cv of the escap sequenc the cv of escap sequenc charact escap sequenc is the cv of the charact escap sequenc the cv of escap sequenc 0 lookahead decim digit is a nul charact unicod valu 0000 the cv of escap sequenc hex escap sequenc is the cv of the hex escap sequenc the cv of escap sequenc unicod escap sequenc is the cv of the unicod escap sequenc the cv of charact escap sequenc singl escap charact is the charact whose code point valu isdetermin by the singl escap charact accord to the follow tabl escap sequenc code point valu name symbolb u0008 backspac bs t u0009 horizont tab ht n u000a line feed new line lf v u000b vertic tab vt f u000c form feed ff r u000d carriag return cr u0022 doubl quot u0027 singl quot u005c backslash the cv of charact escap sequenc non escap charact is the cv of the non escap charact the cv of non escap charact sourc charact but not escap charact or line termin is the sourc charact charact itself the cv of hex escap sequenc x hex digit hex digit is the charact whose code point valu is 16 timesth mv of the first hex digit plu the mv of the second hex digit the cv of unicod escap sequenc u hex digit hex digit hex digit hex digit is the charact whose codepoint valu is 4096 that is 163 time the mv of the first hex digit plu 256 that is 162 time the mv ofth second hex digit plu 16 time the mv of the third hex digit plu the mv of the fourth hex digit notea line termin charact cannot appear in a string liter even if preced by a backslash thecorrect wai to caus a line termin charact to be part of the string valu of a string liter is to usean escap sequenc such as n or u000a 
regular express liter a regular express liter is an input element that is convert to a reg exp object section 15 10 when it is scan the object is creat befor evalu of the contain program or function begin evalu of the liter produc a refer to that object it doe not creat a new object two regularexpress liter in a program evalu to regular express object that never compar as to eachoth even if the two liter content ar ident a reg exp object mai also be creat at runtim bynew reg exp section 15 10 4 or call the reg exp constructor as a function section 15 10 3 the product below describ the syntax for a regular express liter and ar us by the inputel scanner to find the end of the regular express liter the string of charact compris the regular express bodi and the regular express flag ar pass uninterpret to the regularexpress constructor which interpret them accord to it own more stringent grammar animplement mai extend the regular express constructor s grammar but it should not extend the regular express bodi and regular express flag product or the product us by theseproduct syntax regular express liter regular express bodi regular express flag regular express bodi regular express first char regular express char regular express char empti regular express char regular express char regular express first char non termin but not or or backslash sequenc regular express char non termin but not or backslash sequenc backslash sequenc non termin non termin sourc charact but not line termin regular express flag empti regular express flag identifi part noteregular express liter mai not be empti instead of repres an empti regular expressionliter the charact start a singl line comment to specifi an empti regular express us semant a regular express liter stand for a valu of the object type thi valu is determin in two step first the charact compris the regular express s regular express bodi and regular express flag product expans ar collect uninterpret into two string pattern and flag respect then the new reg exp constructor is call with two argument pattern and flagsand the result becom the valu of the regular express liter if the call to new reg exp generatesan error an implement mai at it discret either report the error immedi while scan theprogram or it mai defer the error until the regular express liter is evalu in the cours ofprogram execut 
rule of automat semicolon insert when as the program is pars from left to right a token call the offend token is encounteredthat is not allow by ani product of the grammar then a semicolon is automat insertedbefor the offend token if on or more of the follow condit is true 1 the offend token is separ from the previou token by at least on line termin 2 the offend token is when as the program is pars from left to right the end of the input stream of token isencount and the parser is unabl to pars the input token stream as a singl complet ecma script program then a semicolon is automat insert at the end of the input stream when as the program is pars from left to right a token is encount that is allow by someproduct of the grammar but the product is a restrict product and the token would be thefirst token for a termin or nontermin immedi follow the annot no line terminatorher within the restrict product and therefor such a token is call a restrict token andth restrict token is separ from the previou token by at least on line termin then asemicolon is automat insert befor the restrict token howev there is an addit overrid condit on the preced rule a semicolon is neverinsert automat if the semicolon would then be pars as an empti statement or if that semicolonwould becom on of the two semicolon in the header of a for statement section 12 6 3 notethes ar the onli restrict product in the grammar postfix express left hand side express no line termin here left hand side express no line termin here continu statement continu no line termin here identifi break statement break no line termin here identifi return statement return no line termin here express throw statement throw no line termin here express the practic effect of these restrict product is as follow when a or token is encount where the parser would treat it as a postfix oper and atleast on line termin occur between the preced token and the or token then asemicolon is automat insert befor the or token when a continu break return or throw token is encount and a line termin isencount befor the next token a semicolon is automat insert after the continu break return or throw token the result practic advic to ecma script programm is a postfix or oper should appear on the same line as it operand an express in a return or throw statement should start on the same line as the return orthrow token a label in a break or continu statement should be on the same line as the break orcontinu token 
the undefin type the undefin type ha exactli on valu call undefin ani variabl that ha not been assign avalu ha the valu undefin 
the string type the string type is the set of all finit order sequenc of zero or more 16 bit unsign integ valuesel the string type is gener us to repres textual data in a run ecma script program in which case each element in the string is treat as a code point valu see section 6 each element isregard as occupi a posit within the sequenc these posit ar index with nonnegativeinteg the first element if ani is at posit 0 the next element if ani at posit 1 and so on thelength of a string is the number of element i e 16 bit valu within it the empti string ha length zeroand therefor contain no element when a string contain actual textual data each element is consid to be a singl utf 16 unit whetheror not thi is the actual storag format of a string the charact within a string ar number as thoughthei were repres us utf 16 all oper on string except as otherwis state treat them assequ of undifferenti 16 bit unsign integ thei do not ensur the result string is innormalis form nor do thei ensur languag sensit result noteth rational behind these decis wa to keep the implement of string as simpl and highperforminga possibl the intent is that textual data come into the execut environ from outside g user input text read from a file or receiv over the network etc be convert to unicod normalis form c befor the run program see it usual thi would occur at the same timeincom text is convert from it origin charact encod to unicod and would impos noaddit overhead sinc it is recommend that ecma script sourc code be in normalis form c string liter ar guarante to be normalis if sourc text is guarante to be normalis as long asthei do not contain ani unicod escap sequenc 
properti attribut a properti can have zero or more attribut from the follow set attribut descript read onli the properti is a read onli properti attempt by ecma script code to write toth properti will be ignor note howev that in some case the valu of aproperti with the read onli attribut mai chang over time becaus of actionstaken by the host environ therefor read onli doe not mean constantand unchang dont enum the properti is not to be enumer by a for in enumer section 12 6 4 dont delet attempt to delet the properti will be ignor see the descript of thedelet oper in section 11 4 1 intern intern properti have no name and ar not directli access via the propertyaccessor oper how these properti ar access is implement specif how and when some of these properti ar us is specifi by the languagespecif 
intern properti and method intern properti and method ar not part of the languag thei ar defin by thi specificationpur for expositori purpos an implement of ecma script must behav as if it produc andoper upon intern properti in the manner describ here for the purpos of thi document thenam of intern properti ar enclos in doubl squar bracket when an algorithm us anintern properti of an object and the object doe not implement the indic intern properti a type error except is thrown there ar two type of access for normal non intern properti get and put correspond toretriev and assign respect nativ ecma script object have an intern properti call prototyp the valu of thi properti iseith null or an object and is us for implement inherit properti of the prototyp objectar visibl as properti of the child object for the purpos of get access but not for put access the follow tabl summaris the intern properti us by thi specif the descriptionind their behaviour for nativ ecma script object host object mai implement these internalmethod with ani implement depend behaviour or it mai be that a host object implement onlysom intern method and not other properti paramet descript prototyp none the prototyp of thi object class none a string valu indic the kind of thi object valu none intern state inform associ with thi object get properti name return the valu of the properti put properti name valu set the specifi properti to valu can put properti name return a boolean valu indic whether a put oper with properti name will succe ha properti properti name return a boolean valu indic whether the objectalreadi ha a member with the given name delet properti name remov the specifi properti from the object default valu hint return a default valu for the object which should bea primit valu not an object or refer construct a list of argument valuesprovid by the caller construct an object invok via the new oper object that implement thi intern method ar calledconstructor call a list of argument valuesprovid by the caller execut code associ with the object invok viaa function call express object that implement thisintern method ar call function ha instanc valu return a boolean valu indic whether valuedeleg behaviour to thi object of the nativ ecma script object onli function object implement ha instanc scope none a scope chain that defin the environ in which a function object is execut match string index test for a regular express match and return a match result valu see section 15 10 2 1 everi object includ host object must implement the prototyp and class properti and the get put can put ha properti delet and default valu method note howev that the default valu method mai for some object simpli throw a type error except the valu of the prototyp properti must be either an object or null and everi prototyp chainmust have finit length that is start from ani object recurs access the prototyp propertymust eventu lead to a null valu whether or not a nativ object can have a host object as it prototyp depend on the implement the valu of the class properti is defin by thi specif for everi kind of built in object thevalu of the class properti of a host object mai be ani valu even a valu us by a built in objectfor it class properti the valu of a class properti is us intern to distinguish differentkind of built in object note that thi specif doe not provid ani mean for a program to accessthat valu except through object prototyp to string see 15 2 4 2 for nativ object the get put can put ha properti delet and default valu method behav as describ in describ in 8 6 2 1 8 6 2 2 8 6 2 3 8 6 2 4 8 6 2 5 and 8 6 2 6 respect except that arrai object have a slightli differ implement of the put methodse 15 4 5 1 host object mai implement these method in ani manner unless specifi otherwis forexampl on possibl is that get and put for a particular host object inde fetch and storeproperti valu but ha properti alwai gener fals in the follow algorithm descript assum o is a nativ ecma script object and p is a string 
get p when the get method of o is call with properti name p the follow step ar taken 1 if o doesn t have a properti with name p go to step 4 2 get the valu of the properti 3 return result 2 4 if the prototyp of o is null return undefin 5 call the get method of prototyp with properti name p 6 return result 5 
put p v when the put method of o is call with properti p and valu v the follow step ar taken 1 call the can put method of o with name p 2 if result 1 is fals return 3 if o doesn t have a properti with name p go to step 6 4 set the valu of the properti to v the attribut of the properti ar not chang 5 return 6 creat a properti with name p set it valu to v and give it empti attribut 7 return note howev that if o is an arrai object it ha a more elabor put method 15 4 5 1 
default valu hint when the default valu method of o is call with hint string the follow step ar taken 1 call the get method of object o with argument to string 2 if result 1 is not an object go to step 5 3 call the call method of result 1 with o as the thi valu and an empti argument list 4 if result 3 is a primit valu return result 3 5 call the get method of object o with argument valu of 6 if result 5 is not an object go to step 9 7 call the call method of result 5 with o as the thi valu and an empti argument list 8 if result 7 is a primit valu return result 7 9 throw a type error except when the default valu method of o is call with hint number the follow step ar taken 1 call the get method of object o with argument valu of 2 if result 1 is not an object go to step 5 3 call the call method of result 1 with o as the thi valu and an empti argument list 4 if result 3 is a primit valu return result 3 5 call the get method of object o with argument to string 6 if result 5 is not an object go to step 9 7 call the call method of result 5 with o as the thi valu and an empti argument list 8 if result 7 is a primit valu return result 7 9 throw a type error except when the default valu method of o is call with no hint then it behav as if the hint were number unless o is a date object see 15 9 in which case it behav as if the hint were string the abov specif of default valu for nativ object can return onli primit valu if ahost object implement it own default valu method it must ensur that it default valu method can return onli primit valu 
to boolean the oper to boolean convert it argument to a valu of type boolean accord to the follow tabl input type result undefin fals null fals boolean the result equal the input argument no convers number the result is fals if the argument is 0 0 or na n otherwis the result is true string the result is fals if the argument is the empti string it length is zero otherwiseth result is true object true 
to number the oper to number convert it argument to a valu of type number accord to the follow tabl input type result undefin na nnull 0boolean the result is 1 if the argument is true the result is 0 if the argument is fals number the result equal the input argument no convers string see grammar and note below object appli the follow step 1 call to primit input argument hint number 2 call to number result 1 3 return result 2 
to number appli to the string type to number appli to string appli the follow grammar to the input string if the grammar cannotinterpret the string as an expans of string numer liter then the result of to number is na n string numer liter str white space str white space str numer liter str white space str white space str white space char str white space str white space char tab sp nbsp ff vt cr lf ls ps usp str numer liter str decim liter hex integ liter str decim liter str unsign decim liter str unsign decim liter str unsign decim liter str unsign decim liter infin decim digit decim digit expon partopt decim digit expon partopt decim digit expon partopt decim digit decim digit decim digit decim digit decim digit on of0 1 2 3 4 5 6 7 8 9expon part expon indic sign integ expon indic on of esign integ decim digit decim digit decim digit hex integ liter 0x hex digit0x hex digit hex integ liter hex digit hex digit on of0 1 2 3 4 5 6 7 8 9 a b c d e f a b c d e fsome differ should be note between the syntax of a string numer liter and a numer literalse 7 8 3 a string numer liter mai be preced and or follow by white space and or line termin a string numer liter that is decim mai have ani number of lead 0 digit a string numer liter that is decim mai be preced by or to indic it sign a string numer liter that is empti or contain onli white space is convert to 0 the convers of a string to a number valu is similar overal to the determin of the number valuefor a numer liter see 7 8 3 but some of the detail ar differ so the process for convert astr numer liter to a valu of number type is given here in full thi valu is determin in twostep first a mathemat valu mv is deriv from the string numer liter second thismathemat valu is round as describ below the mv of string numer liter empti is 0 the mv of string numer liter str white space is 0 the mv of string numer liter str white space str numer liter str white space is the mvof str numer liter no matter whether white space is present or not the mv of str numer liter str decim liter is the mv of str decim liter the mv of str numer liter hex integ liter is the mv of hex integ liter the mv of str decim liter str unsign decim liter is the mv of str unsign decim liter the mv of str decim liter str unsign decim liter is the mv of str unsign decim liter the mv of str decim liter str unsign decim liter is the neg of the mv of str unsign decim liter note that if the mv of str unsign decim liter is 0 the neg ofthi mv is also 0 the round rule describ below handl the convers of thi sign lessmathemat zero to a float point 0 or 0 as appropri the mv of str unsign decim liter infin is 1010000 a valu so larg that it will roundto the mv of str unsign decim liter decim digit is the mv of decim digit the mv of str unsign decim liter decim digit decim digit is the mv of the first decim digit plu the mv of the second decim digit time 10 n where n is the number ofcharact in the second decim digit the mv of str unsign decim liter decim digit expon part is the mv of decim digit times10 where e is the mv of expon part the mv of str unsign decim liter decim digit decim digit expon part is the mv of thefirst decim digit plu the mv of the second decim digit time 10 n time 10e where n is the numberof charact in the second decim digit and e is the mv of expon part the mv of str unsign decim liter decim digit is the mv of decim digit time 10 n where ni the number of charact in decim digit the mv of str unsign decim liter decim digit expon part is the mv of decim digit times10 n where n is the number of charact in decim digit and e is the mv of expon part the mv of str unsign decim liter decim digit is the mv of decim digit the mv of str unsign decim liter decim digit expon part is the mv of decim digit times10 where e is the mv of expon part the mv of decim digit decim digit is the mv of decim digit the mv of decim digit decim digit decim digit is the mv of decim digit time 10 plu the mv of decim digit the mv of expon part expon indic sign integ is the mv of sign integ the mv of sign integ decim digit is the mv of decim digit the mv of sign integ decim digit is the mv of decim digit the mv of sign integ decim digit is the neg of the mv of decim digit the mv of decim digit 0 or of hex digit 0 is 0 the mv of decim digit 1 or of hex digit 1 is 1 the mv of decim digit 2 or of hex digit 2 is 2 the mv of decim digit 3 or of hex digit 3 is 3 the mv of decim digit 4 or of hex digit 4 is 4 the mv of decim digit 5 or of hex digit 5 is 5 the mv of decim digit 6 or of hex digit 6 is 6 the mv of decim digit 7 or of hex digit 7 is 7 the mv of decim digit 8 or of hex digit 8 is 8 the mv of decim digit 9 or of hex digit 9 is 9 the mv of hex digit a or of hex digit a is 10 the mv of hex digit b or of hex digit b is 11 the mv of hex digit c or of hex digit c is 12 the mv of hex digit d or of hex digit d is 13 the mv of hex digit e or of hex digit e is 14 the mv of hex digit f or of hex digit f is 15 the mv of hex integ liter 0x hex digit is the mv of hex digit the mv of hex integ liter 0x hex digit is the mv of hex digit the mv of hex integ liter hex integ liter hex digit is the mv of hex integ liter time 16 plusth mv of hex digit onc the exact mv for a string numer liter ha been determin it is then round to a valu of the number type if the mv is 0 then the round valu is 0 unless the first non white space charact inth string numer liter is in which case the round valu is 0 otherwis the round valuemust be the number valu for the mv in the sens defin in 8 5 unless the liter includ a str unsign decim liter and the liter ha more than 20 signific digit in which case the numbervalu mai be either the number valu for the mv of a liter produc by replac each signific digitaft the 20th with a 0 digit or the number valu for the mv of a liter produc by replac eachsignific digit after the 20th with a 0 digit and then increment the liter at the 20th digit posit a digit is signific if it is not part of an expon part andit is not 0 orther is a nonzero digit to it left and there is a nonzero digit not in the expon part to it right 
to integ the oper to integ convert it argument to an integr numer valu thi oper function asfollow 1 call to number on the input argument 2 if result 1 is na n return 0 3 if result 1 is 0 0 or return result 1 4 comput sign result 1 floor ab result 1 5 return result 4 
to int32 sign 32 bit integ the oper to int32 convert it argument to on of 232 integ valu in the rang 231 through 231 1 inclus thi oper function as follow 1 call to number on the input argument 2 if result 1 is na n 0 0 or return 0 3 comput sign result 1 floor ab result 1 4 comput result 3 modulo 232 that is a finit integ valu k of number type with posit sign andless than 232 in magnitud such the mathemat differ of result 3 and k is mathemat aninteg multipl of 232 5 if result 4 is greater than or equal to 231 return result 4 232 otherwis return result 4 notegiven the abov definit of to int32 the to int32 oper is idempot if appli to a result that it produc the second applic leav that valueunchang to int32 to uint32 x is equal to to int32 x for all valu of x it is to preserv thi latter properti that and ar map to 0 to int32 map 0 to 0 
to uint32 unsign 32 bit integ the oper to uint32 convert it argument to on of 232 integ valu in the rang 0 through 232 1 inclus thi oper function as follow 1 call to number on the input argument 2 if result 1 is na n 0 0 or return 0 3 comput sign result 1 floor ab result 1 4 comput result 3 modulo 232 that is a finit integ valu k of number type with posit sign andless than 232 in magnitud such the mathemat differ of result 3 and k is mathemat aninteg multipl of 232 5 return result 4 notegiven the abov definit of to u int32 step 5 is the onli differ between to uint32 and to int32 the to uint32 oper is idempot if appli to a result that it produc the second applic leav that valueunchang to uint32 to int32 x is equal to to uint32 x for all valu of x it is to preserv thi latter properti that and ar map to 0 to uint32 map 0 to 0 
to uint16 unsign 16 bit integ the oper to uint16 convert it argument to on of 216 integ valu in the rang 0 through 216 1 inclus thi oper function as follow 1 call to number on the input argument 2 if result 1 is na n 0 0 or return 0 3 comput sign result 1 floor ab result 1 4 comput result 3 modulo 216 that is a finit integ valu k of number type with posit sign andless than 216 in magnitud such the mathemat differ of result 3 and k is mathemat aninteg multipl of 216 5 return result 4 notegiven the abov definit of to uint16 the substitut of 216 for 232 in step 4 is the onli differ between to uint32 and to uint16 to uint16 map 0 to 0 
to string appli to the number type the oper to string convert a number m to string format as follow 1 if m is na n return the string na n 2 if m is 0 or 0 return the string 0 3 if m is less than zero return the string concaten of the string and to string m 4 if m is infin return the string infin 5 otherwis let n k and s be integ such that k 1 10k 1 s 10k the number valu for s 10n k ism and k is as small as possibl note that k is the number of digit in the decim represent of s that s is not divis by 10 and that the least signific digit of s is not necessarili uniquelydetermin by these criteria 6 if k n 21 return the string consist of the k digit of the decim represent of s in order with no lead zero follow by n k occurr of the charact 0 7 if 0 n 21 return the string consist of the most signific n digit of the decim representationof s follow by a decim point follow by the remain k n digit of the decimalrepresent of s 8 if 6 n 0 return the string consist of the charact 0 follow by a decim point follow by n occurr of the charact 0 follow by the k digit of the decimalrepresent of s 9 otherwis if k 1 return the string consist of the singl digit of s follow by lowercasecharact e follow by a plu sign or minu sign accord to whether n 1 is posit orneg follow by the decim represent of the integ ab n 1 with no lead zero 10 return the string consist of the most signific digit of the decim represent of s followedbi a decim point folloarw by the remain k 1 digit of the decim represent of s follow by the lowercas charact e follow by a plu sign or minu sign accord towheth n 1 is posit or neg follow by the decim represent of the integ ab n 1 with no lead zero noteth follow observ mai be us as guidelin for implement but ar not part of the normativerequir of thi standard if x is ani number valu other than 0 then to number to string x is exactli the same number valu as x the least signific digit of s is not alwai uniqu determin by the requir list in step 5 for implement that provid more accur convers than requir by the rule abov it is recommendedthat the follow altern version of step 5 be us as a guidelin otherwis let n k and s be integ such that k 1 10k 1 s 10k the number valu for s 10n k is m and ki as small as possibl if there ar multipl possibl for s choos the valu of s for which s 10n k is closestin valu to m if there ar two such possibl valu of s choos the on that is even note that k is the number ofdigit in the decim represent of s and that s is not divis by 10 implementor of ecma script mai find us the paper and code written by david m gai for binari to decimalconvers of float point number gai david m correctli round binari decim and decim binari convers numer analysi manuscript 90 10 at t bell laboratori murrai hill new jersei novemb 30 1990 avail ashttp cm bell lab com cm cs doc 90 4 10 ps gz associ code avail ashttp cm bell lab com netlib fp dtoa c gz and as http cm belllab com netlib fp g fmt c gz and mai also be found at the variou netlib mirror site 
to object the oper to object convert it argument to a valu of type object accord to the follow tabl input type result undefin throw a type error except null throw a type error except boolean creat a new boolean object whose valu properti is set to the valu of theboolean see 15 6 for a descript of boolean object number creat a new number object whose valu properti is set to the valu of thenumb see 15 7 for a descript of number object string creat a new string object whose valu properti is set to the valu of thestr see 15 5 for a descript of string object object the result is the input argument no convers 
variabl instanti everi execut context ha associ with it a variabl object variabl and function declar in thesourc text ar ad as properti of the variabl object for function code paramet ar ad asproperti of the variabl object which object is us as the variabl object and what attribut ar us for the properti depend on thetyp of code but the remaind of the behaviour is gener on enter an execut context theproperti ar bound to the variabl object in the follow order for function code for each formal paramet as defin in the formal paramet list creat aproperti of the variabl object whose name is the identifi and whose attribut ar determin byth type of code the valu of the paramet ar suppli by the caller as argument to call ifth caller suppli fewer paramet valu than there ar formal paramet the extra formalparamet have valu undefin if two or more formal paramet share the same name henc thesam properti the correspond properti is given the valu that wa suppli for the last parameterwith thi name if the valu of thi last paramet wa not suppli by the caller the valu of thecorrespond properti is undefin for each function declar in the code in sourc text order creat a properti of the variableobject whose name is the identifi in the function declar whose valu is the result return bycreat a function object as describ in 13 and whose attribut ar determin by the type ofcod if the variabl object alreadi ha a properti with thi name replac it valu and attribut semant thi step must follow the creation of formal paramet list properti for each variabl declar or variabl declar no in in the code creat a properti of thevari object whose name is the identifi in the variabl declar or variabl declar no in whose valu is undefin and whose attribut ar determin by the type of code if there isalreadi a properti of the variabl object with the name of a declar variabl the valu of theproperti and it attribut ar not chang semant thi step must follow the creation of the formal paramet list and function declar properti in particular if a declar variabl hasth same name as a declar function or formal paramet the variabl declar doe not disturbth exist properti 
scope chain and identifi resolut everi execut context ha associ with it a scope chain a scope chain is a list of object that aresearch when evalu an identifi when control enter an execut context a scope chain iscreat and popul with an initi set of object depend on the type of code dure executionwithin an execut context the scope chain of the execut context is affect onli by withstat see 12 10 and catch claus see 12 14 dure execut the syntact product primari express identifi is evalu us thefollow algorithm 1 get the next object in the scope chain if there isn t on go to step 5 2 call the ha properti method of result 1 pass the identifi as the properti 3 if result 2 is true return a valu of type refer whose base object is result 1 and whoseproperti name is the identifi 4 go to step 1 5 return a valu of type refer whose base object is null and whose properti name is the identifi the result of evalu an identifi is alwai a valu of type refer with it member namecompon equal to the identifi string 
global object there is a uniqu global object 15 1 which is creat befor control enter ani execut context initi the global object ha the follow properti built in object such as math string date pars int etc these have attribut dont enum addit host defin properti thi mai includ a properti whose valu is the global objectitself for exampl in the html document object model the window properti of the global object isth global object itself as control enter execut context and as ecma script code is execut addit properti mai bead to the global object and the initi properti mai be chang 
activ object when control enter an execut context for function code an object call the activ object iscreat and associ with the execut context the activ object is initialis with a propertywith name argument and attribut dont delet the initi valu of thi properti is the argumentsobject describ below the activ object is then us as the variabl object for the purpos of variabl instanti the activ object is pure a specif mechan it is imposs for an ecma script programto access the activ object it can access member of the activ object but not the activationobject itself when the call oper is appli to a refer valu whose base object is an activationobject null is us as the thi valu of the call 
argument object when control enter an execut context for function code an argument object is creat andinitialis as follow the valu of the intern prototyp properti of the argument object is the origin objectprototyp object the on that is the initi valu of object prototyp see 15 2 3 1 a properti is creat with name calle and properti attribut dont enum the initi valu ofthi properti is the function object be execut thi allow anonym function to be recurs a properti is creat with name length and properti attribut dont enum the initi valu ofthi properti is the number of actual paramet valu suppli by the caller for each non neg integ arg less than the valu of the length properti a properti is createdwith name to string arg and properti attribut dont enum the initi valu of thi properti isth valu of the correspond actual paramet suppli by the caller the first actual parametervalu correspond to arg 0 the second to arg 1 and so on in the case when arg is less than thenumb of formal paramet for the function object thi properti share it valu with thecorrespond properti of the activ object thi mean that chang thi properti chang thecorrespond properti of the activ object and vice versa 
global code the scope chain is creat and initialis to contain the global object and no other variabl instanti is perform us the global object as the variabl object and us propertyattribut dont delet the thi valu is the global object 
eval code when control enter an execut context for eval code the previou activ execut context referredto as the call context is us to determin the scope chain the variabl object and the thi valu ifther is no call context then initialis the scope chain variabl instanti and determin ofth thi valu ar perform just as for global code the scope chain is initialis to contain the same object in the same order as the call context sscope chain thi includ object ad to the call context s scope chain by with statement andcatch claus variabl instanti is perform us the call context s variabl object and us emptyproperti attribut the thi valu is the same as the thi valu of the call context 
function code the scope chain is initialis to contain the activ object follow by the object in the scopechain store in the scope properti of the function object variabl instanti is perform us the activ object as the variabl object and usingproperti attribut dont delet the caller provid the thi valu if the thi valu provid by the caller is not an object includingth case where it is null then the thi valu is the global object 
the thi keyword the thi keyword evalu to the thi valu of the execut context 
arrai initialis an arrai initialis is an express describ the initialis of an arrai object written in a form of aliter it is a list of zero or more express each of which repres an arrai element enclos insquar bracket the element need not be liter thei ar evalu each time the arrai initialis isevalu arrai element mai be elid at the begin middl or end of the element list whenev a comma inth element list is not preced by an assign express i e a comma at the begin or afteranoth comma the miss arrai element contribut to the length of the arrai and increas the indexof subsequ element elid arrai element ar not defin syntax arrai liter elis element list element list elis element list elis assign express element list elis assign express elis elis semant the product arrai liter elis is evalu as follow 1 creat a new arrai as if by the express new arrai 2 evalu elis if not present us the numer valu zero 3 call the put method of result 1 with argument length and result 2 4 return result 1 the product arrai liter element list is evalu as follow 1 evalu element list 2 return result 1 the product arrai liter element list elis is evalu as follow 1 evalu element list 2 evalu elis if not present us the numer valu zero 3 call the get method of result 1 with argument length 4 call the put method of result 1 with argument length and result 2 result 3 5 return result 1 the product element list elis assign express is evalu as follow 1 creat a new arrai as if by the express new arrai 2 evalu elis if not present us the numer valu zero 3 evalu assign express 4 call get valu result 3 5 call the put method of result 1 with argument result 2 and result 4 6 return result 1 the product element list element list elis assign express is evalu as follow 1 evalu element list 2 evalu elis if not present us the numer valu zero 3 evalu assign express 4 call get valu result 3 5 call the get method of result 1 with argument length 6 call the put method of result 1 with argument result 2 result 5 and result 4 7 return result 1 the product elis is evalu as follow 1 return the numer valu 1 the product elis elis is evalu as follow 1 evalu elis 2 return result 1 1 
properti accessor properti ar access by name us either the dot notat member express identifi call express identifieror the bracket notat member express express call express express the dot notat is explain by the follow syntact convers member express identifieri ident in it behaviour to member express identifi string and similarli call express identifieri ident in it behaviour to call express identifi string where identifi string is a string liter contain the same sequenc of charact as the identifi the product member express member express express is evalu as follow 1 evalu member express 2 call get valu result 1 3 evalu express 4 call get valu result 3 5 call to object result 2 6 call to string result 4 7 return a valu of type refer whose base object is result 5 and whose properti name is result 6 the product call express call express express is evalu in exactli the samemann except that the contain call express is evalu in step 1 
the new oper the product new express new new express is evalu as follow 1 evalu new express 2 call get valu result 1 3 if type result 2 is not object throw a type error except 4 if result 2 doe not implement the intern construct method throw a type error except 5 call the construct method on result 2 provid no argument that is an empti list ofargu 6 return result 5 the product member express new member express argument is evalu as follow 1 evalu member express 2 call get valu result 1 3 evalu argument produc an intern list of argument valu 11 2 4 4 if type result 2 is not object throw a type error except 5 if result 2 doe not implement the intern construct method throw a type error except 6 call the construct method on result 2 provid the list result 3 as the argument valu 7 return result 6 
function call the product call express member express argument is evalu as follow 1 evalu member express 2 evalu argument produc an intern list of argument valu see 11 2 4 3 call get valu result 1 4 if type result 3 is not object throw a type error except 5 if result 3 doe not implement the intern call method throw a type error except 6 if type result 1 is refer result 6 is get base result 1 otherwis result 6 is null 7 if result 6 is an activ object result 7 is null otherwis result 7 is the same as result 6 8 call the call method on result 3 provid result 7 as the thi valu and provid the list result 2 as the argument valu 9 return result 8 the product call express call express argument is evalu in exactli the same manner except that the contain call express is evalu in step 1 noteresult 8 will never be of type refer if result 3 is a nativ ecma script object whether call ahost object can return a valu of type refer is implement depend 
postfix increment oper the product postfix express left hand side express no line termin here is evalu asfollow 1 evalu left hand side express 2 call get valu result 1 3 call to number result 2 4 add the valu 1 to result 3 us the same rule as for the oper see 11 6 3 5 call put valu result 1 result 4 6 return result 3 
postfix decrement oper the product postfix express left hand side express no line termin here is evalu asfollow 1 evalu left hand side express 2 call get valu result 1 3 call to number result 2 4 subtract the valu 1 from result 3 us the same rule as for the oper 11 6 3 5 call put valu result 1 result 4 6 return result 3 
the delet oper the product unari express delet unari express is evalu as follow 1 evalu unari express 2 if type result 1 is not refer return true 3 call get base result 1 4 call get properti name result 1 5 call the delet method on result 3 provid result 4 as the properti name to delet 6 return result 5 
the void oper the product unari express void unari express is evalu as follow 1 evalu unari express 2 call get valu result 1 3 return undefin 
the typeof oper the product unari express typeof unari express is evalu as follow 1 evalu unari express 2 if type result 1 is not refer go to step 4 3 if get base result 1 is null return undefin 4 call get valu result 1 5 return a string determin by type result 4 accord to the follow tabl type result undefin undefin null object boolean boolean number number string string object nativ anddoesn t implement call object object nativ andimpl call function object host implement depend 
prefix increment oper the product unari express unari express is evalu as follow 1 evalu unari express 2 call get valu result 1 3 call to number result 2 4 add the valu 1 to result 3 us the same rule as for the oper see 11 6 3 5 call put valu result 1 result 4 6 return result 4 
prefix decrement oper the product unari express unari express is evalu as follow 1 evalu unari express 2 call get valu result 1 3 call to number result 2 4 subtract the valu 1 from result 3 us the same rule as for the oper see 11 6 3 5 call put valu result 1 result 4 6 return result 4 
unari oper the unari oper convert it operand to number type the product unari express unari express is evalu as follow 1 evalu unari express 2 call get valu result 1 3 call to number result 2 4 return result 3 
bitwis not oper the product unari express unari express is evalu as follow 1 evalu unari express 2 call get valu result 1 3 call to int32 result 2 4 appli bitwis complement to result 3 the result is a sign 32 bit integ 5 return result 4 
logic not oper the product unari express unari express is evalu as follow 1 evalu unari express 2 call get valu result 1 3 call to boolean result 2 4 if result 3 is true return fals 5 return true 
appli the oper the oper perform multipl produc the product of it operand multipl iscommut multipl is not alwai associ in ecma script becaus of finit precis the result of a float point multipl is govern by the rule of ieee 754 doubl precisionarithmet if either operand is na n the result is na n the sign of the result is posit if both operand have the same sign neg if the operand havediffer sign multipl of an infin by a zero result in na n multipl of an infin by an infin result in an infin the sign is determin by the rulealreadi state abov multipl of an infin by a finit non zero valu result in a sign infin the sign isdetermin by the rule alreadi state abov in the remain case where neither an infin or na n is involv the product is comput andround to the nearest represent valu us ieee 754 round to nearest mode if the magnitudei too larg to repres the result is then an infin of appropri sign if the magnitud is toosmal to repres the result is then a zero of appropri sign the ecma script languag requiressupport of gradual underflow as defin by ieee 754 
appli the oper the oper perform divis produc the quotient of it operand the left operand is thedividend and the right operand is the divisor ecma script doe not perform integ divis theoperand and result of all divis oper ar doubl precis float point number the result ofdivis is determin by the specif of ieee 754 arithmet if either operand is na n the result is na n the sign of the result is posit if both operand have the same sign neg if the operand havediffer sign divis of an infin by an infin result in na n divis of an infin by a zero result in an infin the sign is determin by the rule alreadyst abov divis of an infin by a non zero finit valu result in a sign infin the sign is determinedbi the rule alreadi state abov divis of a finit valu by an infin result in zero the sign is determin by the rule alreadyst abov divis of a zero by a zero result in na n divis of zero by ani other finit valu result in zero with the sign determin by the rule alreadi state abov divis of a non zero finit valu by a zero result in a sign infin the sign is determin byth rule alreadi state abov in the remain case where neither an infin nor a zero nor na n is involv the quotient iscomput and round to the nearest represent valu us ieee 754 round to nearest mode ifth magnitud is too larg to repres the oper overflow the result is then an infin ofappropri sign if the magnitud is too small to repres the oper underflow and the result isa zero of the appropri sign the ecma script languag requir support of gradual underflow asdefin by ieee 754 
appli the oper the oper yield the remaind of it operand from an impli divis the left operand is thedividend and the right operand is the divisor notein c and c the remaind oper accept onli integr operand in ecma script it also acceptsflo point operand the result of a float point remaind oper as comput by the oper is not the same as theremaind oper defin by ieee 754 the ieee 754 remaind oper comput theremaind from a round divis not a truncat divis and so it behaviour is not analog tothat of the usual integ remaind oper instead the ecma script languag defin on floatingpointoper to behav in a manner analog to that of the java integ remaind oper thi mayb compar with the c librari function fmod the result of a ecma script float point remaind oper is determin by the rule of ieeearithmet if either operand is na n the result is na n the sign of the result equal the sign of the dividend if the dividend is an infin or the divisor is a zero or both the result is na n if the dividend is finit and the divisor is an infin the result equal the dividend if the dividend is a zero and the divisor is finit the result is the same as the dividend in the remain case where neither an infin nor a zero nor na n is involv the float pointremaind r from a dividend n and a divisor d is defin by the mathemat relat r n d q where q is an integ that is neg onli if n d is neg and posit onli if n d is posit andwhos magnitud is as larg as possibl without exceed the magnitud of the true mathematicalquoti of n and d 
the addit oper the addit oper either perform string concaten or numer addit the product addit express addit express multipl express is evalu asfollow 1 evalu addit express 2 call get valu result 1 3 evalu multipl express 4 call get valu result 3 5 call to primit result 2 6 call to primit result 4 7 if type result 5 is string or type result 6 is string go to step 12 note that thi step differsfrom step 3 in the comparison algorithm for the relat oper by us or instead of and 8 call to number result 5 9 call to number result 6 10 appli the addit oper to result 8 and result 9 see the note below 11 6 3 11 return result 10 12 call to string result 5 13 call to string result 6 14 concaten result 12 follow by result 13 15 return result 14 noteno hint is provid in the call to to primit in step 5 and 6 all nativ ecma script object except date object handl the absenc of a hint as if the hint number were given date object handl theabsenc of a hint as if the hint string were given host object mai handl the absenc of a hint in someoth manner 
the subtract oper the product addit express addit express multipl express is evalu asfollow 1 evalu addit express 2 call get valu result 1 3 evalu multipl express 4 call get valu result 3 5 call to number result 2 6 call to number result 4 7 appli the subtract oper to result 5 and result 6 see the note below 11 6 3 8 return result 7 
appli the addit oper to number the oper perform addit when appli to two operand of numer type produc the sum ofth operand the oper perform subtract produc the differ of two numer operand addit is a commut oper but not alwai associ the result of an addit is determin us the rule of ieee 754 doubl precis arithmet if either operand is na n the result is na n the sum of two infin of opposit sign is na n the sum of two infin of the same sign is the infin of that sign the sum of an infin and a finit valu is equal to the infinit operand the sum of two neg zero is 0 the sum of two posit zero or of two zero of opposit sign is 0 the sum of a zero and a nonzero finit valu is equal to the nonzero operand the sum of two nonzero finit valu of the same magnitud and opposit sign is 0 in the remain case where neither an infin nor a zero nor na n is involv and the operandshav the same sign or have differ magnitud the sum is comput and round to the nearestrepresent valu us ieee 754 round to nearest mode if the magnitud is too larg to repres the oper overflow and the result is then an infin of appropri sign the ecma scriptlanguag requir support of gradual underflow as defin by ieee 754 the oper perform subtract when appli to two operand of numer type produc thediffer of it operand the left operand is the minuend and the right operand is the subtrahend givennumer operand a and b it is alwai the case that a b produc the same result as a b 
the less than oper the product relat express relat express shift express is evalu as follow 1 evalu relat express 2 call get valu result 1 3 evalu shift express 4 call get valu result 3 5 perform the comparison result 2 result 4 see 11 8 5 6 if result 5 is undefin return fals otherwis return result 5 
the greater than oper the product relat express relat express shift express is evalu as follow 1 evalu relat express 2 call get valu result 1 3 evalu shift express 4 call get valu result 3 5 perform the comparison result 4 result 2 see 11 8 5 6 if result 5 is undefin return fals otherwis return result 5 
the less than or equal oper the product relat express relat express shift express is evalu as follow 1 evalu relat express 2 call get valu result 1 3 evalu shift express 4 call get valu result 3 5 perform the comparison result 4 result 2 see 11 8 5 6 if result 5 is true or undefin return fals otherwis return true 
the greater than or equal oper the product relat express relat express shift express is evalu as follow 1 evalu relat express 2 call get valu result 1 3 evalu shift express 4 call get valu result 3 5 perform the comparison result 2 result 4 see 11 8 5 6 if result 5 is true or undefin return fals otherwis return true 
the instanceof oper the product relat express relat express instanceof shift express is evaluateda follow 1 evalu relat express 2 call get valu result 1 3 evalu shift express 4 call get valu result 3 5 if result 4 is not an object throw a type error except 6 if result 4 doe not have a ha instanc method throw a type error except 7 call the ha instanc method of result 4 with paramet result 2 8 return result 7 
the equal oper the product equal express equal express relat express is evalu asfollow 1 evalu equal express 2 call get valu result 1 3 evalu relat express 4 call get valu result 3 5 perform the comparison result 4 result 2 see 11 9 3 6 return result 5 
the doe not equal oper the product equal express equal express relat express is evalu asfollow 1 evalu equal express 2 call get valu result 1 3 evalu relat express 4 call get valu result 3 5 perform the comparison result 4 result 2 see 11 9 3 6 if result 5 is true return fals otherwis return true 
the strict equal oper the product equal express equal express relat express is evalu asfollow 1 evalu equal express 2 call get valu result 1 3 evalu relat express 4 call get valu result 3 5 perform the comparison result 4 result 2 see below 6 return result 5 
condit oper syntax condit express logic or express logic or express assign express assign express condit express no in logic or express no in logic or express no in assign express assign express no in semant the product condit express logic or express assign express assign express is evalu as follow 1 evalu logic or express 2 call get valu result 1 3 call to boolean result 2 4 if result 3 is fals go to step 8 5 evalu the first assign express 6 call get valu result 5 7 return result 6 8 evalu the second assign express 9 call get valu result 8 10 return result 9 the condit express no in product is evalu in the same manner as the condit expressionproduct except that the contain logic or express no in assign express and assign express no in ar evalu instead of the contain logic or express first assign express and second assign express respect noteth grammar for a condit express in ecma script is a littl bit differ from that in c and java which each allow the second subexpress to be an express but restrict the third express to be a condit express the motiv for thi differ in ecma script is to allow an assignmentexpress to be govern by either arm of a condit and to elimin the confus and fairli uselesscas of a comma express as the centr express 
assign oper syntax assign express condit express left hand side express assign oper assign express assign express no in condit express no in left hand side express assign oper assign express no in assign oper on of semant the assign express no in product ar evalu in the same manner as the assign expressionproduct except that the contain condit express no in and assign express no in areevalu instead of the contain condit express and assign express respect 
compound assign op the product assign express left hand side express assign express where repres on of the oper indic abov is evalu as follow 1 evalu left hand side express 2 call get valu result 1 3 evalu assign express 4 call get valu result 3 5 appli oper to result 2 and result 4 6 call put valu result 1 result 5 7 return result 5 
comma oper syntax express assign express express assign express express no in assign express no in express no in assign express no in semant the product express express assign express is evalu as follow 1 evalu express 2 call get valu result 1 3 evalu assign express 4 call get valu result 3 5 return result 4 the express no in product is evalu in the same manner as the express product except thatth contain express no in and assign express no in ar evalu instead of the contain express and assign express respect 
variabl statement syntax variabl statement var variabl declar list variabl declar list variabl declar variabl declar list variabl declar variabl declar list no in variabl declar no in variabl declar list no in variabl declar no in variabl declar identifi initialiseropt variabl declar no in identifi initialis no inopt initialis assign express initialis no in assign express no in descript if the variabl statement occur insid a function declar the variabl ar defin with function localscop in that function as describ in s10 1 3 otherwis thei ar defin with global scope that is theyar creat as member of the global object as describ in 10 1 3 us properti attribut dont delet variabl ar creat when the execut scope is enter a block doe not defin a new executionscop onli program and function declar produc a new scope variabl ar initialis to undefinedwhen creat a variabl with an initialis is assign the valu of it assign express when the variabl statement is execut not when the variabl is creat semant the product variabl statement var variabl declar list is evalu as follow 1 evalu variabl declar list 2 return normal empti empti the product variabl declar list variabl declar is evalu as follow 1 evalu variabl declar the product variabl declar list variabl declar list variabl declar is evalu asfollow 1 evalu variabl declar list 2 evalu variabl declar the product variabl declar identifi is evalu as follow 1 return a string valu contain the same sequenc of charact as in the identifi the product variabl declar identifi initialis is evalu as follow 1 evalu identifi as describ in 11 1 2 2 evalu initialis 3 call get valu result 2 4 call put valu result 1 result 3 5 return a string valu contain the same sequenc of charact as in the identifi the product initialis assign express is evalu as follow 1 evalu assign express 2 return result 1 the variabl declar list no in variabl declar no in and initialis no in product ar evaluatedin the same manner as the variabl declar list variabl declar and initialis product exceptthat the contain variabl declar list no in variabl declar no in initialis no in and assign express no in ar evalu instead of the contain variabl declar list variabl declar initialis and assign express respect 
express statement syntax express statement lookahead function express note that an express statement cannot start with an open curli brace becaus that might make itambigu with a block also an express statement cannot start with the function keyword becausethat might make it ambigu with a function declar semant the product express statement lookahead function express is evalu as follow 1 evalu express 2 call get valu result 1 3 return normal result 2 empti 
the if statement syntax if statement if express statement els statementif express statement each els for which the choic of associ if is ambigu shall be associ with the nearestposs if that would otherwis have no correspond els semant the product if statement if express statement els statement is evalu as follow 1 evalu express 2 call get valu result 1 3 call to boolean result 2 4 if result 3 is fals go to step 7 5 evalu the first statement 6 return result 5 7 evalu the second statement 8 return result 7 the product if statement if express statement is evalu as follow 1 evalu express 2 call get valu result 1 3 call to boolean result 2 4 if result 3 is fals return normal empti empti 5 evalu statement 6 return result 5 
the do while statement the product do statement while express is evalu as follow 1 let v empti 2 evalu statement 3 if result 2 valu is not empti let v result 2 valu 4 if result 2 type is continu and result 2 target is in the current label set go to step 7 5 if result 2 type is break and result 2 target is in the current label set return normal v empti 6 if result 2 is an abrupt complet return result 2 7 evalu express 8 call get valu result 7 9 call to boolean result 8 10 if result 9 is true go to step 2 11 return normal v empti 
the while statement the product iter statement while express statement is evalu as follow 1 let v empti 2 evalu express 3 call get valu result 2 4 call to boolean result 3 5 if result 4 is fals return normal v empti 6 evalu statement 7 if result 6 valu is not empti let v result 6 valu 8 if result 6 type is continu and result 6 target is in the current label set go to 2 9 if result 6 type is break and result 6 target is in the current label set return normal v empti 10 if result 6 is an abrupt complet return result 6 11 go to step 2 
the for statement the product iter statement for express no in express express statementi evalu as follow 1 if the first express is not present go to step 4 2 evalu express no in 3 call get valu result 2 thi valu is not us 4 let v empti 5 if the first express is not present go to step 10 6 evalu the first express 7 call get valu result 6 8 call to boolean result 7 9 if result 8 is fals go to step 19 10 evalu statement 11 if result 10 valu is not empti let v result 10 value12 if result 10 type is break and result 10 target is in the current label set go to step 19 13 if result 10 type is continu and result 10 target is in the current label set go to step 15 14 if result 10 is an abrupt complet return result 10 15 if the second express is not present go to step 5 16 evalu the second express 17 call get valu result 16 thi valu is not us 18 go to step 5 19 return normal v empti the product iter statement for var variabl declar list no in express express statement is evalu as follow 1 evalu variabl declar list no in 2 let v empti 3 if the first express is not present go to step 8 4 evalu the first express 5 call get valu result 4 6 call to boolean result 5 7 if result 6 is fals go to step 14 8 evalu statement 9 if result 8 valu is not empti let v result 8 valu 10 if result 8 type is break and result 8 target is in the current label set go to step 17 11 if result 8 type is continu and result 8 target is in the current label set go to step 13 12 if result 8 is an abrupt complet return result 8 13 if the second express is not present go to step 3 14 evalu the second express 15 call get valu result 14 thi valu is not us 16 go to step 3 17 return normal v empti 
the for in statement the product iter statement for left hand side express in express statement isevalu as follow 1 evalu the express 2 call get valu result 1 3 call to object result 2 4 let v empti 5 get the name of the next properti of result 3 that doesn t have the dont enum attribut if there isno such properti go to step 14 6 evalu the left hand side express it mai be evalu repeatedli 7 call put valu result 6 result 5 8 evalu statement 9 if result 8 valu is not empti let v result 8 valu 10 if result 8 type is break and result 8 target is in the current label set go to step 14 11 if result 8 type is continu and result 8 target is in the current label set go to step 5 12 if result 8 is an abrupt complet return result 8 13 go to step 5 14 return normal v empti the product iter statement for var variabl declar no in in express statement isevalu as follow 1 evalu variabl declar no in 2 evalu express 3 call get valu result 2 4 call to object result 3 5 let v empti 6 get the name of the next properti of result 4 that doesn t have the dont enum attribut if there isno such properti go to step 15 7 evalu result 1 as if it were an identifi see 0 ye it mai be evalu repeatedli 8 call put valu result 7 result 6 9 evalu statement 10 if result 9 valu is not empti let v result 9 valu 11 if result 9 type is break and result 9 target is in the current label set go to step 15 12 if result 9 type is continu and result 9 target is in the current label set go to step 6 13 if result 8 is an abrupt complet return result 8 14 go to step 6 15 return normal v empti the mechan of enumer the properti step 5 in the first algorithm step 6 in the second isimplement depend the order of enumer is defin by the object properti of the objectb enumer mai be delet dure enumer if a properti that ha not yet been visit duringenumer is delet then it will not be visit if new properti ar ad to the object beingenumer dure enumer the newli ad properti ar not guarante to be visit in the activeenumer enumer the properti of an object includ enumer properti of it prototyp and theprototyp of the prototyp and so on recurs but a properti of a prototyp is not enumer if it isshadow becaus some previou object in the prototyp chain ha a properti with the same name 
the continu statement syntax continu statement continu no line termin here identifi semant a program is consid syntact incorrect if either of the follow ar true the program contain a continu statement without the option identifi which is not nest directli or indirectli but not cross function boundari within an iter statement the program contain a continu statement with the option identifi where identifi doe notappear in the label set of an enclos but not cross function boundari iter statement a continu statement without an identifi is evalu as follow 1 return continu empti empti a continu statement with the option identifi is evalu as follow 1 return continu empti identifi 
the break statement syntax break statement break no line termin here identifi semant a program is consid syntact incorrect if either of the follow ar true the program contain a break statement without the option identifi which is not nest directlyor indirectli but not cross function boundari within an iter statement or a switch statement the program contain a break statement with the option identifi where identifi doe not appearin the label set of an enclos but not cross function boundari statement a break statement without an identifi is evalu as follow 1 return break empti empti a break statement with an identifi is evalu as follow 1 return break empti identifi 
the return statement syntax return statement return no line termin here express semant an ecma script program is consid syntact incorrect if it contain a return statement that is notwithin a function bodi a return statement caus a function to ceas execut and return a valu to thecal if express is omit the return valu is undefin otherwis the return valu is the valu of express the product return statement return no line termin here express is evalu as 1 if the express is not present return return undefin empti 2 evalu express 3 call get valu result 2 4 return return result 3 empti 
the with statement syntax with statement with express statement descript the with statement add a comput object to the front of the scope chain of the current executioncontext then execut a statement with thi augment scope chain then restor the scope chain semant the product with statement with express statement is evalu as follow 1 evalu express 2 call get valu result 1 3 call to object result 2 4 add result 3 to the front of the scope chain 5 evalu statement us the augment scope chain from step 4 6 let c be result 5 if an except wa thrown in step 5 let c be throw v empti where v is theexcept execut now proce as if no except were thrown 7 remov result 3 from the front of the scope chain 8 return c noteno matter how control leav the embed statement whether normal or by some form of abruptcomplet or except the scope chain is alwai restor to it former state 
the switch statement syntax switch statement switch express case block case block case claus case claus default claus case claus case claus case claus case claus case claus case claus case express statement list default claus default statement list semant the product switch statement switch express case block is evalu as follow 1 evalu express 2 call get valu result 1 3 evalu case block pass it result 2 as a paramet 4 if result 3 type is break and result 3 target is in the current label set return normal result 3 valu empti 5 return result 3 the product case block case claus default claus case claus is given an input paramet input and is evalu as follow 1 let a be the list of case claus item in the first case claus in sourc text order 2 for the next case claus in a evalu case claus if there is no such case claus go to step 7 3 if input is not equal to result 2 as defin by the oper go to step 2 4 evalu the statement list of thi case claus 5 if result 4 is an abrupt complet then return result 4 6 go to step 13 7 let b be the list of case claus item in the second case claus in sourc text order 8 for the next case claus in b evalu case claus if there is no such case claus go to step 15 9 if input is not equal to result 8 as defin by the oper go to step 8 10 evalu the statement list of thi case claus 11 if result 10 is an abrupt complet then return result 10 12 go to step 18 13 for the next case claus in a evalu the statement list of thi case claus if there is no such case claus go to step 15 14 if result 13 is an abrupt complet then return result 13 15 execut the statement list of default claus 16 if result 15 is an abrupt complet then return result 15 17 let b be the list of case claus item in the second case claus in sourc text order 18 for the next case claus in b evalu the statement list of thi case claus if there is no such case claus return normal empti empti 19 if result 18 is an abrupt complet then return result 18 20 go to step 18 the product case claus case express statement list is evalu as follow 1 evalu express 2 call get valu result 1 3 return result 2 noteevalu case claus doe not execut the associ statement list it simpli evalu the expressionand return the valu which the case block algorithm us to determin which statement list to startexecut 
label statement syntax label statement identifi statement semant a statement mai be prefix by a label label statement ar onli us in conjunct with labelledbreak and continu statement ecma script ha no goto statement an ecma script program is consid syntact incorrect if it contain a label statement that isenclos by a label statement with the same identifi as label thi doe not appli to label appearingwithin the bodi of a function declar that is nest directli or indirectli within a label statement the product identifi statement is evalu by ad identifi to the label set of statement andthen evalu statement if the label statement itself ha a non empti label set these label ar alsoad to the label set of statement befor evalu it if the result of evalu statement is break v l where l is equal to identifi the product result in normal v empti prior to the evalu of a label statement the contain statement is regard as possess an emptylabel set except if it is an iter statement or a switch statement in which case it is regard aspossess a label set consist of the singl element empti 
the throw statement syntax throw statement throw no line termin here express semant the product throw statement throw no line termin here express is evalu as 1 evalu express 2 call get valu result 1 3 return throw result 2 empti 
the try statement syntax try statement try block catchtri block finallytri block catch final catch catch identifi block final final block descript the try statement enclos a block of code in which an except condit can occur such as aruntim error or a throw statement the catch claus provid the except handl code when acatch claus catch an except it identifi is bound to that except semant the product try statement try block catch is evalu as follow 1 evalu block 2 if result 1 type is not throw return result 1 3 evalu catch with paramet result 1 4 return result 3 the product try statement try block final is evalu as follow 1 evalu block 2 evalu final 3 if result 2 type is normal return result 1 4 return result 2 the product try statement try block catch final is evalu as follow 1 evalu block 2 let c result 1 3 if result 1 type is not throw go to step 6 4 evalu catch with paramet result 1 5 if result 4 type is not normal let c result 4 6 evalu final 7 if result 6 type is normal return c 8 return result 6 the product catch catch identifi block is evalu as follow 1 let c be the paramet that ha been pass to thi product 2 creat a new object as if by the express new object 3 creat a properti in the object result 2 the properti s name is identifi valu is c valu andattribut ar dont delet 4 add result 2 to the front of the scope chain 5 evalu block 6 remov result 2 from the front of the scope chain 7 return result 5 the product final final block is evalu as follow 1 evalu block 2 return result 1 
nativ ecma script object there ar certain built in object avail whenev an ecma script program begin execut on theglob object is in the scope chain of the execut program other ar access as initi properti of theglob object unless specifi otherwis the class properti of a built in object is function if that built in objectha a call properti or object if that built in object doe not have a call properti mani built in object ar function thei can be invok with argument some of them furthermor areconstructor thei ar function intend for us with the new oper for each built in function thisspecif describ the argument requir by that function and properti of the function object for eachbuilt in constructor thi specif furthermor describ properti of the prototyp object of thatconstructor and properti of specif object instanc return by a new express that invok thatconstructor unless otherwis specifi in the descript of a particular function if a function or constructor describ inthi section is given fewer argument than the function is specifi to requir the function or constructor shallbehav exactli as if it had been given suffici addit argument each such argument be theundefin valu unless otherwis specifi in the descript of a particular function if a function or constructor describ inthi section is given more argument than the function is specifi to allow the behaviour of the function orconstructor is undefin in particular an implement is permit but not requir to throw a type error except in thi case noteimplement that add addit capabl to the set of built in function ar encourag to do so byad new function rather than ad new paramet to exist function everi built in function and everi built in constructor ha the function prototyp object which is the initialvalu of the express function prototyp 15 3 2 1 as the valu of it intern prototyp properti everi built in prototyp object ha the object prototyp object which is the initi valu of the express object prototyp 15 3 2 1 as the valu of it intern prototyp properti except the objectprototyp object itself none of the built in function describ in thi section shall implement the intern construct methodunless otherwis specifi in the descript of a particular function none of the built in function describedin thi section shall initi have a prototyp properti unless otherwis specifi in the descript of aparticular function everi built in function object describ in thi section whether as a constructor anordinari function or both ha a length properti whose valu is an integ unless otherwis specifi thi valu is equal to the largest number of name argument shown in the section head for the functiondescript includ option paramet notefor exampl the function object that is the initi valu of the slice properti of the string prototyp objecti describ under the section head string prototyp slice start end which show the two namedargu start and end therefor the valu of the length properti of that function object is 2 in everi case the length properti of a built in function object describ in thi section ha the attribut read onli dont delet dont enum and no other everi other properti describ in thi section ha theattribut dont enum and no other unless otherwis specifi 
the global object the global object doe not have a construct properti it is not possibl to us the global object as aconstructor with the new oper the global object doe not have a call properti it is not possibl to invok the global object as afunct the valu of the prototyp and class properti of the global object ar implement depend 
na nthe initi valu of na n is na n 8 5 thi properti ha the attribut dont enum dont delet 
infin the initi valu of infin is 8 5 thi properti ha the attribut dont enum dont delet 
eval x when the eval function is call with on argument x the follow step ar taken 1 if x is not a string valu return x 2 pars x as a program if the pars fail throw a syntax error except but see also claus 16 3 evalu the program from step 2 4 if result 3 type is normal and it complet valu is a valu v then return the valu v 5 if result 3 type is normal and it complet valu is empti then return the valu undefin 6 result 3 type must be throw throw result 3 valu as an except if valu of the eval properti is us in ani wai other than a direct call that is other than by theexplicit us of it name as an identifi which is the member express in a call express or if theeval properti is assign to an eval error except mai be thrown 
pars int string radix the pars int function produc an integ valu dictat by interpret of the content of thestr argument accord to the specifi radix lead whitespac in the string is ignor if radixi undefin or 0 it is assum to be 10 except when the number begin with the charact pair 0xor 0x in which case a radix of 16 is assum ani radix 16 number mai also option begin withth charact pair 0x or 0x when the pars int function is call the follow step ar taken 1 call to string string 2 let s be a newli creat substr of result 1 consist of the first charact that is not a str white space char and all charact follow that charact in other word remov leadingwhit space 3 let sign be 1 4 if s is not empti and the first charact of s is a minu sign let sign be 1 5 if s is not empti and the first charact of s is a plu sign or a minu sign then remov thefirst charact from s 6 let r to int32 radix 7 if r 0 go to step 11 8 if r 2 or r 36 then return na n 9 if r 16 go to step 13 10 go to step 14 11 let r 10 12 if the length of s is at least 1 and the first charact of s is 0 then at the implement sdiscret either let r 8 or leav r unchang 13 if the length of s is at least 2 and the first two charact of s ar either 0x or 0x thenremov the first two charact from s and let r 16 14 if s contain ani charact that is not a radix r digit then let z be the substr of s consist ofal charact befor the first such charact otherwis let z be s 15 if z is empti return na n 16 comput the mathemat integ valu that is repres by z in radix r notat us thelett a z and a z for digit with valu 10 through 35 howev if r is 10 and z contain morethan 20 signific digit everi signific digit after the 20th mai be replac by a 0 digit atth option of the implement and if r is not 2 4 8 10 16 or 32 then result 16 mai be animplement depend approxim to the mathemat integ valu that is repres by z in radix r notat 17 comput the number valu for result 16 18 return sign result 17 notepars int mai interpret onli a lead portion of the string as an integ valu it ignor anycharact that cannot be interpret as part of the notat of an integ and no indic is giventhat ani such charact were ignor when radix is 0 or undefin and the string s number begin with a 0 digit not follow by an x or x then the implement mai at it discret interpret the number either as be octal or as beingdecim implement ar encourag to interpret number in thi case as be decim 
is na n number appli to number to it argument then return true if the result is na n and otherwis return fals 
is finit number appli to number to it argument then return fals if the result is na n or and otherwisereturn true 
object valu when the object function is call with no argument or with on argument valu the followingstep ar taken 1 if valu is null undefin or not suppli creat and return a new object object exactli if theobject constructor had been call with the same argument 15 2 2 1 2 return to object valu 
new object valu when the object constructor is call with no argument or with on argument valu the followingstep ar taken 1 if valu is not suppli go to step 8 2 if the type of valu is not object go to step 5 3 if the valu is a nativ ecma script object do not creat a new object but simpli return valu 4 if the valu is a host object then action ar taken and a result is return in an implementationdependentmann that mai depend on the host object 5 if the type of valu is string return to object valu 6 if the type of valu is boolean return to object valu 7 if the type of valu is number return to object valu 8 the argument valu wa not suppli or it type wa null or undefin creat a new nativ ecma script object the prototyp properti of the newli construct object is set to the object prototyp object the class properti of the newli construct object is set to object the newli construct object ha no valu properti return the newli creat nativ object 
properti of the object constructor the valu of the intern prototyp properti of the object constructor is the function prototypeobject besid the intern properti and the length properti whose valu is 1 the object constructor hasth follow properti 
object prototyp the initi valu of object prototyp is the object prototyp object 15 2 4 thi properti ha the attribut dont enum dont delet read onli 
properti of the object prototyp object the valu of the intern prototyp properti of the object prototyp object is null and the valu ofth intern class properti is object 
object prototyp constructor the initi valu of object prototyp constructor is the built in object constructor 
object prototyp to string when the to string method is call the follow step ar taken 1 get the class properti of thi object 2 comput a string valu by concaten the three string object result 1 and 3 return result 2 
object prototyp valu of the valu of method return it thi valu if the object is the result of call the objectconstructor with a host object 15 2 2 1 it is implement defin whether valu of return itsthi valu or anoth valu such as the host object origin pass to the constructor 
object prototyp ha own properti v when the ha own properti method is call with argument v the follow step ar taken 1 let o be thi object 2 call to string v 3 if o doesn t have a properti with the name given by result 2 return fals 4 return true noteunlik ha properti 8 6 2 4 thi method doe not consid object in the prototyp chain 
function p1 p2 pn bodi when the function function is call with some argument p1 p2 pn bodi where n might be0 that is there ar no p argument and where bodi might also not be provid the follow stepsar taken 1 creat and return a new function object as if the function constructor had been call with thesam argument 15 3 2 1 
new function p1 p2 pn bodi the last argument specifi the bodi execut code of a function ani preced argumentsspecifi formal paramet when the function constructor is call with some argument p1 p2 pn bodi where n mightb 0 that is there ar no p argument and where bodi might also not be provid the followingstep ar taken 1 let p be the empti string 2 if no argument were given let bodi be the empti string and go to step 13 3 if on argument wa given let bodi be that argument and go to step 13 4 let result 4 be the first argument 5 let p be to string result 4 6 let k be 2 7 if k equal the number of argument let bodi be the k th argument and go to step 13 8 let result 8 be the k th argument 9 call to string result 8 10 let p be the result of concaten the previou valu of p the string a comma and result 9 11 increas k by 1 12 go to step 7 13 call to string bodi 14 if p is not parsabl as a formal paramet list then throw a syntax error except 15 if bodi is not parsabl as function bodi then throw a syntax error except 16 creat a new function object as specifi in 13 2 with paramet specifi by pars p as a formal paramet list and bodi specifi by pars bodi as a function bodi pass in a scopechain consist of the global object as the scope paramet 17 return result 16 a prototyp properti is automat creat for everi function to provid for the possibl thatth function will be us as a constructor noteit is permiss but not necessari to have on argument for each formal paramet to be specifi for exampl all three of the follow express produc the same result new function a b c return a b c new function a b c return a b c new function a b c return a b c 
properti of the function constructor the valu of the intern prototyp properti of the function constructor is the function prototypeobject 15 3 4 besid the intern properti and the length properti whose valu is 1 the function constructorha the follow properti 
function prototyp the initi valu of function prototyp is the function prototyp object 15 3 4 thi properti ha the attribut dont enum dont delet read onli 
properti of the function prototyp object the function prototyp object is itself a function object it class is function that wheninvok accept ani argument and return undefin the valu of the intern prototyp properti of the function prototyp object is the object prototypeobject 15 3 2 1 it is a function with an empti bodi if it is invok it mere return undefin the function prototyp object doe not have a valu of properti of it own howev it inherit thevalu of properti from the object prototyp object 
function prototyp constructor the initi valu of function prototyp constructor is the built in functionconstructor 
function prototyp appli thi arg arg arrai the appli method take two argument thi arg and arg arrai and perform a function call usingth call properti of the object if the object doe not have a call properti a type errorexcept is thrown if thi arg is null or undefin the call function is pass the global object as the thi valu otherwis the call function is pass to object thi arg as the thi valu if arg arrai is null or undefin the call function is pass no argument otherwis if arg arrayi neither an arrai nor an argument object see 10 1 8 a type error except is thrown ifarg arrai is either an arrai or an argument object the function is pass the to uint32 arg arrai length argument arg arrai 0 arg arrai 1 arg arrai to uint32 arg arrai length 1 the length properti of the appli method is 2 
function prototyp call thi arg arg1 arg2 the call method take on or more argument thi arg and option arg1 arg2 etc and performsa function call us the call properti of the object if the object doe not have a call properti a type error except is thrown the call function is pass arg1 arg2 etc as the argument if thi arg is null or undefin the call function is pass the global object as the thi valu otherwis the call function is pass to object thi arg as the thi valu the length properti of the call method is 1 
length the valu of the length properti is usual an integ that indic the typic number ofargu expect by the function howev the languag permit the function to be invok withsom other number of argument the behaviour of a function when invok on a number ofargu other than the number specifi by it length properti depend on the function thisproperti ha the attribut dont delet read onli dont enum 
arrai object arrai object give special treatment to a certain class of properti name a properti name p in the form ofa string valu is an arrai index if and onli if to string to uint32 p is equal to p and to uint32 p is notequ to 232 1 everi arrai object ha a length properti whose valu is alwai a nonneg integerless than 232 the valu of the length properti is numer greater than the name of everi propertywhos name is an arrai index whenev a properti of an arrai object is creat or chang otherproperti ar adjust as necessari to maintain thi invari specif whenev a properti is addedwhos name is an arrai index the length properti is chang if necessari to be on more than thenumer valu of that arrai index and whenev the length properti is chang everi properti whosenam is an arrai index whose valu is not smaller than the new length is automat delet thisconstraint appli onli to properti of the arrai object itself and is unaffect by length or arrai indexproperti that mai be inherit from it prototyp 
new arrai item0 item1 thi descript appli if and onli if the arrai constructor is given no argument or at least twoargument the prototyp properti of the newli construct object is set to the origin arrai prototypeobject the on that is the initi valu of arrai prototyp 15 4 3 1 the class properti of the newli construct object is set to arrai the length properti of the newli construct object is set to the number of argument the 0 properti of the newli construct object is set to item0 if suppli the 1 properti of thenewli construct object is set to item1 if suppli and in gener for as mani argument as therear the k properti of the newli construct object is set to argument k where the first argument isconsid to be argument number 0 
new arrai len the prototyp properti of the newli construct object is set to the origin arrai prototypeobject the on that is the initi valu of arrai prototyp 15 4 3 1 the class properti ofth newli construct object is set to arrai if the argument len is a number and to uint32 len is equal to len then the length properti of thenewli construct object is set to to uint32 len if the argument len is a number and to uint32 len is not equal to len a rang error except is thrown if the argument len is not a number then the length properti of the newli construct object is setto 1 and the 0 properti of the newli construct object is set to len 
properti of the arrai constructor the valu of the intern prototyp properti of the arrai constructor is the function prototyp object 
properti of the arrai prototyp object the valu of the intern prototyp properti of the arrai prototyp object is the object prototypeobject 15 2 3 1 the arrai prototyp object is itself an arrai it class is arrai and it ha a length propertywhos initi valu is 0 and the special intern put method describ in 15 2 3 1 in follow descript of function that ar properti of the arrai prototyp object the phrase thisobject refer to the object that is the thi valu for the invoc of the function it is permit for thethi to be an object for which the valu of the intern class properti is not arrai noteth arrai prototyp object doe not have a valu of properti of it own howev it inherit thevalu of properti from the object prototyp object 
arrai prototyp constructor the initi valu of arrai prototyp constructor is the built in arrai constructor 
arrai prototyp to string the result of call thi function is the same as if the built in join method were invok for thisobject with no argument the to string function is not gener it throw a type error except if it thi valu is not an arrai object therefor it cannot be transfer to other kind of object for us as a method 
arrai prototyp to local string the element of the arrai ar convert to string us their to local string method and thesestr ar then concaten separ by occurr of a separ string that ha been deriv inan implement defin local specif wai the result of call thi function is intend to beanalog to the result of to string except that the result of thi function is intend to be localespecif the result is calcul as follow 1 call the get method of thi object with argument length 2 call to uint32 result 1 3 let separ be the list separ string appropri for the host environ s current localethi is deriv in an implement defin wai 4 call to string separ 5 if result 2 is zero return the empti string 6 call the get method of thi object with argument 0 7 if result 6 is undefin or null us the empti string otherwis call to object result 6 to local string 8 let r be result 7 9 let k be 1 10 if k equal result 2 return r 11 let s be a string valu produc by concaten r and result 4 12 call the get method of thi object with argument to string k 13 if result 12 is undefin or null us the empti string otherwis call to object result 12 to local string 14 let r be a string valu produc by concaten s and result 13 15 increas k by 1 16 go to step 10 the to local string function is not gener it throw a type error except if it thi valu isnot an arrai object therefor it cannot be transfer to other kind of object for us as a method noteth first paramet to thi function is like to be us in a futur version of thi standard it isrecommend that implement do not us thi paramet posit for anyth els 
arrai prototyp concat item1 item2 when the concat method is call with zero or more argument item1 item2 etc it return an arraycontain the arrai element of the object follow by the arrai element of each argument in order the follow step ar taken 1 let a be a new arrai creat as if by the express new arrai 2 let n be 0 3 let e be thi object 4 if e is not an arrai object go to step 16 5 let k be 0 6 call the get method of e with argument length 7 if k equal result 6 go to step 19 8 call to string k 9 if e ha a properti name by result 8 go to step 10 but if e ha no properti name by result 8 go to step 13 10 call to string n 11 call the get method of e with argument result 8 12 call the put method of a with argument result 10 and result 11 13 increas n by 1 14 increas k by 1 15 go to step 7 16 call to string n 17 call the put method of a with argument result 16 and e 18 increas n by 1 19 get the next argument in the argument list if there ar no more argument go to step 22 20 let e be result 19 21 go to step 4 22 call the put method of a with argument length and n 23 return a the length properti of the concat method is 1 noteth concat function is intention gener it doe not requir that it thi valu be an arrayobject therefor it can be transfer to other kind of object for us as a method whether theconcat function can be appli successfulli to a host object is implement depend 
arrai prototyp join separ the element of the arrai ar convert to string and these string ar then concaten separatedbi occurr of the separ if no separ is provid a singl comma is us as the separ the join method take on argument separ and perform the follow step 1 call the get method of thi object with argument length 2 call to uint32 result 1 3 if separ is undefin let separ be the singl charact string 4 call to string separ 5 if result 2 is zero return the empti string 6 call the get method of thi object with argument 0 7 if result 6 is undefin or null us the empti string otherwis call to string result 6 8 let r be result 7 9 let k be 1 10 if k equal result 2 return r 11 let s be a string valu produc by concaten r and result 4 12 call the get method of thi object with argument to string k 13 if result 12 is undefin or null us the empti string otherwis call to string result 12 14 let r be a string valu produc by concaten s and result 13 15 increas k by 1 16 go to step 10 the length properti of the join method is 1 noteth join function is intention gener it doe not requir that it thi valu be an arrai object therefor it can be transfer to other kind of object for us as a method whether the joinfunct can be appli successfulli to a host object is implement depend 
arrai prototyp push item1 item2 the argument ar append to the end of the arrai in the order in which thei appear the new lengthof the arrai is return as the result of the call when the push method is call with zero or more argument item1 item2 etc the follow stepsar taken 1 call the get method of thi object with argument length 2 let n be the result of call to uint32 result 1 3 get the next argument in the argument list if there ar no more argument go to step 7 4 call the put method of thi object with argument to string n and result 3 5 increas n by 1 6 go to step 3 7 call the put method of thi object with argument length and n 8 return n the length properti of the push method is 1 noteth push function is intention gener it doe not requir that it thi valu be an arrai object therefor it can be transfer to other kind of object for us as a method whether the pushfunct can be appli successfulli to a host object is implement depend 
arrai prototyp revers the element of the arrai ar rearrang so as to revers their order the object is return as theresult of the call 1 call the get method of thi object with argument length 2 call to uint32 result 1 3 comput floor result 2 2 4 let k be 0 5 if k equal result 3 return thi object 6 comput result 2 k 1 7 call to string k 8 call to string result 6 9 call the get method of thi object with argument result 7 10 call the get method of thi object with argument result 8 11 if thi object doe not have a properti name by result 8 go to step 19 12 if thi object doe not have a properti name by result 7 go to step 16 13 call the put method of thi object with argument result 7 and result 10 14 call the put method of thi object with argument result 8 and result 9 15 go to step 25 16 call the put method of thi object with argument result 7 and result 10 17 call the delet method on thi object provid result 8 as the name of the properti todelet 18 go to step 25 19 if thi object doe not have a properti name by result 7 go to step 23 20 call the delet method on thi object provid result 7 as the name of the properti todelet 21 call the put method of thi object with argument result 8 and result 9 22 go to step 25 23 call the delet method on thi object provid result 7 as the name of the properti todelet 24 call the delet method on thi object provid result 8 as the name of the properti todelet 25 increas k by 1 26 go to step 5 noteth revers function is intention gener it doe not requir that it thi valu be an arrayobject therefor it can be transfer to other kind of object for us as a method whether therevers function can be appli successfulli to a host object is implement depend 
arrai prototyp sort comparefn the element of thi arrai ar sort the sort is not necessarili stabl that is element that compareequ do not necessarili remain in their origin order if comparefn is not undefin it should be afunct that accept two argument x and y and return a neg valu if x y zero if x y or aposit valu if x y if comparefn is not undefin and is not a consist comparison function for the element of thisarrai see below the behaviour of sort is implement defin let len be to uint32 thi length if there exist integ i and j and an object p such that all of thecondit below ar satisfi then the behaviour of sort is implement defin 0 i len0 j lenthi doe not have a properti with name to string i p is obtain by follow on or more prototyp properti start at thi p ha a properti with name to string j otherwis the follow step ar taken 1 call the get method of thi object with argument length 2 call to uint32 result 1 3 perform an implement depend sequenc of call to the get put and delet method of thi object and to sort compar describ below where the first argument for eachcal to get put or delet is a nonneg integ less than result 2 and where theargument for call to sort compar ar result of previou call to the get method 4 return thi object the return object must have the follow two properti there must be some mathemat permut of the nonneg integ less than result 2 such that for everi nonneg integ j less than result 2 if properti old j exist then new j is exactli the same valu as old j but if properti old j did notexist then new j doe not exist then for all nonneg integ j and k each less than result 2 if sort compar j k 0 see sort compar below then j k here the notat old j is us to refer to the hypothet result of call the get method ofthi object with argument j befor thi function is execut and the notat new j to refer to thehypothet result of call the get method of thi object with argument j after thi function hasbeen execut a function comparefn is a consist comparison function for a set of valu s if all of therequir below ar met for all valu a b and c possibl the same valu in the set s thenot a cf b mean comparefn a b 0 a cf b mean comparefn a b 0 of either sign anda cf b mean comparefn a b 0 call comparefn a b alwai return the same valu v when given a specif pair of valu aand b as it two argument furthermor v ha type number and v is not na n note that thisimpli that exactli on of a cf b a cf b and a cf b will be true for a given pair of a and b a cf a reflex if a cf b then b cf a symmetri if a cf b and b cf c then a cf c transit of cf if a cf b and b cf c then a cf c transit of cf if a cf b and b cf c then a cf c transit of cf noteth abov condit ar necessari and suffici to ensur that comparefn divid the set s intoequival class and that these equival class ar total order when the sort compar oper is call with two argument j and k the follow step ar taken 1 call to string j 2 call to string k 3 if thi object doe not have a properti name by result 1 and thi object doe not have aproperti name by result 2 return 0 4 if thi object doe not have a properti name by result 1 return 1 5 if thi object doe not have a properti name by result 2 return 1 6 call the get method of thi object with argument result 1 7 call the get method of thi object with argument result 2 8 let x be result 6 9 let y be result 7 10 if x and y ar both undefin return 0 11 if x is undefin return 1 12 if y is undefin return 1 13 if the argument comparefn is undefin go to step 16 14 call comparefn with argument x and y 15 return result 14 16 call to string x 17 call to string y 18 if result 16 result 17 return 1 19 if result 16 result 17 return 1 20 return 0 note 1becaus non exist properti valu alwai compar greater than undefin properti valu andundefin alwai compar greater than ani other valu undefin properti valu alwai sort toth end of the result follow by non exist properti valu note 2the sort function is intention gener it doe not requir that it thi valu be an arrai object therefor it can be transfer to other kind of object for us as a method whether the sortfunct can be appli successfulli to a host object is implement depend 
put p v arrai object us a variat of the put method us for other nativ ecma script object 
length the length properti of thi arrai object is alwai numer greater than the name of everyproperti whose name is an arrai index the length properti ha the attribut dont enum dont delet 
properti of the string constructor the valu of the intern prototyp properti of the string constructor is the function prototyp object 
string from char code char0 char1 return a string valu contain as mani charact as the number of argument each argumentspecifi on charact of the result string with the first argument specifi the first charact and so on from left to right an argument is convert to a charact by appli the oper to uint16 9 7 and regard the result 16 bit integ as the code point valu of a charact if noargument ar suppli the result is the empti string the length properti of the from char code function is 1 
properti of the string prototyp object the string prototyp object is itself a string object it class is string whose valu is an emptystr the valu of the intern prototyp properti of the string prototyp object is the object prototypeobject 15 2 3 1 
string prototyp constructor the initi valu of string prototyp constructor is the built in string constructor 
string prototyp to string return thi string valu note that for a string object the to string method happen to return thesam thing as the valu of method the to string function is not gener it throw a type error except if it thi valu is not a string object therefor it cannot be transfer to other kind of object for us as a method 
string prototyp valu of return thi string valu the valu of function is not gener it throw a type error except if it thi valu is not a string object therefor it cannot be transfer to other kind of object for us as a method 
string prototyp char at po return a string contain the charact at posit po in the string result from convert thisobject to a string if there is no charact at that posit the result is the empti string the result is astr valu not a string object if po is a valu of number type that is an integ then the result of x char at po is equal to theresult of x substr po po 1 when the char at method is call with on argument po the follow step ar taken 1 call to string give it the thi valu as it argument 2 call to integ po 3 comput the number of charact in result 1 4 if result 2 is less than 0 or is not less than result 3 return the empti string 5 return a string of length 1 contain on charact from result 1 name the charact atposit result 2 where the first leftmost charact in result 1 is consid to be at position0 the next on at posit 1 and so on noteth char at function is intention gener it doe not requir that it thi valu be a stringobject therefor it can be transfer to other kind of object for us as a method 
string prototyp char code at po return a number a nonneg integ less than 216 repres the code point valu of thecharact at posit po in the string result from convert thi object to a string if there is nocharact at that posit the result is na n when the char code at method is call with on argument po the follow step ar taken 1 call to string give it the thi valu as it argument 2 call to integ po 3 comput the number of charact in result 1 4 if result 2 is less than 0 or is not less than result 3 return na n 5 return a valu of number type whose valu is the code point valu of the charact at posit result 2 in the string result 1 where the first leftmost charact in result 1 is consid tobe at posit 0 the next on at posit 1 and so on noteth char code at function is intention gener it doe not requir that it thi valu be a stringobject therefor it can be transfer to other kind of object for us as a method 
string prototyp index of search string posit if search string appear as a substr of the result of convert thi object to a string at on or moreposit that ar greater than or equal to posit then the index of the smallest such posit isreturn otherwis 1 is return if posit is undefin 0 is assum so as to search all of thestr the index of method take two argument search string and posit and perform the followingstep 1 call to string give it the thi valu as it argument 2 call to string search string 3 call to integ posit if posit is undefin thi step produc the valu 0 4 comput the number of charact in result 1 5 comput min max result 3 0 result 4 6 comput the number of charact in the string that is result 2 7 comput the smallest possibl integ k not smaller than result 5 such that k result 6 is notgreat than result 4 and for all nonneg integ j less than result 6 the charact atposit k j of result 1 is the same as the charact at posit j of result 2 but if there is nosuch integ k then comput the valu 1 8 return result 7 the length properti of the index of method is 1 noteth index of function is intention gener it doe not requir that it thi valu be a stringobject therefor it can be transfer to other kind of object for us as a method 
string prototyp last index of search string posit if search string appear as a substr of the result of convert thi object to a string at on or moreposit that ar smaller than or equal to posit then the index of the greatest such posit isreturn otherwis 1 is return if posit is undefin the length of the string valu is assum so as to search all of the string the last index of method take two argument search string and posit and perform thefollow step 1 call to string give it the thi valu as it argument 2 call to string search string 3 call to number posit if posit is undefin thi step produc the valu na n 4 if result 3 is na n us otherwis call to integ result 3 5 comput the number of charact in result 1 6 comput min max result 4 0 result 5 7 comput the number of charact in the string that is result 2 8 comput the largest possibl nonneg integ k not larger than result 6 such that k result 7 is not greater than result 5 and for all nonneg integ j less than result 7 the charact atposit k j of result 1 is the same as the charact at posit j of result 2 but if there is nosuch integ k then comput the valu 1 9 return result 8 the length properti of the last index of method is 1 noteth last index of function is intention gener it doe not requir that it thi valu be a string object therefor it can be transfer to other kind of object for us as a method 
string prototyp match regexp if regexp is not an object whose class properti is reg exp it is replac with the result of theexpress new reg exp regexp let string denot the result of convert the thi valu to astr then do on of the follow if regexp global is fals return the result obtain by invok reg exp prototyp execse 15 10 6 2 on regexp with string as paramet if regexp global is true set the regexp last index properti to 0 and invok reg exp prototyp exec repeatedli until there is no match if there is a match with an emptystr in other word if the valu of regexp last index is left unchang incrementregexp last index by 1 let n be the number of match the valu return is an arrai with thelength properti set to n and properti 0 through n 1 correspond to the first element of theresult of all match invoc of reg exp prototyp exec noteth match function is intention gener it doe not requir that it thi valu be a string object therefor it can be transfer to other kind of object for us as a method 
string prototyp replac search valu replac valu let string denot the result of convert the thi valu to a string if search valu is a regular express an object whose class properti is reg exp do thefollow if search valu global is fals then search string for the first match of the regularexpress search valu if search valu global is true then search string for all match of theregular express search valu do the search in the same manner as in string prototyp match includ the updat of search valu last index let m be thenumb of left captur parenthes in search valu n captur paren as specifi in 15 10 2 1 if search valu is not a regular express let search string be to string search valu and searchstr for the first occurr of search string let m be 0 if replac valu is a function then for each match substr call the function with the follow m3 argument argument 1 is the substr that match if search valu is a regular express thenext m argument ar all of the captur in the match result see 15 10 2 1 argument m 2 is theoffset within string where the match occur and argument m 3 is string the result is a stringvalu deriv from the origin input by replac each match substr with the correspondingreturn valu of the function call convert to a string if need be otherwis let newstr denot the result of convert replac valu to a string the result is a stringvalu deriv from the origin input string by replac each match substr with a string derivedfrom newstr by replac charact in newstr by replac text as specifi in the followingt these replac ar done left to right and onc such a replac is perform the newreplac text is not subject to further replac for exampl 1 2 replac d g 1 1 2 return 1 11 1 22 a innewstr that doe not match ani of the form below is left as is charact replac text the match substr the portion of string that preced the match substr the portion of string that follow the match substr n the nth captur where n is a singl digit 1 9 and n is not follow by a decimaldigit if n m and the nth captur is undefin us the empti string instead if n m the result is implement defin nn the nnth captur where nn is a two digit decim number 01 99 if nn m and thennth captur is undefin us the empti string instead if nn m the result isimplement defin noteth replac function is intention gener it doe not requir that it thi valu be a stringobject therefor it can be transfer to other kind of object for us as a method 
string prototyp split separ limit return an arrai object into which substr of the result of convert thi object to a string havebeen store the substr ar determin by search from left to right for occurr ofsepar these occurr ar not part of ani substr in the return arrai but serv to divid upth string valu the valu of separ mai be a string of ani length or it mai be a reg exp objecti e an object whose class properti is reg exp see 15 10 the valu of separ mai be an empti string an empti regular express or a regular expressionthat can match an empti string in thi case separ doe not match the empti substr at thebegin or end of the input string nor doe it match the empti substr at the end of the previoussepar match for exampl if separ is the empti string the string is split up into individualcharact the length of the result arrai equal the length of the string and each substr containson charact if separ is a regular express onli the first match at a given posit of the thisstr is consid even if backtrack could yield a non empti substr match at that posit for exampl ab split a evalu to the arrai a b whileab split a evalu to the arrai b if the thi object is or convert to the empti string the result depend on whether separ canmatch the empti string if it can the result arrai contain no element otherwis the result arraycontain on element which is the empti string if separ is a regular express that contain captur parenthes then each time separ ismatch the result includ ani undefin result of the captur parenthes ar splice into theoutput arrai for exampl a b bold b and code code code split evalu toth arrai a undefin b bold b and undefin code code code if separ is undefin then the result arrai contain just on string which is the thi valueconvert to a string if limit is not undefin then the output arrai is truncat so that it containsno more than limit element when the split method is call the follow step ar taken 1 let s to string thi 2 let a be a new arrai creat as if by the express new arrai 3 if limit is undefin let lim 232 1 els let lim to uint32 limit 4 let s be the number of charact in s 5 let p 0 6 if separ is a reg exp object it class is reg exp let r separ otherwis let r to string separ 7 if lim 0 return a 8 if separ is undefin go to step 33 9 if s 0 go to step 31 10 let q p 11 if q s go to step 28 12 call split match r s q and let z be it match result result 13 if z is failur go to step 26 14 z must be a state let e be z s end index and let cap be z s captur arrai 15 if e p go to step 26 16 let t be a string valu equal to the substr of s consist of the charact at posit pinclus through q exclus 17 call the put method of a with argument a length and t 18 if a length lim return a 19 let p e 20 let i 0 21 if i is equal to the number of element in cap go to step 10 22 let i i 1 23 call the put method of a with argument a length and cap i 24 if a length lim return a 25 go to step 21 26 let q q 1 27 go to step 11 28 let t be a string valu equal to the substr of s consist of the charact at posit pinclus through s exclus 29 call the put method of a with argument a length and t 30 return a 31 call split match r s 0 and let z be it match result result 32 if z is not failur return a 33 call the put method of a with argument 0 and s 34 return a the intern helper function split match take three paramet a string s an integ q and a string or reg exp r and perform the follow in order to return a match result see 15 10 2 1 1 if r is a reg exp object it class is reg exp go to step 8 2 r must be a string let r be the number of charact in r 3 let s be the number of charact in s 4 if q r s then return the match result failur 5 if there exist an integ i between 0 inclus and r exclus such that the charact atposit q i of s is differ from the charact at posit i of r then return failur 6 let cap be an empti arrai of captur see 15 10 2 1 7 return the state q r cap see 15 10 2 1 8 call the match method of r give it the argument s and q and return the match result result the length properti of the split method is 2 note 1the split function is intention gener it doe not requir that it thi valu be a string object therefor it can be transfer to other kind of object for us as a method note 2the split method ignor the valu of separ global for separ that ar reg exp object 
string prototyp substr start end the substr method take two argument start and end and return a substr of the result ofconvert thi object to a string start from charact posit start and run to but notinclud charact posit end of the string or through the end of the string is end is undefin the result is a string valu not a string object if either argument is na n or neg it is replac with zero if either argument is larger than thelength of the string it is replac with the length of the string if start is larger than end thei ar swap the follow step ar taken 1 call to string give it the thi valu as it argument 2 comput the number of charact in result 1 3 call to integ start 4 if end is undefin us result 2 els us to integ end 5 comput min max result 3 0 result 2 6 comput min max result 4 0 result 2 7 comput min result 5 result 6 8 comput max result 5 result 6 9 return a string whose length is the differ between result 8 and result 7 containingcharact from result 1 name the charact with indic result 7 through result 8 1 inascend order the length properti of the substr method is 2 noteth substr function is intention gener it doe not requir that it thi valu be a stringobject therefor it can be transfer to other kind of object for us as a method 
string prototyp to lower case if thi object is not alreadi a string it is convert to a string the charact in that string areconvert on by on to lower case the result is a string valu not a string object the charact ar convert on by on the result of each convers is the origin charact unless that charact ha a unicod lowercas equival in which case the lowercas equival isus instead note 1the result should be deriv accord to the case map in the unicod charact databas thisexplicitli includ not onli the unicod data txt file but also the special case txt file thataccompani it in unicod 2 1 8 and later note 2the to lower case function is intention gener it doe not requir that it thi valu be a string object therefor it can be transfer to other kind of object for us as a method 
string prototyp to upper case thi function behav in exactli the same wai as string prototyp to lower case exceptthat charact ar map to their uppercas equival as specifi in the unicod charact databas note 1becaus both to upper case and to lower case have context sensit behaviour the functionsar not symmetr in other word s to upper case to lower case is not necessarilyequ to s to lower case note 2the to upper case function is intention gener it doe not requir that it thi valu be a string object therefor it can be transfer to other kind of object for us as a method 
length the number of charact in the string valu repres by thi string object onc a string object is creat thi properti is unchang it ha the attribut dont enum dont delet read onli 
properti of the boolean constructor the valu of the intern prototyp properti of the boolean constructor is the function prototypeobject 15 3 4 besid the intern properti and the length properti whose valu is 1 the boolean constructor hasth follow properti 
properti of the boolean prototyp object the boolean prototyp object is itself a boolean object it class is boolean whose valu isfals the valu of the intern prototyp properti of the boolean prototyp object is the object prototypeobject 15 2 3 1 in follow descript of function that ar properti of the boolean prototyp object the phrasethi boolean object refer to the object that is the thi valu for the invoc of the function a type error except is thrown if the thi valu is not an object for which the valu of the intern class properti is boolean also the phrase thi boolean valu refer to the boolean valuerepres by thi boolean object that is the valu of the intern valu properti of thi booleanobject 
boolean prototyp constructor the initi valu of boolean prototyp constructor is the built in boolean constructor 
boolean prototyp to string if thi boolean valu is true then the string true is return otherwis thi boolean valu mustb fals and the string fals is return the to string function is not gener it throw a type error except if it thi valu is not a boolean object therefor it cannot be transfer to other kind of object for us as a method 
boolean prototyp valu of return thi boolean valu the valu of function is not gener it throw a type error except if it thi valu is not a boolean object therefor it cannot be transfer to other kind of object for us as a method 
number max valueth valu of number max valu is the largest posit finit valu of the number type which isapproxim 1 7976931348623157 10308 thi properti ha the attribut dont enum dont delet read onli 
number min valueth valu of number min valu is the smallest posit valu of the number type which isapproxim 5 10 324 thi properti ha the attribut dont enum dont delet read onli 
number na nthe valu of number na n is na n thi properti ha the attribut dont enum dont delet read onli 
number neg infinityth valu of number neg infin is thi properti ha the attribut dont enum dont delet read onli 
number posit infinityth valu of number posit infin is thi properti ha the attribut dont enum dont delet read onli 
properti of the number prototyp object the number prototyp object is itself a number object it class is number whose valu is 0 the valu of the intern prototyp properti of the number prototyp object is the object prototypeobject 15 2 3 1 in follow descript of function that ar properti of the number prototyp object the phrasethi number object refer to the object that is the thi valu for the invoc of the function a type error except is thrown if the thi valu is not an object for which the valu of the intern class properti is number also the phrase thi number valu refer to the number valuerepres by thi number object that is the valu of the intern valu properti of thi numberobject 
number prototyp constructor the initi valu of number prototyp constructor is the built in number constructor 
number prototyp to string radix if radix is the number 10 or undefin then thi number valu is given as an argument to the to string oper the result string valu is return if radix is an integ from 2 to 36 but not 10 the result is a string the choic of which isimplement depend the to string function is not gener it throw a type error except if it thi valu is not a number object therefor it cannot be transfer to other kind of object for us as a method 
number prototyp valu of return thi number valu the valu of function is not gener it throw a type error except if it thi valu is not a number object therefor it cannot be transfer to other kind of object for us as a method 
number prototyp to fix fraction digit return a string contain the number repres in fix point notat with fraction digit digitsaft the decim point if fraction digit is undefin 0 is assum specif perform thefollow step 1 let f be to integ fraction digit if fraction digit is undefin thi step produc the value0 2 if f 0 or f 20 throw a rang error except 3 let x be thi number valu 4 if x is na n return the string na n 5 let s be the empti string 6 if x 0 go to step 9 7 let s be 8 let x x 9 if x 1021 let m to string x and go to step 20 10 let n be an integ for which the exact mathemat valu of n 10f x is as close to zero asposs if there ar two such n pick the larger n 11 if n 0 let m be the string 0 otherwis let m be the string consist of the digit of thedecim represent of n in order with no lead zero 12 if f 0 go to step 20 13 let k be the number of charact in m 14 if k f go to step 18 15 let z be the string consist of f 1 k occurr of the charact 0 16 let m be the concaten of string z and m 17 let k f 1 18 let a be the first k f charact of m and let b be the remain f charact of m 19 let m be the concaten of the three string a and b 20 return the concaten of the string s and m the length properti of the to fix method is 1 if the to fix method is call with more than on argument then the behaviour is undefin seeclaus 15 an implement is permit to extend the behaviour of to fix for valu of fraction digit lessthan 0 or greater than 20 in thi case to fix would not necessarili throw rang error for suchvalu noteth output of to fix mai be more precis than to string for some valu becaus to string onlyprint enough signific digit to distinguish the number from adjac number valu for exampl 1000000000000000128 to string return 1000000000000000100 while1000000000000000128 to fix 0 return 1000000000000000128 
number prototyp to exponenti fraction digit return a string contain the number repres in exponenti notat with on digit befor thesignificand s decim point and fraction digit digit after the significand s decim point iffract digit is undefin includ as mani significand digit as necessari to uniqu specifi thenumb just like in to string except that in thi case the number is alwai output in exponentialnot specif perform the follow step 1 let x be thi number valu 2 let f be to integ fraction digit 3 if x is na n return the string na n 4 let s be the empti string 5 if x 0 go to step 8 6 let s be 7 let x x 8 if x let m infin and go to step 30 9 if fraction digit is undefin go to step 14 10 if f 0 or f 20 throw a rang error except 11 if x 0 go to step 16 12 let e and n be integ such that 10f n 10f 1 and for which the exact mathemat valu of n 10e f x is as close to zero as possibl if there ar two such set of e and n pick the e and n forwhich n 10e f is larger 13 go to step 20 14 if x 0 go to step 19 15 let f 0 16 let m be the string consist of f 1 occurr of the charact 0 17 let e 0 18 go to step 21 19 let e n and f be integ such that f 0 10f n 10f 1 the number valu for n 10e f is x and fi as small as possibl note that the decim represent of n ha f 1 digit n is not divisiblebi 10 and the least signific digit of n is not necessarili uniqu determin by these criteria 20 let m be the string consist of the digit of the decim represent of n in order with nolead zero 21 if f 0 go to step 24 22 let a be the first charact of m and let b be the remain f charact of m 23 let m be the concaten of the three string a and b 24 if e 0 let c and d 0 and go to step 29 25 if e 0 let c and go to step 28 26 let c 27 let e e 28 let d be the string consist of the digit of the decim represent of e in order with nolead zero 29 let m be the concaten of the four string m e c and d 30 return the concaten of the string s and m the length properti of the to exponenti method is 1 if the to exponenti method is call with more than on argument then the behaviour isundefin see claus 15 an implement is permit to extend the behaviour of to exponenti for valu offract digit less than 0 or greater than 20 in thi case to exponenti would not necessarilythrow rang error for such valu notefor implement that provid more accur convers than requir by the rule abov it isrecommend that the follow altern version of step 19 be us as a guidelin let e n and f be integ such that f 0 10f n 10f 1 the number valu for n 10e f is x and f isa small as possibl if there ar multipl possibl for n choos the valu of n for which n 10e fi closest in valu to x if there ar two such possibl valu of n choos the on that is even 
number prototyp to precis precis return a string contain the number repres either in exponenti notat with on digit beforeth significand s decim point and precis 1 digit after the significand s decim point or in fixednot with precis signific digit if precis is undefin call to string 9 8 1 instead specif perform the follow step 1 let x be thi number valu 2 if precis is undefin return to string x 3 let p be to integ precis 4 if x is na n return the string na n 5 let s be the empti string 6 if x 0 go to step 9 7 let s be 8 let x x 9 if x let m infin and go to step 30 10 if p 1 or p 21 throw a rang error except 11 if x 0 go to step 15 12 let m be the string consist of p occurr of the charact 0 13 let e 0 14 go to step 18 15 let e and n be integ such that 10p 1 n 10p and for which the exact mathemat valu of n10e p 1 x is as close to zero as possibl if there ar two such set of e and n pick the e and nfor which n 10e p 1 is larger 16 let m be the string consist of the digit of the decim represent of n in order with nolead zero 17 if e 6 or e p go to step 22 18 if e p 1 go to step 30 19 if e 0 let m be the concaten of the first e 1 charact of m the charact and theremain p e 1 charact of m and go to step 30 20 let m be the concaten of the string 0 e 1 occurr of the charact 0 and thestr m 21 go to step 30 22 let a be the first charact of m and let b be the remain p 1 charact of m 23 let m be the concaten of the three string a and b 24 if e 0 let c and d 0 and go to step 29 25 if e 0 let c and go to step 28 26 let c 27 let e e 28 let d be the string consist of the digit of the decim represent of e in order with nolead zero 29 let m be the concaten of the four string m e c and d 30 return the concaten of the string s and m the length properti of the to precis method is 1 if the to precis method is call with more than on argument then the behaviour is undefinedse claus 15 an implement is permit to extend the behaviour of to precis for valu of precisionless than 1 or greater than 21 in thi case to precis would not necessarili throw rang errorfor such valu 
the math object the math object is a singl object that ha some name properti some of which ar function the valu of the intern prototyp properti of the math object is the object prototyp object15 2 3 1 the valu of the intern class properti of the math object is math the math object doe not have a construct properti it is not possibl to us the math object as aconstructor with the new oper the math object doe not have a call properti it is not possibl to invok the math object as afunct notein thi specif the phrase the number valu for x ha a technic mean defin in 8 5 
eth number valu for e the base of the natur logarithm which is approximately2 7182818284590452354 thi properti ha the attribut dont enum dont delet read onli 
ln10the number valu for the natur logarithm of 10 which is approxim 2 302585092994046 thi properti ha the attribut dont enum dont delet read onli 
ln2the number valu for the natur logarithm of 2 which is approxim 0 6931471805599453 thi properti ha the attribut dont enum dont delet read onli 
log2eth number valu for the base 2 logarithm of e the base of the natur logarithm thi valu isapproxim 1 4426950408889634 thi properti ha the attribut dont enum dont delet read onli noteth valu of math log2 is approxim the reciproc of the valu of math ln2 
log10eth number valu for the base 10 logarithm of e the base of the natur logarithm thi valu isapproxim 0 4342944819032518 thi properti ha the attribut dont enum dont delet read onli noteth valu of math log10 is approxim the reciproc of the valu of math ln10 
pith number valu for the ratio of the circumfer of a circl to it diamet which isapproxim 3 1415926535897932 thi properti ha the attribut dont enum dont delet read onli 
sqrt1 2the number valu for the squar root of 1 2 which is approxim 0 7071067811865476 thi properti ha the attribut dont enum dont delet read onli noteth valu of math sqrt1 2 is approxim the reciproc of the valu of math sqrt2 
sqrt2the number valu for the squar root of 2 which is approxim 1 4142135623730951 thi properti ha the attribut dont enum dont delet read onli 
ab x return the absolut valu of x the result ha the same magnitud as x but ha posit sign if x is na n the result is na n if x is 0 the result is 0 if x is the result is 
aco x return an implement depend approxim to the arc cosin of x the result is express inradian and rang from 0 to if x is na n the result is na n if x is greater than 1 the result is na n if x is less than 1 the result is na n if x is exactli 1 the result is 0 
asin x return an implement depend approxim to the arc sine of x the result is express inradian and rang from 2 to 2 if x is na n the result is na n if x is greater than 1 the result is na n if x is less than 1 the result is na n if x is 0 the result is 0 if x is 0 the result is 0 
atan x return an implement depend approxim to the arc tangent of x the result is express inradian and rang from 2 to 2 if x is na n the result is na n if x is 0 the result is 0 if x is 0 the result is 0 if x is the result is an implement depend approxim to 2 if x is the result is an implement depend approxim to 2 
atan2 y x return an implement depend approxim to the arc tangent of the quotient y x of theargument y and x where the sign of y and x ar us to determin the quadrant of the result notethat it is intent and tradit for the two argument arc tangent function that the argument namedi be first and the argument name x be second the result is express in radian and rang from to if either x or y is na n the result is na n if y 0 and x is 0 the result is an implement depend approxim to 2 if y 0 and x is 0 the result is an implement depend approxim to 2 if y is 0 and x 0 the result is 0 if y is 0 and x is 0 the result is 0 if y is 0 and x is 0 the result is an implement depend approxim to if y is 0 and x 0 the result is an implement depend approxim to if y is 0 and x 0 the result is 0 if y is 0 and x is 0 the result is 0 if y is 0 and x is 0 the result is an implement depend approxim to if y is 0 and x 0 the result is an implement depend approxim to if y 0 and x is 0 the result is an implement depend approxim to 2 if y 0 and x is 0 the result is an implement depend approxim to 2 if y 0 and y is finit and x is the result is 0 if y 0 and y is finit and x is the result if an implement depend approxim to if y 0 and y is finit and x is the result is 0 if y 0 and y is finit and x is the result is an implement depend approxim to if y is and x is finit the result is an implement depend approxim to 2 if y is and x is finit the result is an implement depend approxim to 2 if y is and x is the result is an implement depend approxim to 4 if y is and x is the result is an implement depend approxim to 3 4 if y is and x is the result is an implement depend approxim to 4 if y is and x is the result is an implement depend approxim to 3 4 
ceil x return the smallest closest to number valu that is not less than x and is equal to a mathematicalinteg if x is alreadi an integ the result is x if x is na n the result is na n if x is 0 the result is 0 if x is 0 the result is 0 if x is the result is if x is the result is if x is less than 0 but greater than 1 the result is 0 the valu of math ceil x is the same as the valu of math floor x 
co x return an implement depend approxim to the cosin of x the argument is express inradian if x is na n the result is na n if x is 0 the result is 1 if x is 0 the result is 1 if x is the result is na n if x is the result is na n 
exp x return an implement depend approxim to the exponenti function of x e rais to thepow of x where e is the base of the natur logarithm if x is na n the result is na n if x is 0 the result is 1 if x is 0 the result is 1 if x is the result is if x is the result is 0 
floor x return the greatest closest to number valu that is not greater than x and is equal to amathemat integ if x is alreadi an integ the result is x if x is na n the result is na n if x is 0 the result is 0 if x is 0 the result is 0 if x is the result is if x is the result is if x is greater than 0 but less than 1 the result is 0 noteth valu of math floor x is the same as the valu of math ceil x 
log x return an implement depend approxim to the natur logarithm of x if x is na n the result is na n if x is less than 0 the result is na n if x is 0 or 0 the result is if x is 1 the result is 0 if x is the result is 
max value1 value2 given zero or more argument call to number on each of the argument and return the largest ofth result valu if no argument ar given the result is if ani valu is na n the result is na n the comparison of valu to determin the largest valu is done as in 11 8 5 except that 0 isconsid to be larger than 0 the length properti of the max method is 2 
min value1 value2 given zero or more argument call to number on each of the argument and return the smallest ofth result valu if no argument ar given the result is if ani valu is na n the result is na n the comparison of valu to determin the smallest valu is done as in 11 8 5 except that 0 isconsid to be larger than 0 the length properti of the min method is 2 
pow x y return an implement depend approxim to the result of rais x to the power y if y is na n the result is na n if y is 0 the result is 1 even if x is na n if y is 0 the result is 1 even if x is na n if x is na n and y is nonzero the result is na n if ab x 1 and y is the result is if ab x 1 and y is the result is 0 if ab x 1 and y is the result is na n if ab x 1 and y is the result is na n if ab x 1 and y is the result is 0 if ab x 1 and y is the result is if x is and y 0 the result is if x is and y 0 the result is 0 if x is and y 0 and y is an odd integ the result is if x is and y 0 and y is not an odd integ the result is if x is and y 0 and y is an odd integ the result is 0 if x is and y 0 and y is not an odd integ the result is 0 if x is 0 and y 0 the result is 0 if x is 0 and y 0 the result is if x is 0 and y 0 and y is an odd integ the result is 0 if x is 0 and y 0 and y is not an odd integ the result is 0 if x is 0 and y 0 and y is an odd integ the result is if x is 0 and y 0 and y is not an odd integ the result is if x 0 and x is finit and y is finit and y is not an integ the result is na n 
random return a number valu with posit sign greater than or equal to 0 but less than 1 chosen randomlyor pseudo randomli with approxim uniform distribut over that rang us animplement depend algorithm or strategi thi function take no argument 
round x return the number valu that is closest to x and is equal to a mathemat integ if two integernumb valu ar equal close to x then the result is the number valu that is closer to if x isalreadi an integ the result is x if x is na n the result is na n if x is 0 the result is 0 if x is 0 the result is 0 if x is the result is if x is the result is if x is greater than 0 but less than 0 5 the result is 0 if x is less than 0 but greater than or equal to 0 5 the result is 0 note 1math round 3 5 return 4 but math round 3 5 return 3 note 2the valu of math round x is the same as the valu of math floor x 0 5 except when x is0 or is less than 0 but greater than or equal to 0 5 for these case math round x return 0 but math floor x 0 5 return 0 
sin x return an implement depend approxim to the sine of x the argument is express inradian if x is na n the result is na n if x is 0 the result is 0 if x is 0 the result is 0 if x is or the result is na n 
sqrt x return an implement depend approxim to the squar root of x if x is na n the result is na n if x less than 0 the result is na n if x is 0 the result is 0 if x is 0 the result is 0 if x is the result is 
tan x return an implement depend approxim to the tangent of x the argument is express inradian if x is na n the result is na n if x is 0 the result is 0 if x is 0 the result is 0 if x is or the result is na n 
make date dai time the oper make date calcul a number of millisecond from it two argument which must be ecma script number valu thi oper function as follow 1 if dai is not finit or time is not finit return na n 2 comput dai ms per dai time 3 return result 2 
date year month date hour minut second ms all of the argument ar option ani argument suppli ar accept but ar complet ignor astr is creat and return as if by the express new date to string 
new date year month date hour minut second ms when date is call with two to seven argument it comput the date from year month andoption date hour minut second and ms the prototyp properti of the newli construct object is set to the origin date prototyp object the on that is the initi valu of date prototyp 15 9 4 1 the class properti of the newli construct object is set to date the valu properti of the newli construct object is set as follow 1 call to number year 2 call to number month 3 if date is suppli us to number date els us 1 4 if hour is suppli us to number hour els us 0 5 if minut is suppli us to number minut els us 0 6 if second is suppli us to number second els us 0 7 if ms is suppli us to number ms els us 0 8 if result 1 is not na n and 0 to integ result 1 99 result 8 is1900 to integ result 1 otherwis result 8 is result 1 9 comput make dai result 8 result 2 result 3 10 comput make time result 4 result 5 result 6 result 7 11 comput make date result 9 result 10 12 set the valu properti of the newli construct object to time clip utc result 11 
new date valu the prototyp properti of the newli construct object is set to the origin date prototyp object the on that is the initi valu of date prototyp 15 9 4 1 the class properti of the newli construct object is set to date the valu properti of the newli construct object is set as follow 1 call to primit valu 2 if type result 1 is string then go to step 5 3 let v be to number result 1 4 set the valu properti of the newli construct object to time clip v and return 5 pars result 1 as a date in exactli the same manner as for the pars method 15 9 4 2 let vbe the time valu for thi date 6 go to step 4 
date pars string the pars function appli the to string oper to it argument and interpret the result stringa a date it return a number the utc time valu correspond to the date the string mai beinterpret as a local time a utc time or a time in some other time zone depend on the contentsof the string if x is ani date object whose millisecond amount is zero within a particular implement of ecma script then all of the follow express should produc the same numer valu in thatimplement if all the properti referenc have their initi valu x valu of date pars x to string date pars x to utc string howev the express date pars x to local string is not requir to produc the same number valu as the preced three express and in gener the valu produc by date pars is implement depend when given ani string valu thatcould not be produc in that implement by the to string or to utc string method 
date utc year month date hour minut second ms when the utc function is call with fewer than two argument the behaviour is implementationdepend when the utc function is call with two to seven argument it comput the date fromyear month and option date hour minut second and ms the follow step ar taken 1 call to number year 2 call to number month 3 if date is suppli us to number date els us 1 4 if hour is suppli us to number hour els us 0 5 if minut is suppli us to number minut els us 0 6 if second is suppli us to number second els us 0 7 if ms is suppli us to number ms els us 0 8 if result 1 is not na n and 0 to integ result 1 99 result 8 is1900 to integ result 1 otherwis result 8 is result 1 9 comput make dai result 8 result 2 result 3 10 comput make time result 4 result 5 result 6 result 7 11 return time clip make date result 9 result 10 the length properti of the utc function is 7 noteth utc function differ from the date constructor in two wai it return a time valu as a number rather than creat a date object and it interpret the argument in utc rather than as local time 
properti of the date prototyp object the date prototyp object is itself a date object it class is date whose valu is na n the valu of the intern prototyp properti of the date prototyp object is the object prototypeobject 15 2 3 1 in follow descript of function that ar properti of the date prototyp object the phrase thi date object refer to the object that is the thi valu for the invoc of the function none of thesefunct ar gener a type error except is thrown if the thi valu is not an object for which thevalu of the intern class properti is date also the phrase thi time valu refer to thenumb valu for the time repres by thi date object that is the valu of the intern valu properti of thi date object 
date prototyp constructor the initi valu of date prototyp constructor is the built in date constructor 
date prototyp to string thi function return a string valu the content of the string ar implement depend but areintend to repres the date in the current time zone in a conveni human readabl form noteit is intend that for ani date valu d the result of date prototyp pars d to string 15 9 4 2 is equal to d 
date prototyp to date string thi function return a string valu the content of the string ar implement depend but areintend to repres the date portion of the date in the current time zone in a conveni humanreadableform 
date prototyp to time string thi function return a string valu the content of the string ar implement depend but areintend to repres the time portion of the date in the current time zone in a conveni humanreadableform 
date prototyp to local string thi function return a string valu the content of the string ar implement depend but areintend to repres the date in the current time zone in a conveni human readabl form thatcorrespond to the convent of the host environ s current local noteth first paramet to thi function is like to be us in a futur version of thi standard it isrecommend that implement do not us thi paramet posit for anyth els 
date prototyp to local date string thi function return a string valu the content of the string ar implement depend but areintend to repres the date portion of the date in the current time zone in a conveni humanreadableform that correspond to the convent of the host environ s current local noteth first paramet to thi function is like to be us in a futur version of thi standard it isrecommend that implement do not us thi paramet posit for anyth els 
date prototyp to local time string thi function return a string valu the content of the string ar implement depend but areintend to repres the time portion of the date in the current time zone in a conveni humanreadableform that correspond to the convent of the host environ s current local noteth first paramet to thi function is like to be us in a futur version of thi standard it isrecommend that implement do not us thi paramet posit for anyth els 
date prototyp valu of the valu of function return a number which is thi time valu 
date prototyp get time 1 if the thi valu is not an object whose class properti is date throw a type errorexcept 2 return thi time valu 
date prototyp get full year 1 let t be thi time valu 2 if t is na n return na n 3 return year from time local time t 
date prototyp get utc full year 1 let t be thi time valu 2 if t is na n return na n 3 return year from time t 
date prototyp get utc dai 1 let t be thi time valu 2 if t is na n return na n 3 return week dai t 
date prototyp get utc hour 1 let t be thi time valu 2 if t is na n return na n 3 return hour from time t 
date prototyp get utc minut 1 let t be thi time valu 2 if t is na n return na n 3 return min from time t 
date prototyp get utc second 1 let t be thi time valu 2 if t is na n return na n 3 return sec from time t 
date prototyp get utc millisecond 1 let t be thi time valu 2 if t is na n return na n 3 return ms from time t 
date prototyp set time time 1 if the thi valu is not a date object throw a type error except 2 call to number time 3 call time clip result 1 4 set the valu properti of the thi valu to result 2 5 return the valu of the valu properti of the thi valu 
date prototyp set millisecond ms 1 let t be the result of local time thi time valu 2 call to number ms 3 comput make time hour from time t min from time t sec from time t result 2 4 comput utc make date dai t result 3 5 set the valu properti of the thi valu to time clip result 4 6 return the valu of the valu properti of the thi valu 
date prototyp set utc millisecond ms 1 let t be thi time valu 2 call to number ms 3 comput make time hour from time t min from time t sec from time t result 2 4 comput make date dai t result 3 5 set the valu properti of the thi valu to time clip result 4 6 return the valu of the valu properti of the thi valu 
date prototyp set second sec ms if ms is not specifi thi behav as if ms were specifi with the valu get millisecond 1 let t be the result of local time thi time valu 2 call to number sec 3 if ms is not specifi comput ms from time t otherwis call to number ms 4 comput make time hour from time t min from time t result 2 result 3 5 comput utc make date dai t result 4 6 set the valu properti of the thi valu to time clip result 5 7 return the valu of the valu properti of the thi valu the length properti of the set second method is 2 
date prototyp set utc second sec ms if ms is not specifi thi behav as if ms were specifi with the valu get utc millisecond 1 let t be thi time valu 2 call to number sec 3 if ms is not specifi comput ms from time t otherwis call to number ms 4 comput make time hour from time t min from time t result 2 result 3 5 comput make date dai t result 4 6 set the valu properti of the thi valu to time clip result 5 7 return the valu of the valu properti of the thi valu the length properti of the set utc second method is 2 
date prototyp set minut min sec ms if sec is not specifi thi behav as if sec were specifi with the valu get second if ms is not specifi thi behav as if ms were specifi with the valu get millisecond 1 let t be the result of local time thi time valu 2 call to number min 3 if sec is not specifi comput sec from time t otherwis call to number sec 4 if ms is not specifi comput ms from time t otherwis call to number ms 5 comput make time hour from time t result 2 result 3 result 4 6 comput utc make date dai t result 5 7 set the valu properti of the thi valu to time clip result 6 8 return the valu of the valu properti of the thi valu the length properti of the set minut method is 3 
date prototyp set utc minut min sec ms if sec is not specifi thi behav as if sec were specifi with the valu get utc second if ms is not specifi thi behav as if ms were specifi with the valu get utc millisecond 1 let t be thi time valu 2 call to number min 3 if sec is not specifi comput sec from time t otherwis call to number sec 4 if ms is not specifi comput ms from time t otherwis call to number ms 5 comput make time hour from time t result 2 result 3 result 4 6 comput make date dai t result 5 7 set the valu properti of the thi valu to time clip result 6 8 return the valu of the valu properti of the thi valu the length properti of the set utc minut method is 3 
date prototyp set hour hour min sec ms if min is not specifi thi behav as if min were specifi with the valu get minut if sec is not specifi thi behav as if sec were specifi with the valu get second if ms is not specifi thi behav as if ms were specifi with the valu get millisecond 1 let t be the result of local time thi time valu 2 call to number hour 3 if min is not specifi comput min from time t otherwis call to number min 4 if sec is not specifi comput sec from time t otherwis call to number sec 5 if ms is not specifi comput ms from time t otherwis call to number ms 6 comput make time result 2 result 3 result 4 result 5 7 comput utc make date dai t result 6 8 set the valu properti of the thi valu to time clip result 7 9 return the valu of the valu properti of the thi valu the length properti of the set hour method is 4 
date prototyp set utc hour hour min sec ms if min is not specifi thi behav as if min were specifi with the valu get utc minut if sec is not specifi thi behav as if sec were specifi with the valu get utc second if ms is not specifi thi behav as if ms were specifi with the valu get utc millisecond 1 let t be thi time valu 2 call to number hour 3 if min is not specifi comput min from time t otherwis call to number min 4 if sec is not specifi comput sec from time t otherwis call to number sec 5 if ms is not specifi comput ms from time t otherwis call to number ms 6 comput make time result 2 result 3 result 4 result 5 7 comput make date dai t result 6 8 set the valu properti of the thi valu to time clip result 7 9 return the valu of the valu properti of the thi valu the length properti of the set utc hour method is 4 
date prototyp set utc date date 1 let t be thi time valu 2 call to number date 3 comput make dai year from time t month from time t result 2 4 comput make date result 3 time within dai t 5 set the valu properti of the thi valu to time clip result 4 6 return the valu of the valu properti of the thi valu 
date prototyp set month month date if date is not specifi thi behav as if date were specifi with the valu get date 1 let t be the result of local time thi time valu 2 call to number month 3 if date is not specifi comput date from time t otherwis call to number date 4 comput make dai year from time t result 2 result 3 5 comput utc make date result 4 time within dai t 6 set the valu properti of the thi valu to time clip result 5 7 return the valu of the valu properti of the thi valu the length properti of the set month method is 2 
date prototyp set utc month month date if date is not specifi thi behav as if date were specifi with the valu get utc date 1 let t be thi time valu 2 call to number month 3 if date is not specifi comput date from time t otherwis call to number date 4 comput make dai year from time t result 2 result 3 5 comput make date result 4 time within dai t 6 set the valu properti of the thi valu to time clip result 5 7 return the valu of the valu properti of the thi valu the length properti of the set utc month method is 2 
date prototyp set full year year month date if month is not specifi thi behav as if month were specifi with the valu get month if date is not specifi thi behav as if date were specifi with the valu get date 1 let t be the result of local time thi time valu but if thi time valu is na n let t be 0 2 call to number year 3 if month is not specifi comput month from time t otherwis call to number month 4 if date is not specifi comput date from time t otherwis call to number date 5 comput make dai result 2 result 3 result 4 6 comput utc make date result 5 time within dai t 7 set the valu properti of the thi valu to time clip result 6 8 return the valu of the valu properti of the thi valu the length properti of the set full year method is 3 
date prototyp set utc full year year month date if month is not specifi thi behav as if month were specifi with the valu get utc month if date is not specifi thi behav as if date were specifi with the valu get utc date 1 let t be thi time valu but if thi time valu is na n let t be 0 2 call to number year 3 if month is not specifi comput month from time t otherwis call to number month 4 if date is not specifi comput date from time t otherwis call to number date 5 comput make dai result 2 result 3 result 4 6 comput make date result 5 time within dai t 7 set the valu properti of the thi valu to time clip result 6 8 return the valu of the valu properti of the thi valu the length properti of the set utc full year method is 3 
reg exp regular express object a reg exp object contain a regular express and the associ flag noteth form and function of regular express is model after the regular express facil in the perl 5 program languag 
pattern semant a regular express pattern is convert into an intern function us the process describ below animplement is encourag to us more effici algorithm than the on list below as long as theresult ar the same 
assert the product assert evalu by return an intern assert tester closur that take a state argument x and perform the follow 1 let e be x s end index 2 if e is zero return true 3 if multilin is fals return fals 4 if the charact input e 1 is on of the line termin charact lf cr ls or ps return true 5 return fals the product assert evalu by return an intern assert tester closur that take a state argument x and perform the follow 1 let e be x s end index 2 if e is equal to input length return true 3 if multilin is fals return fals 4 if the charact input e is on of the line termin charact lf cr ls or ps return true 5 return fals the product assert b evalu by return an intern assert tester closur that takesa state argument x and perform the follow 1 let e be x s end index 2 call is word char e 1 and let a be the boolean result 3 call is word char e and let b be the boolean result 4 if a is true and b is fals return true 5 if a is fals and b is true return true 6 return fals the product assert b evalu by return an intern assert tester closur that takesa state argument x and perform the follow 1 let e be x s end index 2 call is word char e 1 and let a be the boolean result 3 call is word char e and let b be the boolean result 4 if a is true and b is fals return fals 5 if a is fals and b is true return fals 6 return true the intern helper function is word char take an integ paramet e and perform the follow 1 if e 1 or e input length return fals 2 let c be the charact input e 3 if c is on of the sixti three charact in the tabl below return true a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z0 1 2 3 4 5 6 7 8 9 4 return fals 
charact escap the product charact escap control escap evalu by return the charact accord toth tabl below control escap unicod valu name symbolt u0009 horizont tab ht n u000a line feed new line lf v u000b vertic tab vt f u000c form feed ff r u000d carriag return cr the product charact escap c control letter evalu as follow 1 let ch be the charact repres by control letter 2 let i be ch s code point valu 3 let j be the remaind of divid i by 32 4 return the unicod charact number j the product charact escap hex escap sequenc evalu by evalu the cv of the hex escap sequenc see 7 8 4 and return it charact result the product charact escap unicod escap sequenc evalu by evalu the cv of the unicod escap sequenc see 7 8 4 and return it charact result the product charact escap ident escap evalu by return the charact representedbi ident escap 
decim escap the product decim escap decim integ liter lookahead decim digit evalu as follow 1 let i be the mv of decim integ liter 2 if i is zero return the escap valu consist of a nul charact unicod valu 0000 3 return the escap valu consist of the integ i the definit of the mv of decim integ liter is in 7 8 3 inform comment if is follow by a decim number n whose first digit is not 0 then theescap sequenc is consid to be a backrefer it is an error if n is greater than the total numberof left captur parenthes in the entir regular express 0 repres the nul charact andcannot be follow by a decim digit 
charact class escap the product charact class escap d evalu by return the ten element set of characterscontain the charact 0 through 9 inclus the product charact class escap d evalu by return the set of all charact notinclud in the set return by charact class escap d the product charact class escap s evalu by return the set of charact contain thecharact that ar on the right hand side of the white space 7 2 or line termin 7 3 product the product charact class escap s evalu by return the set of all charact notinclud in the set return by charact class escap s the product charact class escap w evalu by return the set of charact contain thesixti three charact a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z0 1 2 3 4 5 6 7 8 9 the product charact class escap w evalu by return the set of all charact notinclud in the set return by charact class escap w 
reg exp pattern flag if pattern is an object r whose class properti is reg exp and flag is undefin then return runchang otherwis call the reg exp constructor 15 10 4 1 pass it the pattern and flagsargu and return the object construct by that constructor 
the reg exp constructor when reg exp is call as part of a new express it is a constructor it initialis the newli createdobject 
new reg exp pattern flag if pattern is an object r whose class properti is reg exp and flag is undefin then let p beth pattern us to construct r and let f be the flag us to construct r if pattern is an object rwhose class properti is reg exp and flag is not undefin then throw a type errorexcept otherwis let p be the empti string if pattern is undefin and to string pattern otherwis and let f be the empti string if flag is undefin and to string flag otherwis the global properti of the newli construct object is set to a boolean valu that is true if fcontain the charact g and fals otherwis the ignor case properti of the newli construct object is set to a boolean valu that is true if fcontain the charact i and fals otherwis the multilin properti of the newli construct object is set to a boolean valu that is true if fcontain the charact m and fals otherwis if f contain ani charact other than g i or m or if it contain the same on more thanonc then throw a syntax error except if p s charact do not have the form pattern then throw a syntax error except otherwis let thenewli construct object have a match properti obtain by evalu compil pattern note that evalu pattern mai throw a syntax error except note if pattern is a string liter the usual escap sequenc substitut ar perform befor the string is process by reg exp ifpattern must contain an escap sequenc to be recognis by reg exp the charact must beescap within the string liter to prevent it be remov when the content of the string literalar form the sourc properti of the newli construct object is set to an implement defin stringvalu in the form of a pattern base on p the last index properti of the newli construct object is set to 0 the prototyp properti of the newli construct object is set to the origin reg exp prototypeobject the on that is the initi valu of reg exp prototyp the class properti of the newli construct object is set to reg exp 
reg exp prototyp exec string perform a regular express match of string against the regular express and return an arrayobject contain the result of the match or null if the string did not match the string to string string is search for an occurr of the regular express pattern as follow 1 let s be the valu of to string string 2 let length be the length of s 3 let last index be the valu of the last index properti 4 let i be the valu of to integ last index 5 if the global properti is fals let i 0 6 if i 0 or i length then set last index to 0 and return null 7 call match give it the argument s and i if match return failur go to step 8 otherwis let r be it state result and go to step 10 8 let i i 1 9 go to step 6 10 let e be r s end index valu 11 if the global properti is true set last index to e 12 let n be the length of r s captur arrai thi is the same valu as 15 10 2 1 s n captur paren 13 return a new arrai with the follow properti the index properti is set to the posit of the match substr within the complet string s the input properti is set to s the length properti is set to n 1 the 0 properti is set to the match substr i e the portion of s between offset i inclusiveand offset e exclus for each integ i such that i 0 and i n set the properti name to string i to the ith elementof r s captur arrai 
properti of reg exp instanc reg exp instanc inherit properti from their prototyp object as specifi abov and also have thefollow properti 
error messag the prototyp properti of the newli construct object is set to the origin error prototypeobject the on that is the initi valu of error prototyp 15 11 3 1 the class properti of the newli construct object is set to error if the argument messag is not undefin the messag properti of the newli construct object isset to to string messag 
error prototyp to string return an implement defin string 
refer error indic that an invalid refer valu ha been detect see 8 7 1 and 8 7 2 
nativ error prototyp the initi valu of nativ error prototyp is a nativ error prototyp object 15 11 7 7 each nativ error constructor ha a separ prototyp object thi properti ha the attribut dont enum dont delet read onli 
