<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="_sampleTaskDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="_sampleTaskDialog.Content" xml:space="preserve">
    <value>Task dialogs are a more flexible type of message box. Among other things, task dialogs support custom buttons, command links, scroll bars, expandable sections, radio buttons, a check box (useful for e.g. "don't show this again"), custom icons, and a footer. Some of those things are demonstrated here.</value>
  </data>
  <data name="_sampleTaskDialog.ExpandedInformation" xml:space="preserve">
    <value>Ookii.org's Task Dialog doesn't just provide a wrapper for the native Task Dialog API; it is designed to provide a programming interface that is natural to .Net developers, and offers full Windows Forms designer support.</value>
  </data>
  <metadata name="_sampleCommandLinkTaskDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>172, 17</value>
  </metadata>
  <metadata name="_sampleProgressDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>406, 17</value>
  </metadata>
  <metadata name="_sampleInputDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>584, 17</value>
  </metadata>
  <data name="_sampleInputDialog.Content" xml:space="preserve">
    <value>Input dialogs offer an easy way to prompt the user for single piece of text. It's like an improved version of the old Visual Basic InputBox function. Input dialogs use a style similar to task dialogs when running on Windows Vista or later. They also support password masking.</value>
  </data>
  <metadata name="_sampleCredentialDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>744, 17</value>
  </metadata>
  <metadata name="_sampleVistaFolderBrowserDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 56</value>
  </metadata>
  <metadata name="_sampleVistaOpenFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>252, 56</value>
  </metadata>
  <metadata name="_sampleVistaSaveFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>458, 56</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAEBAAAAAAIABoBAAARgAAACAgAAAAACAAqBAAAK4EAAAQEBAAAAAEACgBAABWFQAAICAQAAAA
        BADoAgAAfhYAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgsLQQIC
        AgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgMAAAAAKAoKOfwA
        AP7EBwfWQwoKVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICBGAMDHXHCwvgDwcHGCQI
        CDKhCQm19wEB/f0AAP6aDQ2xCAQEDgAAAAAAAAAAAAAAAAAAAAAAAAAAEwYGHLcLC8r+AAD+9wIC/lAO
        DmcAAAAAAAAAACgLCzi8CQnQ/wAA/7oNDc0GAwMMAAAAAAAAAAAAAAAAGggIJNYJCeT+AAD/sAsLxSQL
        CzMAAAAAAAAAAAAAAAAAAAAABAMDCJUKCqv+AAD+kgwMpwAAAAAAAAAACAQEDsgICNn6AQH+bQ0NhAEB
        AQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAwMHswoKxvsAAP4zCwtDAAAAAIoMDJ38AAD+XQwMdAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8JCSv2AwP9owoKtCcLCzX4AgL9jg4OpAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoQoKtO8EBPqgERG73wUF7AsF
        BRIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMJCWb+AAD++QAA/24K
        CoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkCAg2/gAA/vYB
        Af0UBwcfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDBp0ODrikCwu4pAsLuKQLC7ikCwu4qg0Nw/4A
        AP7uBAT6pAsLuKQLC7ikCwu4pAsLuKQLC7igCwu4CwoKEwQEBAjOBwft2QMD7dkDA+3ZAwPt2QMD7dkD
        A+36AAD+8AAA+dkDA+3ZAwPt2QMD7dkDA+3ZAwPt1AMD7Q4MDBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA5gEB9p4AAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOYBAfaeAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADmAQH2owICtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVgYGblMJCWoBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgA
        AAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIDchsbpTgT
        E18ICAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIDAAAAAAAAAAAAAAAACYV
        FUP1AQH+/AAA/sUPD+hNDg50BQQECwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxERN5EXF7yUFRXIAQEBAQAA
        AAAAAAAAfBYWof4AAP7/AAD//wAA//0AAP7FDQ3oQxkZZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        A/4gERE5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIsUFLD+AAD+/wAA//8A
        AP//AAD/phUVygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXhQUgv4A
        AP7+AAD+/gAA/v4AAP5EExNnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA0DQ1Z/gAA/v8AAP//AAD/3wUF+gwLCxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAdGGhpyShcXckoXF3JKFxdyShcXckoXF3JKFxdyShcXckoX
        F3JKFxdyShcXcmEfH53+AAD+/wAA//8AAP++EhLrShcXckoXF3JKFxdyShcXckoXF3JKFxdyShcXckoX
        F3JKFxdyShcXckoXF3JIFxdyDw4OFwAAAAAAAAAACAgIEeQICP7/AAD//wAA//4AAP7/AAD//wAA//8A
        AP//AAD//gAA/v8AAP//AAD//wAA//4AAP7/AAD//wAA//8AAP/+AAD+/wAA//8AAP//AAD//gAA/v8A
        AP//AAD//wAA//4AAP7/AAD//wAA//EBAf8eGxs0AAAAAAAAAAAICAgR5AgI/v4AAP7+AAD+/gAA/v4A
        AP7+AAD+/gAA/v4AAP7+AAD+/gAA/v4AAP7+AAD+/gAA/v4AAP7+AAD+/gAA/v4AAP7+AAD+/gAA/v4A
        AP7+AAD+/gAA/v4AAP7+AAD+/gAA/v4AAP7+AAD+8QEB/h4bGzQAAAAAAAAAAAcHBw+kDg7btAYG27QG
        Btu0BgbbtAYG27QGBtu0BgbbtAYG27QGBtu0BgbbtAYG27QGBtvvAAD8/wAA//8AAP/FBATptAYG27QG
        Btu0BgbbtAYG27QGBtu0BgbbtAYG27QGBtu0BgbbtAYG27QGBturBwfbGhgYLQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM4CAu3/AAD//wAA/z0A
        AGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzgIC7f8A
        AP//AAD/PQAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADOAgLt/gAA/v4AAP49AABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAM4CAu3/AAD//wAA/z0AAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzgIC7f8AAP//AAD/PQAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOAgLt/wAA//8AAP9TDAx9AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJsNDdS9CwvkvQsL5JAbG8YEBAQEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAoAAAAEAAAACAAAAABAAQAAAAAAIAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAADMAAAAAA
        DMAMzAAAAADMwAAMwAAADMAAAADMAADMAAAAAAzADMAAAAAAAMAMAAAAAAAAzMwAAAAAAAAMwAAAAAAA
        AAzAAAAADMzMzMzMzMAMzMzMzMzMwAAAAAzAAAAAAAAADMAAAAAAAAAMwAAAAAAAAAzAAAAA//8AAJ/5
        AACP8QAA5+cAAPPPAAD5nwAA/b8AAPw/AAD+fwAA/n8AAIABAACAAQAA/n8AAP5/AAD+fwAA/n8AACgA
        AAAgAAAAQAAAAAEABAAAAAAAAAIAAAAAAAAAAAAAEAAAABAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAA
        gACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAACA
        AAAAAAAAAAAAAAAAAAAAzAAAAAAAAAAAAAAAAAAAAMzMwAAAAAAAAAAAAAzMAADMzMwAAAAAAAAAAAzM
        zMAAAMzMzAAAAAAAAADMzMwAAAAAzMzAAAAAAAAMzMzAAAAAAAzMzAAAAAAAzMzAAAAAAAAAzMzAAAAA
        DMzAAAAAAAAAAAzMwAAAAMzMAAAAAAAAAAAAzMwAAADMwAAAAAAAAAAAAAzMAAAMzAAAAAAAAAAAAAAA
        zMAAzMwAAAAAAAAAAAAAAMzAAMzAAAAAAAAAAAAAAAAMzAzMAAAAAAAAAAAAAAAADMwMwAAAAAAAAAAA
        AAAAAAzMzMAAAAAAAAAAAAAAAAAAzMzAAAAAAAAAAAAAAAAAAMzMAAAAAAAAAAAAAAAAAADMzAAAAAAA
        AAAAAAAAAAAAzMwAAAAAAAAAAMzMzMzMzMzMzMzMzMzMAADMzMzMzMzMzMzMzMzMzAAAzMzMzMzMzMzM
        zMzMzMwAAAAAAAAAAMzMAAAAAAAAAAAAAAAAAADMzAAAAAAAAAAAAAAAAAAAzMwAAAAAAAAAAAAAAAAA
        AMzMAAAAAAAAAAAAAAAAAADMzAAAAAAAAAAAAAAAAAAAzMwAAAAAAAAAAAAAAAAAAMzMAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/////3////8/////B///jwP//gfA//wP8H/4H/g/8H/8H+H//h/D//8Px///j
        4///8cP///HH///4j///+J////gf///8H////D////w////8P//AAAADwAAAA8AAAAP//D////w////8
        P////D////w////8P////D///////w==
</value>
  </data>
</root>