<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:clr="clr-namespace:System;assembly=mscorlib" 
    xmlns:clr2="clr-namespace:System.Collections;assembly=mscorlib" 
    xmlns:local="clr-namespace:WPG" 
    xmlns:data="clr-namespace:WPG.Data" 
    xmlns:converters="clr-namespace:WPG.Controls.WPG.Converters" 
    xmlns:typeeditors="clr-namespace:WPG.TypeEditors" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2006" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    >
    <!--xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"-->
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/Brushes.xaml"/>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/CheckBox.xaml"/>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/ComboBox.xaml"/>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/Expander.xaml"/>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/ListBox.xaml"/>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/PropertyGrid.xaml"/>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/ScrollViewer.xaml"/>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/SearchTextBox.xaml"/>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/TextBlock.xaml"/>
        <ResourceDictionary Source="/WPG;component/Themes/VisualStudio/TextBox.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
	<DataTemplate DataType="{x:Type data:PropertyCollection}">
		<ItemsControl ItemsSource="{Binding Path=Items}" />
	</DataTemplate>

	<DataTemplate DataType="{x:Type data:PropertyCategory}">
		<Expander Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=ExpanderStyle}}" Header="{Binding Category}" IsExpanded="True" Background="LightGray">
			<ItemsControl ItemsSource="{Binding Path=Items}" />
		</Expander>
	</DataTemplate>

    <DataTemplate DataType="{x:Type data:ExpandableProperty}">
        <Expander Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=ExpanderStyle}}" IsExpanded="False" Background="LightGray">
            <Expander.Header>
                <Border BorderThickness="1 1 0 1" BorderBrush="LightGray">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding NameWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PropertyGrid}}}"></ColumnDefinition>
                            <ColumnDefinition MinWidth="40" MaxWidth="150"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0">
                            <TextBlock x:Name="PART_Header"  DockPanel.Dock="Left" Margin="0,0,2,0" TextAlignment="Left" VerticalAlignment="Center" Text="{Binding Mode=OneTime, Path=Name}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock"  BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=TextBlockStyle}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=PropertiesTextModifiedBrush}}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
						        <TextBlock.ToolTip>
							        <ToolTip>
								        <ToolTip.Content>
									        <StackPanel>
										        <StackPanel Orientation="Horizontal">
											        <TextBlock Text="{Binding Mode=OneTime, Path=Name}" Padding="1 0 0 0" />
											        <TextBlock Text=": " Padding="1 0 0 0" />
											        <TextBlock Text="{Binding Mode=OneTime, Path=PropertyType}" FontWeight="Bold" Padding="1 0 0 0" />
										        </StackPanel>
										        <TextBlock Text="{Binding Mode=OneTime, Path=Description}" Padding="1 1 0 0" />
									        </StackPanel>
								        </ToolTip.Content>
							        </ToolTip>
						        </TextBlock.ToolTip>
					        </TextBlock>
                        </DockPanel>
                        <Border Grid.Column="1" Margin="0" Padding="0" BorderThickness="2 0 0 0" BorderBrush="LightGray">
                            <ContentControl VerticalAlignment="Center" Content="{Binding Path=Count}" />
                        </Border>
                    </Grid>
                </Border>
            </Expander.Header>
            <ItemsControl ItemsSource="{Binding Path=Items}" />
        </Expander>
    </DataTemplate>

    <local:PropertyTemplateSelector x:Key="propertyTemplateSelector" />


	<DataTemplate DataType="{x:Type data:Property}">
		<DockPanel Height="20" Margin="0 -1 0 0">
			<Border BorderThickness="1 1 0 1" BorderBrush="LightGray">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="{Binding NameWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PropertyGrid}}}"></ColumnDefinition>
						<ColumnDefinition></ColumnDefinition>
					</Grid.ColumnDefinitions>
					<TextBlock x:Name="PART_Header" Grid.Column="0" DockPanel.Dock="Left" Margin="0,0,2,0" TextAlignment="Left" VerticalAlignment="Center" Text="{Binding Mode=OneTime, Path=Name}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock"  BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=TextBlockStyle}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=PropertiesTextModifiedBrush}}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <TextBlock.ToolTip>
							<ToolTip>
								<ToolTip.Content>
									<StackPanel>
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="{Binding Mode=OneTime, Path=Name}" Padding="1 0 0 0" />
											<TextBlock Text=": " Padding="1 0 0 0" />
											<TextBlock Text="{Binding Mode=OneTime, Path=PropertyType}" FontWeight="Bold" Padding="1 0 0 0" />
										</StackPanel>
										<TextBlock Text="{Binding Mode=OneTime, Path=Description}" Padding="1 1 0 0" />
									</StackPanel>
								</ToolTip.Content>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
					<Border Grid.Column="1" Margin="0" Padding="0" BorderThickness="2 0 0 0" BorderBrush="LightGray">
						<!--<ContentControl VerticalAlignment="Center" Content="{Binding Mode=OneWay}" ContentTemplateSelector="{StaticResource propertyTemplateSelector}" />-->
                        <ContentControl VerticalAlignment="Center" Content="{Binding Mode=OneWay}" ContentTemplateSelector="{Binding 
                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PropertyGrid}}, 
                            Path=TemplateSelector, 
                            FallbackValue={StaticResource propertyTemplateSelector}}" />
                            <!--diagnostics:PresentationTraceSources.TraceLevel=High}" />-->
                    </Border>
				</Grid>
			</Border>
		</DockPanel>
	</DataTemplate>


	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=default}">
		<TextBox IsReadOnly="{Binding Path=IsReadOnly}" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=TextBoxStyle}}">
			<TextBox.Text>
                <Binding Mode="TwoWay" Path="Value" ValidatesOnExceptions="True">
					<Binding.ValidationRules>
						<ExceptionValidationRule />
					</Binding.ValidationRules>
				</Binding>
			</TextBox.Text>
            <TextBox.ToolTip>
                <TextBlock Text="{Binding Value}" Padding="0" Margin="0" 
                           VerticalAlignment="Stretch"
                           HorizontalAlignment="Stretch"
                           Height="Auto" Width="Auto"/>
            </TextBox.ToolTip>
        </TextBox>
    </DataTemplate>

	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId={x:Type clr:Int32}}">
		<typeeditors:IntegerTypeEditor IsEnabled="{Binding Path=IsWriteable}" Text="{Binding Path=Value, ValidatesOnExceptions=True}" Foreground="Black">
            <typeeditors:IntegerTypeEditor.ToolTip>
                <TextBlock Text="{Binding Value}" Padding="0" Margin="0" 
                               VerticalAlignment="Stretch"
                               HorizontalAlignment="Stretch"
                               Height="Auto" Width="Auto"/>
            </typeeditors:IntegerTypeEditor.ToolTip>
        </typeeditors:IntegerTypeEditor>
	</DataTemplate>

	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId={x:Type clr:Boolean}}">
		<CheckBox IsEnabled="{Binding Path=IsWriteable}" Margin="2 0 0 0" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=CheckBoxStyle}}" IsChecked="{Binding Path=Value}" />
	</DataTemplate>

	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId={x:Type clr2:IList}}">
		<ListBox ItemsSource="{Binding Path=Value}" />
	</DataTemplate>

	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId={x:Type clr:Enum}}">
		<ComboBox IsEnabled="{Binding Path=IsWriteable}" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=ComboBoxStyle}}" SelectedValue="{Binding Path=Value}">
			<ComboBox.ItemsSource>
				<Binding Path="Value">
					<Binding.Converter>
						<converters:EnumTypeConverter />
					</Binding.Converter>
				</Binding>
			</ComboBox.ItemsSource>
		</ComboBox>
	</DataTemplate>

	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId={x:Type clr:Double}}">
		<TextBox IsEnabled="{Binding Path=IsWriteable}" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:PropertyGrid}, ResourceId=TextBoxStyle}}">
			<TextBox.Text>
                <Binding Mode="TwoWay" Path="Value" ValidatesOnExceptions="True">
					
                </Binding>
			</TextBox.Text>
            <TextBox.ToolTip>
                <TextBlock Text="{Binding Value}" Padding="0" Margin="0" 
                               VerticalAlignment="Stretch"
                               HorizontalAlignment="Stretch"
                               Height="Auto" Width="Auto"/>
            </TextBox.ToolTip>
        </TextBox>
	</DataTemplate>

</ResourceDictionary>