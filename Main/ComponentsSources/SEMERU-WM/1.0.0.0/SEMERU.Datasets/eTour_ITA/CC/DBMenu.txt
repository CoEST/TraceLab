package unisa.gps.etour.repository;

import java.sql. Connection;
import java.sql. Result Set;
import java.sql. S Q L Exception;
import java.sql. Statement;
import java.util. Array List;

import unisa.gps.etour.bean. Bean Menu;

/**
 *  Classe che implementa l'interfaccia  Menu
 * 
 * @author  Martone  Giuseppe
 * @version  .  �      e Tour  Project -  Copyright by  S E@ S A  Lab  D M I �  University
 *          of  Salerno
 */
public class  D B Menu implements  I D B Menu
{
	//  Costruttore vuoto
	public  D B Menu()
	{

	}

	public boolean cancella Menu(int p Id Menu) throws  S Q L Exception
	{
		//  Variabile per la connessione al database
		 Connection conn = null;
		//  Variabile per le query
		 Statement stat = null;
		try
		{
			//  Ottengo la connessione
			conn =  D B Connessione Pool.ottieni Connessione();
			//  Creazione dello  Statement
			stat = conn.create Statement();
			//  Query di cancellazione
			 String query = " D E L E T E  F R O M menu  W H E R E  Id =" + p Id Menu;
			//  Si esegue la query di  Cancellazione
			int i = stat.execute Update(query);
			//  Si restituisce il backup
			return (i ==  );
		}
		//  Viene sempre eseguito e si occupa di chiudere lo  Statement e la
		//  Connessione
		finally
		{
			if (stat != null)
			{
				stat.close();
			}
			if (conn != null)
			{
				 D B Connessione Pool.rilascia Connessione(conn);
			}
		}

	}

	public boolean inserisci Menu( Bean Menu p Menu) throws  S Q L Exception
	{
		//  Variabile per la connessione al database
		 Connection conn = null;
		//  Variabile per le query
		 Statement stat = null;
		try
		{
			//  Ottengo la connessione
			conn =  D B Connessione Pool.ottieni Connessione();
			//  Creazione dello  Statement
			stat = conn.create Statement();
			//  Query per l'inserimento
			 String query = " I N S E R T  I N T O menu( Giorno, Id Punto Di Ristoro)  V A L U E S ('"
					+ p Menu.get Giorno()
					+ "',"
					+ p Menu.get Id Punto Di Ristoro()
					+ ")";
			//  Si esegue la query di  Inserimento
			int i = stat.execute Update(query);
			//  Si ritorna il backup
			return (i ==  );
		}
		//  Viene eseguito sempre e si occupa di chiudere lo  Statement e la
		//  Connessione
		finally
		{
			if (stat != null)
			{
				stat.close();
			}
			if (conn != null)
			{
				 D B Connessione Pool.rilascia Connessione(conn);
			}
		}
	}

	public boolean modifica Menu( Bean Menu p Menu) throws  S Q L Exception
	{
		//  Variabile per la connessione al database
		 Connection conn = null;
		//  Variabile per le query
		 Statement stat = null;
		try
		{
			//  Ottengo la connessione
			conn =  D B Connessione Pool.ottieni Connessione();
			//  Creazione dello  Statement
			stat = conn.create Statement();
			//  Query di modifica
			 String query = " U P D A T E  menu   S E T " + " Giorno = '"
					+ p Menu.get Giorno() + "'   W H E R E  Id = " + p Menu.get Id();
			//  Si esegue la query di  Modifica
			int i = stat.execute Update(query);
			//  Si ritorna il backup
			return (i ==  );
		}
		//  Viene sempre eseguito e si occupa di chiudere lo  Statement e la
		//  Connessione
		finally
		{
			if (stat != null)
			{
				stat.close();
			}
			if (conn != null)
			{
				 D B Connessione Pool.rilascia Connessione(conn);
			}
		}
	}

	public  Array List< Bean Menu> ottieni Menu(int p Id Punto Di Ristoro)
			throws  S Q L Exception
	{
		//  Variabile per la connessione al database
		 Connection conn = null;
		//  Variabile per le query
		 Statement stat = null;
		//  Variabile per i risultati delle query
		 Result Set result = null;
		try
		{
			//  Ottengo la connessione
			conn =  D B Connessione Pool.ottieni Connessione();
			//  Creazione dello  Statement
			stat = conn.create Statement();
			//  Query per l'estrazione della lista dei  Menu
			 String query = " S E L E C T *  F R O M menu  W H E R E  Id Punto Di Ristoro ="
					+ p Id Punto Di Ristoro;
			//  Viene eseguita la query
			result = stat.execute Query(query);
			//  Lista che conterrà tutti i  Bean Menu ottenuti
			 Array List< Bean Menu> lista = new  Array List< Bean Menu>();
			//  Si estraggono i risultati dal result set e si inseriscono nella
			// lista
			// da restituire
			while (result.next())
			{
				//  Riempio la lista
				lista
						.add(new  Bean Menu(result.get Int(" Id"), result
								.get String(" Giorno"), result
								.get Int(" Id Punto Di Ristoro")));
			}
			//  Ritorno la lista
			return lista;
		}
		//  Viene sempre eseguito e si occupa di chiudere il  Result, lo  Statement
		// e la  Connessione
		finally
		{
			if (result != null)
			{
				result.close();
			}
			if (stat != null)
			{
				stat.close();
			}
			if (conn != null)
			{
				 D B Connessione Pool.rilascia Connessione(conn);
			}
		}

	}

	public  Bean Menu ottieni Menu Del Giorno(int p Id Punto Di Ristoro,  String p Giorno)
			throws  S Q L Exception
	{
		//  Variabile per la connessione al database
		 Connection conn = null;
		//  Variabile per le query
		 Statement stat = null;
		//  Variabile per i risultati delle query
		 Result Set result = null;
		try
		{
			//  Ottengo la connessione
			conn =  D B Connessione Pool.ottieni Connessione();
			//  Creazione dello  Statement
			stat = conn.create Statement();
			//  Query per l'estrazione del  Menu del giorno
			 String query = " S E L E C T *  F R O M menu  W H E R E  Id Punto Di Ristoro = "
					+ p Id Punto Di Ristoro + "  A N D  Giorno ='" + p Giorno + "'";
			//  Viene eseguita la query
			result = stat.execute Query(query);
			//  Ottengo il bean del menu del giorno in base all'id del punto di
			// ristoro e al giorno
			 Bean Menu bean Temp = null;
			if (result.next())
			{
				//  Creo il  Bean ricavato
				bean Temp = new  Bean Menu(result.get Int(" Id"), result
						.get String(" Giorno"), result.get Int(" Id Punto Di Ristoro"));
			}
			//  Ritorno il  Bean ottenuto
			return bean Temp;
		}
		//  Viene sempre eseguito e si occupa di chiudere il  Result, lo  Statement
		// e la  Connessione
		finally
		{
			if (result != null)
			{
				result.close();
			}
			if (stat != null)
			{
				stat.close();
			}
			if (conn != null)
			{
				 D B Connessione Pool.rilascia Connessione(conn);
			}
		}

	}

}
