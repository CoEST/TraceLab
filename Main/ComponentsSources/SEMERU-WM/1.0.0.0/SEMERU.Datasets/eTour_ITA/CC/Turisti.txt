/*
 *  Turisti.java
 *
 *  . 
 *
 *   /  /    
 *
 * ©      e Tour  Project -  Copyright by  S E@ S A  Lab -  D M I –  University of  Salerno
 */
package unisa.gps.etour.gui.operatore agenzia ;

import java.awt. Border Layout;
import javax.swing. J Panel;
import javax.swing. J Internal Frame;
import java.awt. Dimension;

import javax.swing. J Desktop Pane;
import javax.swing. J Scroll Pane;
import javax.swing. J Table;
import javax.swing. J Text Pane;
import javax.swing. J Toggle Button;
import javax.swing. J Tool Bar;
import javax.swing. J Button;
import javax.swing. List Selection Model;
import java.awt. Grid Bag Layout;
import java.awt. Grid Bag Constraints;
import javax.swing. Border Factory;
import javax.swing. J Label;
import javax.swing. Swing Constants;
import java.awt. Color;
import java.awt. Insets;
import javax.swing. J Text Field;
import javax.swing. J Option Pane;
import javax.swing.border. Titled Border;
import javax.swing.event. Internal Frame Adapter;
import javax.swing.event. Internal Frame Event;
import javax.swing.event. List Selection Event;
import javax.swing.event. List Selection Listener;
import java.awt. Font;
import javax.swing. Image Icon;
import unisa.gps.etour.util. Data;
import unisa.gps.etour.bean. Bean Turista;
import unisa.gps.etour.gui. Desk Manager;
import unisa.gps.etour.gui.operatore agenzia .tables. Attivazione Turista Renderer;
import unisa.gps.etour.gui.operatore agenzia .tables. Scrollable Table;
import unisa.gps.etour.gui.operatore agenzia .tables. Turisti Table Model;
import java.awt.event. Action Event;
import java.awt.event. Action Listener;
import java.util. Array List;
import java.util. Date;

/**
 *  Questa classe realizza l'interfaccia per la gestione dei turisti
 * da parte dell' Operatore  Agenzia.
 * 
 * @version  . 
 * @see javax.swing. J Internal Frame
 * @author  Mario  Gallo
 * 
 */
public class  Turisti extends  J Internal Frame
{

	private  J Panel j Content Pane = null;
	private  J Tool Bar toolbar Turisti = null;
	private  J Button btn Modifica Dati = null;
	private  J Scroll Pane scroll Table Turisti = null;
	private  J Table table Turisti = null;
	private  J Panel search Panel = null;
	private  J Text Field cognome Turista = null;
	private  J Panel panel Help = null;
	private  J Text Pane text Guida = null;
	private  J Panel right Panel = null;
	private  J Button btn Attiva;
	private  J Button btn Visualizza Scheda;
	private  J Button btn Elimina;
	private  Turisti Table Model table Model;
	private  J Toggle Button turisti Disattivati;
	private  J Toggle Button turisti Attivati;
	private  J Button btn Azzera;
	private  J Button btn Ricerca;
	protected  Desk Manager desktop Manager;
	protected  J Desktop Pane j Desktop Pane;
	private  Array List< Scheda Turista> figli;

	/**
	 *  Questo è il costruttore di default.
	 * 
	 */
	public  Turisti()
	{
		super(" Turisti");
		set Preferred Size(new  Dimension(   ,    ));
		frame Icon = new  Image Icon(get Class().get Resource(
				"/unisa/gps/etour/gui/operatore agenzia /images/ Turisti.png"));
		set Default Close Operation( J Internal Frame. D O_ N O T H I N G_ O N_ C L O S E);
		closable = true;
		resizable = true;
		iconable = true;
		maximizable = true;
		set Content Pane(get J Content Pane());
		figli = new  Array List< Scheda Turista>();
		add Internal Frame Listener(new  Internal Frame Adapter()
		{
			public void internal Frame Opened( Internal Frame Event p Event)
			{
				j Desktop Pane = p Event.get Internal Frame().get Desktop Pane();
				desktop Manager = ( Desk Manager) j Desktop Pane.get Desktop Manager();
			}
			
			public void internal Frame Closing( Internal Frame Event p Event)
			{
				 J Panel root = new  J Panel(new  Border Layout());
				 J Label message = new  J Label(
						" Sei sicuro di voler chiudere la finestra di gestione dei turisti?");
				message.set Font(new  Font(" Dialog",  Font. B O L D,   ));
				 J Label avviso = new  J Label(
						" N. B.  Verranno chiuse tutte le finestre aperte da questa gestione.",
						 Swing Constants. C E N T E R);
				avviso
						.set Icon(new  Image Icon(
								get Class()
										.get Resource(
												"/unisa/gps/etour/gui/operatore agenzia /images/warning  .png")));
				root.add(message,  Border Layout. N O R T H);
				root.add(avviso,  Border Layout. S O U T H);
				 String[] options = { " Chiudi", " Annulla" };
				int choice =  J Option Pane.show Internal Option Dialog(j Content Pane, root, " Conferma chiusura  Turisti",
						 J Option Pane. O K_ C A N C E L_ O P T I O N,  J Option Pane. Q U E S T I O N_ M E S S A G E, frame Icon, options, options[ ]);  
				if (choice ==  J Option Pane. O K_ O P T I O N)
				{
					for (int i =  ; i < figli.size(); i++)
					{
						figli.get(i).dispose();
					}
					p Event.get Internal Frame().dispose();
				}
			}
		});
	}

	/**
	 *  Questo metodo inizializza il content pane del frame interno.
	 * 
	 * @return javax.swing. J Panel - il content pane.
	 * 
	 */
	private  J Panel get J Content Pane()
	{
		if (j Content Pane == null)
		{
			j Content Pane = new  J Panel();
			j Content Pane.set Layout(new  Border Layout());
			j Content Pane.add(get Toolbar Turisti(),  Border Layout. N O R T H);
			j Content Pane.add(get Right Panel(),  Border Layout. E A S T);
			j Content Pane.add(get Scroll Table Turisti(),  Border Layout. C E N T E R);
		}
		return j Content Pane;
	}

	/**
	 *  Questo metodo inizializza la toolbar relativa alla gestione dei
	 * turisti.	
	 * 	
	 * @return javax.swing. J Tool Bar - la toolbar.
	 * 	
	 */
	private  J Tool Bar get Toolbar Turisti()
	{
		if (toolbar Turisti == null)
		{
			toolbar Turisti = new  J Tool Bar();
			toolbar Turisti.set Layout(null);
			toolbar Turisti.set Preferred Size(new  Dimension( ,   ));
			toolbar Turisti.set Orientation( J Tool Bar. H O R I Z O N T A L);
			toolbar Turisti.set Floatable(false);
			toolbar Turisti.add(get Btn Attiva());
			toolbar Turisti.add(get Btn Modifica Dati());
			toolbar Turisti.add(get Btn Visualizza Scheda());
			toolbar Turisti.add(get Btn Elimina());

		}
		return toolbar Turisti;
	}

	/**
	 *  Questo metodo inizializza il pulsante per l'attivazione 
	 * di un turista.
	 * 
	 * @return javax.swing. J Button - il pulsante.
	 * 
	 */
	private  J Button get Btn Attiva()
	{
		if (btn Attiva == null)
		{
			btn Attiva = new  J Button();
			btn Attiva.set Text("<html> Attiva<br> Turista</html>");
			btn Attiva.set Bounds( ,  ,    ,   );
			btn Attiva.set Enabled(false);
			btn Attiva
					.set Icon(new  Image Icon(
							get Class()
									.get Resource(
											"/unisa/gps/etour/gui/operatore agenzia /images/ Attiva Turista  .png")));

			btn Attiva.add Action Listener(new  Action Listener()
			{
				public void action Performed( Action Event arg )
				{
					int selected = table Turisti.get Selected Row();
					 String[] campi = { " Nome", " Cognome", " Data di  Nascita",
							" Luogo di  Nascita", " E- Mail", " Telefono",
							" Indirizzo", " C A P", " Provincia", " Città" };
					int[] model Reference = {  ,  ,  ,  ,  ,  ,  ,  ,   ,   };
					 J Panel dati Turista = new  J Panel(new  Grid Bag Layout());
					 J Panel root Dialog = new  J Panel(new  Grid Bag Layout());
					dati Turista.set Border( Border Factory.create Titled Border(
							 Border Factory.create Line Border(new  Color(  ,    ,
									   ),  ), " Dati  Turista",
							 Titled Border. D E F A U L T_ J U S T I F I C A T I O N,
							 Titled Border. D E F A U L T_ P O S I T I O N, new  Font(" Dialog",
									 Font. B O L D,   ), new  Color( ,    ,    )));
					 Grid Bag Constraints g = new  Grid Bag Constraints();
					g.insets = new  Insets( ,  ,  ,  );
					g.anchor =  Grid Bag Constraints. W E S T;
					g.gridx =  ;
					g.gridy =  ;
					for (int i =  ; i < campi.length; i++)
					{
						dati Turista.add(new  J Label(campi[i]), g);
						g.gridx++;
						if (i ==  ) // Data di  Nascita
						{
							 Date data Nascita = ( Date) table Model.get Value At(
									selected,  );
							dati Turista.add(new  J Label(
									 Data.to Compact(data Nascita)), g);

						}
						else
						{
							dati Turista.add(new  J Label(
								table Model.get Value At(
									selected, model Reference[i]).to String()), g);
						}
						g.gridx--;
						g.gridy++;
					}
					g.gridx =  ;
					g.gridy =  ;
					root Dialog.add(dati Turista, g);
					g.gridy++;
					 J Label txt Attiva = new  J Label();
					root Dialog.add(txt Attiva, g);
					 String[] options = new  String[ ];
					 Image Icon icon Dialog;
					options[ ] = " Annulla";
					 String title;
					boolean attivato = ( Boolean) table Model.get Value At(
							selected,  );
					if (attivato)  // Operazione di disattivazione
					{
						title = " Disattivare il turista "
								+ table Model.get Value At(selected,  ) + " "
								+ table Model.get Value At(selected,  ) + "?";
						options[ ] = " Disattiva";
						txt Attiva
								.set Text(" Disattivare il turista selezionato?");
						icon Dialog = new  Image Icon(
								get Class()
										.get Resource(
												"/unisa/gps/etour/gui/operatore agenzia /images/ Disattiva Turista  .png"));
					}
					else			// Operazione di attivazione	
					{
						title = " Attivare il turista "
								+ table Model.get Value At(selected,  ) + " "
								+ table Model.get Value At(selected,  ) + "?";
						options[ ] = " Attiva";
						txt Attiva.set Text(" Attivare il turista selezionato?");
						icon Dialog = new  Image Icon(
								get Class()
										.get Resource(
												"/unisa/gps/etour/gui/operatore agenzia /images/ Attiva Turista  .png"));
					}
					txt Attiva.set Foreground( Color.red);
					int choice =  J Option Pane.show Internal Option Dialog(
							j Content Pane, root Dialog, title,
							 J Option Pane. O K_ C A N C E L_ O P T I O N,
							 J Option Pane. Q U E S T I O N_ M E S S A G E, icon Dialog, options,
							options[ ]);
					if (choice ==  J Option Pane. O K_ O P T I O N)
					{
						table Model.set Value At((attivato) ? false : true,
								selected,  );
						table Model.fire Table Data Changed();
					}
				}
			});
		}
		return btn Attiva;
	}

	/**
	 *  Questo metodo inizializza il pulsante per la modifica dei 
	 * dati di un turista.
	 * 	
	 * @return javax.swing. J Button	- il pulsante.
	 */
	private  J Button get Btn Modifica Dati()
	{
		if (btn Modifica Dati == null)
		{
			btn Modifica Dati = new  J Button();
			btn Modifica Dati
					.set Text("<html> Modifica&nbsp; Dati<br> Turista</html>");
			btn Modifica Dati.set Bounds(   ,  ,    ,   );
			btn Modifica Dati.set Enabled(false);
			btn Modifica Dati
					.set Icon(new  Image Icon(
							get Class()
									.get Resource(
											"/unisa/gps/etour/gui/operatore agenzia /images/ Modifica Turista  .png")));
			btn Modifica Dati.add Action Listener(new  Action Listener()
			{
				public void action Performed( Action Event arg )
				{
					// T E S T
					 Date nuova = new  Date();
					nuova.set Month(  );
					nuova.set Date(  );
					nuova.set Year(  );
					 Date nuova  = new  Date();
					nuova .set Month( );
					nuova .set Date(  );
					nuova .set Year(   );
					 Bean Turista  T E S T = new  Bean Turista( , "mlmlml", " Ottabio",
							"degli  Michili", " Ottawa", " Frattamaggiore", "        ",
							"     ", " V.le delle  Mimose   ", " N A",
							"ottavio_ottawa@wawa.com", "micacae", nuova, nuova , false);
					// T E S T
					open Scheda( T E S T,true);
				}
			});
		}
		return btn Modifica Dati;
	}

	/**
	 *  Questo metodo inizializza il pulsante per la visualizzazione della
	 * scheda di un turista.
	 * 
	 * @return javax.swing. J Button - il pulsante.
	 */
	private  J Button get Btn Visualizza Scheda()
	{
		if (btn Visualizza Scheda == null)
		{
			btn Visualizza Scheda = new  J Button();
			btn Visualizza Scheda
					.set Text("<html> Visualizza<br>profilo&nbsp; Turista</html>");
			btn Visualizza Scheda.set Bounds(   ,  ,    ,   );
			btn Visualizza Scheda
					.set Icon(new  Image Icon(
							get Class()
									.get Resource(
											"/unisa/gps/etour/gui/operatore agenzia /images/ Scheda Turista.png")));
			btn Visualizza Scheda.set Enabled(false);
			btn Visualizza Scheda.add Action Listener(new  Action Listener()
			{

				public void action Performed( Action Event arg )
				{
					// T E S T
					 Date nuova = new  Date();
					nuova.set Month(  );
					nuova.set Date(  );
					nuova.set Year(  );
					 Date nuova  = new  Date();
					nuova .set Month( );
					nuova .set Date(  );
					nuova .set Year(   );
					 Bean Turista  T E S T = new  Bean Turista( , "mlmlml", " Ottabio",
							"degli  Michili", " Ottawa", " Frattamaggiore", "        ",
							"     ", " V.le delle  Mimose   ", " N A",
							"ottavio_ottawa@wawa.com", "micacae", nuova, nuova , false);
					// T E S T
					open Scheda( T E S T,false);
				}
				
			});
		}
		return btn Visualizza Scheda;
	}

	/**
	 * 
	 *  Questo metodo inizializza il pulsante per l'eliminazione di un turista.
	 *
	 * @return javax.swing. J Button - il pulsante.
	 */
	private  J Button get Btn Elimina()
	{
		if (btn Elimina == null)
		{
			btn Elimina = new  J Button();
			btn Elimina.set Text("<html> Elimina<br> Turista</html>");
			btn Elimina.set Bounds(   ,  ,    ,   );
			btn Elimina.set Enabled(false);
			btn Elimina
					.set Icon(new  Image Icon(
							get Class()
									.get Resource(
											"/unisa/gps/etour/gui/operatore agenzia /images/ Elimina Turista  .png")));
			btn Elimina.add Action Listener(new  Action Listener()
			{

				public void action Performed( Action Event arg )
				{
					int selected Row = table Turisti.get Selected Row();
					if (selected Row != - )
					{
						 String nome = ( String) table Model.get Value At(
								selected Row,  )
								+ " "
								+ ( String) table Model
										.get Value At(selected Row,  );
						 J Panel root = new  J Panel(new  Border Layout());
						 J Label message = new  J Label(
								" Sei sicuro di voler eliminare l'account del turista "
										+ nome + "?");
						message.set Font(new  Font(" Dialog",  Font. B O L D,   ));
						 J Label avviso = new  J Label(
								" I dati dell'account e tutte le impostazioni personali"
										+ " non potranno essere più recuperati.",
								 Swing Constants. C E N T E R);
						avviso
								.set Icon(new  Image Icon(
										get Class()
												.get Resource(
														"/unisa/gps/etour/gui/operatore agenzia /images/warning  .png")));
						root.add(message,  Border Layout. N O R T H);
						root.add(avviso,  Border Layout. S O U T H);
						 String[] options = { " Elimina", " Annulla" };
						int choice =  J Option Pane
								.show Internal Option Dialog(
										j Content Pane,
										root,
										" Conferma  Eliminazione",
										 J Option Pane. Y E S_ N O_ O P T I O N,
										 J Option Pane. Q U E S T I O N_ M E S S A G E,
										new  Image Icon(
												get Class()
														.get Resource(
																"/unisa/gps/etour/gui/operatore agenzia /images/ Elimina Turista  .png")),
										options, options[ ]);
						if (choice ==  J Option Pane. Y E S_ O P T I O N)
						{
							table Model.remove Turista(selected Row);
							table Model.fire Table Data Changed();
							 J Label confirm = new  J Label(" L'account  Turista di " + nome
									+ " è stato eliminato.");
							confirm.set Font(new  Font(" Dialog",  Font. B O L D,   ));
							 J Option Pane
									.show Internal Message Dialog(
											j Content Pane,
											confirm,
											" Account  Turista eliminato!",
											 J Option Pane. O K_ O P T I O N,
											new  Image Icon(
													get Class()
															.get Resource(
																	"/unisa/gps/etour/gui/operatore agenzia /images/ok  .png")));
						}
					}

				}

			});
		}
		return btn Elimina;
	}

	/**
	 *  Questo metodo inizializza lo scroll pane con la tabella dei turisti.	
	 * 	
	 * @return javax.swing. J Scroll Pane - lo scroll pane.
	 */
	private  J Scroll Pane get Scroll Table Turisti()
	{
		if (scroll Table Turisti == null)
		{
			table Model = new  Turisti Table Model();
			// T E S T
			 Date nuova = new  Date();
			nuova.set Month(  );
			nuova.set Date(  );
			nuova.set Year(  );
			 Date nuova  = new  Date();
			nuova .set Month( );
			nuova .set Date(  );
			nuova .set Year(   );
			 Bean Turista nuovo = new  Bean Turista( , "mlmlml", " Ottabio",
					"degli  Michili", " Ottawa", " Frattamaggiore", "        ",
					"     ", " V.le delle  Mimose   ", " N A",
					"ottavio_ottawa@wawa.com", "micacae", nuova, nuova , false);
			 Bean Turista nuovo  = new  Bean Turista( , "mlmlml", " Ottabiolino",
					"degli  Michili", " Ottawa", " Frattamaggiore", "        ",
					"     ", " V.le delle  Mimose   ", " N A",
					"ottavio_ottawa@wawa.com", "micacae", nuova, nuova , true);
			 Bean Turista nuovo  = new  Bean Turista( , "mlmlml", " Ottavio",
					" Michili", " Ottawa", " Frattamaggiore", "        ", "     ",
					" V.le  Mimose   ", " N A", "ottavio_ottawa@wawa.com",
					"micacae", nuova, nuova , false);
			table Model.insert Turista(nuovo);
			table Model.insert Turista(nuovo );
			table Model.insert Turista(nuovo );
			for (int i =  ; i <   ; i++)
			{
				table Model.insert Turista(nuovo);
			}
			//  F I N E  T E S T
			table Turisti = new  Scrollable Table(table Model);
			table Turisti.set Auto Create Columns From Model(true);
			table Turisti.set Selection Mode( List Selection Model. S I N G L E_ S E L E C T I O N);
			table Turisti.set Selection Foreground( Color. R E D);
			table Turisti.set Selection Background( Color.white);
			table Turisti.set Column Selection Allowed(false);
			table Turisti.set Show Vertical Lines(false);
			table Turisti.set Row Height(  );
			// Status
			table Turisti.get Column Model().get Column( ).set Preferred Width(  );
			table Turisti.get Column Model().get Column( ).set Cell Renderer(
					new  Attivazione Turista Renderer());
			// Nome
			table Turisti.get Column Model().get Column( ).set Preferred Width(   );
			// Cognome
			table Turisti.get Column Model().get Column( ).set Preferred Width(   );
			// Email
			table Turisti.get Column Model().get Column( ).set Preferred Width(   );
			// Telefono
			table Turisti.get Column Model().get Column( ).set Preferred Width(  );
			// Data di  Nascita
			table Turisti.get Column Model().get Column( ).set Preferred Width(   );
			// Città di  Nascita
			table Turisti.get Column Model().get Column( ).set Preferred Width(   );
			// Indirizzo
			table Turisti.get Column Model().get Column( ).set Preferred Width(   );
			// Residenza
			table Turisti.get Column Model().get Column( ).set Preferred Width(  );
			// C A P
			table Turisti.get Column Model().get Column( ).set Preferred Width(  );
			// Provincia
			table Turisti.get Column Model().get Column(  ).set Preferred Width(  );
			// Data  Registrazione
			table Turisti.get Column Model().get Column(  ).set Preferred Width(  );

			 List Selection Model selection Model = table Turisti
					.get Selection Model();
			selection Model.add List Selection Listener(new  List Selection Listener()
			{
				public void value Changed( List Selection Event event)
				{
					int selected Row = table Turisti.get Selected Row();
					if (selected Row != - )
					{
						btn Attiva.set Enabled(true);
						btn Modifica Dati.set Enabled(true);
						btn Visualizza Scheda.set Enabled(true);
						btn Elimina.set Enabled(true);
						if (!( Boolean) table Model.get Value At(selected Row,  ))
						{
							btn Attiva.set Text("<html> Attiva<br> Turista</html>");
							btn Attiva
									.set Icon(new  Image Icon(
											get Class()
													.get Resource(
															"/unisa/gps/etour/gui/operatore agenzia /images/ Attiva Turista  .png")));
						}
						else
						{
							btn Attiva
									.set Text("<html> Disattiva<br> Turista</html>");
							btn Attiva
									.set Icon(new  Image Icon(
											get Class()
													.get Resource(
															"/unisa/gps/etour/gui/operatore agenzia /images/ Disattiva Turista  .png")));
						}
					}
					else
					{
						btn Elimina.set Enabled(false);
						btn Modifica Dati.set Enabled(false);
						btn Attiva.set Enabled(false);
						btn Visualizza Scheda.set Enabled(false);
					}

				}
			});
			scroll Table Turisti = new  J Scroll Pane();
			scroll Table Turisti.set Viewport View(table Turisti);
			scroll Table Turisti
					.set Horizontal Scroll Bar Policy( J Scroll Pane. H O R I Z O N T A L_ S C R O L L B A R_ A L W A Y S);
			scroll Table Turisti
					.set Vertical Scroll Bar Policy( J Scroll Pane. V E R T I C A L_ S C R O L L B A R_ A L W A Y S);
		}
		return scroll Table Turisti;
	}

	/**
	 *  Questo metodo inizializza il form per la ricerca dei turisti.	
	 * 	
	 * @return javax.swing. J Panel	
	 * 
	 */
	private  J Panel get Search Panel()
	{
		if (search Panel == null)
		{
			search Panel = new  J Panel();
			search Panel.set Layout(new  Grid Bag Layout());
			search Panel.set Border( Border Factory.create Titled Border(
					 Border Factory.create Line Border(new  Color(  ,    ,    ),  ),
					" Ricerca  Turisti",  Titled Border. D E F A U L T_ J U S T I F I C A T I O N,
					 Titled Border. D E F A U L T_ P O S I T I O N, new  Font(" Dialog",
							 Font. B O L D,   ), new  Color( ,    ,    )));
			 Grid Bag Constraints g = new  Grid Bag Constraints();
			// Creazione  Pannello scelta turisti
			 J Panel turisti = new  J Panel(new  Grid Bag Layout());
			turisti.set Preferred Size(new  Dimension(   ,    ));
			turisti.set Border( Border Factory.create Lowered Bevel Border());
			turisti Attivati = new  J Toggle Button(" Turisti  Attivati");
			turisti Attivati.set Preferred Size(new  Dimension(   ,   ));
			turisti Disattivati = new  J Toggle Button(" Turisti  Disattivati");
			turisti Disattivati.set Preferred Size(new  Dimension(   ,   ));
			turisti Attivati
					.set Icon(new  Image Icon(
							get Class()
									.get Resource(
											"/unisa/gps/etour/gui/operatore agenzia /images/ Scheda Turista  .png")));
			 Action Listener almeno Uno = new  Action Listener()
			{
				public void action Performed( Action Event p Event)
				{
					if (p Event.get Source() == turisti Attivati)
					{
						if (!turisti Attivati.is Selected()
								&& !turisti Disattivati.is Selected())
						{
							turisti Disattivati.set Selected(true);
						}
					}
					else
					{
						if (!turisti Attivati.is Selected()
								&& !turisti Disattivati.is Selected())
						{
							turisti Attivati.set Selected(true);
						}
					}
					
				}
			};
			turisti Attivati.add Action Listener(almeno Uno);
			turisti Disattivati.add Action Listener(almeno Uno);
			turisti Attivati.set Selected(true);
			turisti Disattivati.set Selected(true);
			turisti Disattivati
					.set Icon(new  Image Icon(
							get Class()
									.get Resource(
											"/unisa/gps/etour/gui/operatore agenzia /images/ Disattiva Turista  .png")));
			g.insets = new  Insets( ,  ,  ,  );
			g.gridx =  ;
			g.gridy =  ;
			g.weighty =  . ;
			g.fill =  Grid Bag Constraints. H O R I Z O N T A L;
			turisti.add(turisti Attivati, g);
			g.gridy++;
			turisti.add(turisti Disattivati, g);

			// Creazione pannello search
			g.gridx =  ;
			g.gridy =  ;
			g.gridwidth =  ;
			g.anchor =  Grid Bag Constraints. C E N T E R;
			g.fill =  Grid Bag Constraints. N O N E;
			g.insets = new  Insets( ,  ,  ,  );
			search Panel.add(new  J Label(" Cognome  Turista:"), g);
			cognome Turista = new  J Text Field(  );
			g.gridy++;
			search Panel.add(cognome Turista, g);
			g.gridy++;
			search Panel.add(new  J Label(" Visualizza:"), g);
			g.gridy++;
			g.weighty =  . ;
			g.insets = new  Insets( ,  ,   ,  );
			search Panel.add(turisti, g);
			g.insets = new  Insets( , , , );
			g.gridwidth =  ;
			g.gridy++;
			search Panel.add(get Btn Ricerca(), g);
			g.gridx =  ;
			search Panel.add(get Btn Azzera(), g);
		}
		return search Panel;
	}

	/**
	 *  Questo metodo inizializza il pannello della guida in linea.	
	 * 	
	 * @return javax.swing. J Panel	
	 * 
	 */
	private  J Panel get Panel Help()
	{
		if (panel Help == null)
		{
			panel Help = new  J Panel();
			panel Help.set Layout(new  Border Layout());
			panel Help.set Border( Border Factory.create Titled Border( Border Factory
					.create Line Border(new  Color(  ,    ,    ),  ),
					" Guida in linea",  Titled Border. D E F A U L T_ J U S T I F I C A T I O N,
					 Titled Border. D E F A U L T_ P O S I T I O N, new  Font(" Dialog",
							 Font. B O L D,   ), new  Color( ,    ,    )));
			panel Help.set Preferred Size(new  Dimension(   ,    ));
			text Guida = new  J Text Pane();
			text Guida.set Opaque(false);
			text Guida.set Content Type("text/html");
			text Guida.set Editable(false);
			text Guida.set Opaque(false);
			panel Help.add(text Guida,  Border Layout. C E N T E R);

		}
		return panel Help;
	}

	/**
	 *  Questo metodo inizializza il pannello laterale dell'interfaccia.	
	 * 	
	 * @return javax.swing. J Panel	
	 * 
	 */
	private  J Panel get Right Panel()
	{
		if (right Panel == null)
		{
			right Panel = new  J Panel();
			right Panel.set Layout(new  Grid Bag Layout());
			 Grid Bag Constraints g = new  Grid Bag Constraints();
			g.gridx =  ;
			g.gridy =  ;
			g.fill =  Grid Bag Constraints. B O T H;
			g.weighty =  . ;
			right Panel.add(get Panel Help(), g);
			g.weighty =  . ;
			g.gridx =  ;
			g.gridy =  ;
			right Panel.add(get Search Panel(), g);
		}
		return right Panel;
	}

	/**
	 *  Questo metodo inizializza il pulsante per la ricerca dei turisti.
	 * 	
	 * @return javax.swing. J Button
	 * 	
	 */
	private  J Button get Btn Ricerca()
	{
		if (btn Ricerca == null)
		{
			btn Ricerca = new  J Button();
			btn Ricerca.set Text(" Ricerca");
			btn Ricerca.set Preferred Size(new  Dimension(  ,   ));
			btn Ricerca
					.set Icon(new  Image Icon(
							get Class()
									.get Resource(
											"/unisa/gps/etour/gui/operatore agenzia /images/ Ricerca  .png")));
		}
		return btn Ricerca;
	}

	/**
	 *  Questo metodo inizializza il pulsante per il reset del form di
	 * ricerca.	
	 * 	
	 * @return javax.swing. J Button	
	 */
	private  J Button get Btn Azzera()
	{
		if (btn Azzera == null)
		{
			btn Azzera = new  J Button();
			btn Azzera.set Text(" Azzera");
			btn Azzera.set Horizontal Text Position( Swing Constants. L E A D I N G);
			btn Azzera.set Preferred Size(new  Dimension(  ,   ));
			btn Azzera
					.set Icon(new  Image Icon(
							get Class()
									.get Resource(
											"/unisa/gps/etour/gui/operatore agenzia /images/ Azzera  .png")));
			btn Azzera.add Action Listener(new  Action Listener()
			{
				public void action Performed( Action Event p Ac Event)
				{
					cognome Turista.set Text("");
					turisti Attivati.set Selected(true);
					turisti Disattivati.set Selected(true);
				}
			});
		}
		return btn Azzera;
	}
	
	/**
	 * 
	 *  Questo metodo apre una scheda relativa al bean turista fornito in input.
	 *
	 * @param p Turista  Bean Turista - il bean del turista
	 * @param p Modifica boolean <ul><li>true - se si modificano i dati.
	 * <li>false - se si visualizza la scheda.</ul>
	 * @return void
	 */
	private void open Scheda( Bean Turista p Turista, boolean p Modifica)
	{
		for (int i =  ; i < figli.size(); i++)
		{
			 Scheda Turista corrente = figli.get(i);
			if (p Turista.get Id() == corrente.get Id()) 
			{
				desktop Manager.activate Frame(corrente);
				return;
			}
		}
		 Scheda Turista nuova = new  Scheda Turista(this, p Turista, p Modifica);
		j Desktop Pane.add(nuova,  Integer. M A X_ V A L U E);
		nuova.set Visible(true);
		figli.add(nuova);
	}
	
	/**
	 * 
	 *  Chiude la scheda selezionata.
	 *
	 * @param p Scheda  Scheda Turista - la scheda da chiudere.
	 * @return void
	 */
	protected void close Scheda( Scheda Turista p Scheda)
	{
		figli.remove(p Scheda);
		p Scheda.dispose();
	}
	
	/**
	 * 
	 *  Aggiorna il modello della tabella dei turisti con il bean fornito in
	 * input.
	 *
	 * @param p Turista  Bean Turista - il bean del turista.
	 * @return void
	 */
	protected void update Table Model( Bean Turista p Turista)
	{
		table Model.update Turista(p Turista);
	}
}
