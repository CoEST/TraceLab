package unisa.gps.etour.gui.operatore agenzia ;

import java.awt. Border Layout;
import javax.swing. J Panel;
import javax.swing. J Internal Frame;

import unisa.gps.etour.bean. Bean Tag;

import java.awt. Grid Bag Layout;
import javax.swing. J Scroll Pane;
import javax.swing. J Table;
import java.awt. Grid Bag Constraints;
import java.awt. Dimension;
import javax.swing. J Tool Bar;
import javax.swing. J Button;
import javax.swing. Image Icon;
import javax.swing. J Text Pane;
import javax.swing. Border Factory;
import javax.swing.border. Titled Border;
import java.awt. Color;
import java.awt. Font;
import javax.swing. J Label;
import javax.swing. J Text Field;
import javax.swing. J Text Area;
import java.awt. Insets;

public class  Tag extends  J Internal Frame
{

	private  J Panel j Content Pane = null;
	private  J Panel  Center Panel = null;
	private  J Panel  East Panel = null;
	private  J Scroll Pane j Scroll Pane = null;
	private  J Table j Table = null;
	private  J Tool Bar j J Tool Bar Bar = null;
	private  J Button btn Modifica = null;
	private  J Button btn Elimina = null;
	private  J Button btn Exit = null;
	private  J Panel j Panel Up = null;
	private  J Panel j Panel Help = null;
	private  J Text Pane j Text Pane = null;
	private  J Label  Nometag = null;
	private  J Text Field j Text Field = null;
	private  J Label  Descrizione = null;
	private  J Text Area j Text Area = null;
	private  J Button btn Ok = null;
	private  J Button btn Resetta = null;

	/**
	 *  This is the xxx default constructor
	 */
	public  Tag()
	{
		super();
		initialize();
	}

	/**
	 *  This method initializes this
	 * 
	 * @return void
	 */
	private void initialize()
	{
		this.set Size(   ,    );
		this.set Frame Icon(new  Image Icon(get Class().get Resource("/interfacce Agenzia/immagini/ Properties.png")));
		this.set Title(" Gestione  Tag");
		this.set Content Pane(get J Content Pane());
	}

	/**
	 *  This method initializes j Content Pane
	 * 
	 * @return javax.swing. J Panel
	 */
	private  J Panel get J Content Pane()
	{
		if (j Content Pane == null)
		{
			j Content Pane = new  J Panel();
			j Content Pane.set Layout(new  Border Layout());
			j Content Pane.add(get Center Panel(),  Border Layout. C E N T E R);
			j Content Pane.add(get East Panel(),  Border Layout. E A S T);
			j Content Pane.add(get J J Tool Bar Bar(),  Border Layout. N O R T H);
		}
		return j Content Pane;
	}

	/**
	 *  This method initializes  Center Panel	
	 * 	
	 * @return javax.swing. J Panel	
	 */
	private  J Panel get Center Panel()
	{
		if ( Center Panel == null)
		{
			 Grid Bag Constraints grid Bag Constraints = new  Grid Bag Constraints();
			grid Bag Constraints.fill =  Grid Bag Constraints. B O T H;
			grid Bag Constraints.weighty =  . ;
			grid Bag Constraints.weightx =  . ;
			 Center Panel = new  J Panel();
			 Center Panel.set Layout(new  Grid Bag Layout());
			 Center Panel.add(get J Scroll Pane(), grid Bag Constraints);
			
			
		}
		return  Center Panel;
	}

	/**
	 *  This method initializes  East Panel	
	 * 	
	 * @return javax.swing. J Panel	
	 */
	private  J Panel get East Panel()
	{
		if ( East Panel == null)
		{
			 Grid Bag Constraints grid Bag Constraints  = new  Grid Bag Constraints();
			grid Bag Constraints .gridy =  ;
			 Grid Bag Constraints grid Bag Constraints  = new  Grid Bag Constraints();
			grid Bag Constraints .gridx =  ;
			grid Bag Constraints .gridy =  ;
			 East Panel = new  J Panel();
			 East Panel.set Layout(new  Grid Bag Layout());
			 East Panel.add(get J Panel Up(), grid Bag Constraints );
			 East Panel.add(get J Panel Help(), grid Bag Constraints );
		}
		return  East Panel;
	}

	/**
	 *  This method initializes j Scroll Pane	
	 * 	
	 * @return javax.swing. J Scroll Pane	
	 */
	private  J Scroll Pane get J Scroll Pane()
	{
		if (j Scroll Pane == null)
		{
			j Scroll Pane = new  J Scroll Pane();
			j Scroll Pane.set Viewport View(get J Table());
		}
		return j Scroll Pane;
	}

	/**
	 *  This method initializes j Table	
	 * 	
	 * @return javax.swing. J Table	
	 */
	private  J Table get J Table()
	{
		if (j Table == null)
		{
			j Table = new  J Table();
			 Bean Tag[] lista Tag= new  Bean Tag[  ];
			lista Tag[ ]=new  Bean Tag( ,"romantico","luogo per coppie e per momenti indimenticabili");
			lista Tag[ ]=new  Bean Tag( ,"esoterico","luoghi di magia");
			lista Tag[ ]=new  Bean Tag( ,"pizzeria"," Le migliori pizzerie");
			lista Tag[ ]=new  Bean Tag( ,"musica"," Locali con musica live, concerti...");
			lista Tag[ ]=new  Bean Tag(  ,"trattoria","cucina tipica");
			lista Tag[ ]=new  Bean Tag( ,"fiere","per acquisti importanti o per bellismi souvenir");
			lista Tag[ ]=new  Bean Tag( ,"mercatini","cucina tipica");
			lista Tag[ ]=new  Bean Tag( ," Storia","cucina tipica");
			lista Tag[ ]=new  Bean Tag( ," Ottocento","cucina tipica");
			lista Tag[ ]=new  Bean Tag( ," All'aperto","cucina tipica");
			lista Tag[  ]=new  Bean Tag(  ," Cinema","cucina tipica");
			
		}
		return j Table;
	}

	/**
	 *  This method initializes j J Tool Bar Bar	
	 * 	
	 * @return javax.swing. J Tool Bar	
	 */
	private  J Tool Bar get J J Tool Bar Bar()
	{
		if (j J Tool Bar Bar == null)
		{
			j J Tool Bar Bar = new  J Tool Bar();
			j J Tool Bar Bar.add(get Btn Modifica());
			j J Tool Bar Bar.add(get Btn Elimina());
			j J Tool Bar Bar.add Separator();
			j J Tool Bar Bar.add(get Btn Exit());
			
		}
		return j J Tool Bar Bar;
	}

	/**
	 *  This method initializes btn Modifica	
	 * 	
	 * @return javax.swing. J Button	
	 */
	private  J Button get Btn Modifica()
	{
		if (btn Modifica == null)
		{
			btn Modifica = new  J Button();
			btn Modifica.set Text(" Modifica  Tag");
			btn Modifica.set Icon(new  Image Icon(get Class().get Resource("/interfacce Agenzia/immagini/edit-  x  .png")));
		}
		return btn Modifica;
	}

	/**
	 *  This method initializes btn Elimina	
	 * 	
	 * @return javax.swing. J Button	
	 */
	private  J Button get Btn Elimina()
	{
		if (btn Elimina == null)
		{
			btn Elimina = new  J Button();
			btn Elimina.set Text(" Elimina  Tag");
			btn Elimina.set Icon(new  Image Icon(get Class().get Resource("/interfacce Agenzia/immagini/button-cancel-  x  .png")));
		}
		return btn Elimina;
	}

	/**
	 *  This method initializes btn Exit	
	 * 	
	 * @return javax.swing. J Button	
	 */
	private  J Button get Btn Exit()
	{
		if (btn Exit == null)
		{
			btn Exit = new  J Button();
			btn Exit.set Text(" Esci");
			btn Exit.set Icon(new  Image Icon(get Class().get Resource("/interfacce Agenzia/immagini/ Forward  .png")));
		}
		return btn Exit;
	}

	/**
	 *  This method initializes j Panel Up	
	 * 	
	 * @return javax.swing. J Panel	
	 */
	private  J Panel get J Panel Up()
	{
		if (j Panel Up == null)
		{
			 Grid Bag Constraints grid Bag Constraints  = new  Grid Bag Constraints();
			grid Bag Constraints .gridx =  ;
			grid Bag Constraints .insets = new  Insets( ,  ,  ,  );
			grid Bag Constraints .gridy =  ;
			 Grid Bag Constraints grid Bag Constraints  = new  Grid Bag Constraints();
			grid Bag Constraints .gridx =  ;
			grid Bag Constraints .insets = new  Insets( ,  ,  ,  );
			grid Bag Constraints .gridy =  ;
			 Grid Bag Constraints grid Bag Constraints  = new  Grid Bag Constraints();
			grid Bag Constraints .fill =  Grid Bag Constraints. B O T H;
			grid Bag Constraints .gridy =  ;
			grid Bag Constraints .weightx =  . ;
			grid Bag Constraints .weighty =  . ;
			grid Bag Constraints .gridwidth =  ;
			grid Bag Constraints .insets = new  Insets( ,  ,  ,  );
			grid Bag Constraints .gridx =  ;
			 Grid Bag Constraints grid Bag Constraints  = new  Grid Bag Constraints();
			grid Bag Constraints .gridx =  ;
			grid Bag Constraints .gridwidth =  ;
			grid Bag Constraints .insets = new  Insets( ,  ,  ,  );
			grid Bag Constraints .gridy =  ;
			 Descrizione = new  J Label();
			 Descrizione.set Text(" Descrizione:");
			 Grid Bag Constraints grid Bag Constraints  = new  Grid Bag Constraints();
			grid Bag Constraints .fill =  Grid Bag Constraints. V E R T I C A L;
			grid Bag Constraints .gridy =  ;
			grid Bag Constraints .weightx =  . ;
			grid Bag Constraints .gridwidth =  ;
			grid Bag Constraints .insets = new  Insets( ,  ,  ,  );
			grid Bag Constraints .gridx =  ;
			 Grid Bag Constraints grid Bag Constraints  = new  Grid Bag Constraints();
			grid Bag Constraints .gridx =  ;
			grid Bag Constraints .gridwidth =  ;
			grid Bag Constraints .insets = new  Insets( ,  ,  ,  );
			grid Bag Constraints .gridy =  ;
			 Nometag = new  J Label();
			 Nometag.set Text(" Nome  Tag:");
			j Panel Up = new  J Panel();
			j Panel Up.set Layout(new  Grid Bag Layout());
			j Panel Up.set Border( Border Factory.create Titled Border( Border Factory.create Line Border(new  Color( ,    ,    ),  ), " Inserimento  Nuovo",  Titled Border. D E F A U L T_ J U S T I F I C A T I O N,  Titled Border. D E F A U L T_ P O S I T I O N, new  Font(" Dialog",  Font. B O L D,   ), new  Color( ,    ,    )));
			j Panel Up.add( Nometag, grid Bag Constraints );
			j Panel Up.add(get J Text Field(), grid Bag Constraints );
			j Panel Up.add( Descrizione, grid Bag Constraints );
			j Panel Up.add(get J Text Area(), grid Bag Constraints );
			j Panel Up.add(get Btn Ok(), grid Bag Constraints );
			j Panel Up.add(get Btn Resetta(), grid Bag Constraints );
		}
		return j Panel Up;
	}

	/**
	 *  This method initializes j Panel Help	
	 * 	
	 * @return javax.swing. J Panel	
	 */
	private  J Panel get J Panel Help()
	{
		if (j Panel Help == null)
		{
			 Grid Bag Constraints grid Bag Constraints  = new  Grid Bag Constraints();
			grid Bag Constraints .fill =  Grid Bag Constraints. B O T H;
			grid Bag Constraints .weighty =  . ;
			grid Bag Constraints .weightx =  . ;
			j Panel Help = new  J Panel();
			j Panel Help.set Layout(new  Grid Bag Layout());
			j Panel Help.set Border( Border Factory.create Titled Border( Border Factory.create Line Border(new  Color( ,    ,    ),  ), " Guida in linea",  Titled Border. D E F A U L T_ J U S T I F I C A T I O N,  Titled Border. D E F A U L T_ P O S I T I O N, new  Font(" Dialog",  Font. B O L D,   ), new  Color(  ,    ,    )));
			j Panel Help.add(get J Text Pane(), grid Bag Constraints );
		}
		return j Panel Help;
	}

	/**
	 *  This method initializes j Text Pane	
	 * 	
	 * @return javax.swing. J Text Pane	
	 */
	private  J Text Pane get J Text Pane()
	{
		if (j Text Pane == null)
		{
			j Text Pane = new  J Text Pane();
			j Text Pane.set Preferred Size(new  Dimension(   ,   ));
		}
		return j Text Pane;
	}

	/**
	 *  This method initializes j Text Field	
	 * 	
	 * @return javax.swing. J Text Field	
	 */
	private  J Text Field get J Text Field()
	{
		if (j Text Field == null)
		{
			j Text Field = new  J Text Field();
			j Text Field.set Columns(  );
		}
		return j Text Field;
	}

	/**
	 *  This method initializes j Text Area	
	 * 	
	 * @return javax.swing. J Text Area	
	 */
	private  J Text Area get J Text Area()
	{
		if (j Text Area == null)
		{
			j Text Area = new  J Text Area();
			j Text Area.set Rows( );
		}
		return j Text Area;
	}

	/**
	 *  This method initializes btn Ok	
	 * 	
	 * @return javax.swing. J Button	
	 */
	private  J Button get Btn Ok()
	{
		if (btn Ok == null)
		{
			btn Ok = new  J Button();
			btn Ok.set Text(" Ok");
			btn Ok.set Icon(new  Image Icon(get Class().get Resource("/interfacce Agenzia/immagini/ Button_ok  .png")));
		}
		return btn Ok;
	}

	/**
	 *  This method initializes btn Resetta	
	 * 	
	 * @return javax.swing. J Button	
	 */
	private  J Button get Btn Resetta()
	{
		if (btn Resetta == null)
		{
			btn Resetta = new  J Button();
			btn Resetta.set Text(" Resetta");
			btn Resetta.set Icon(new  Image Icon(get Class().get Resource("/interfacce Agenzia/immagini/ Trash.png")));
		}
		return btn Resetta;
	}

}  //  @jve:decl-index= :visual-constraint="  ,  "
