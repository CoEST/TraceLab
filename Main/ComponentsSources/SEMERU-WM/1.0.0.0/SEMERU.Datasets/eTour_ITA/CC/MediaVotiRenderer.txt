package unisa.gps.etour.gui.operatore agenzia .tables;

import java.awt. Component;
import javax.swing. Image Icon;
import javax.swing. J Label;
import javax.swing. J Table;
import javax.swing.table. Default Table Cell Renderer;
import unisa.gps.etour.gui.operatore agenzia . Home;

/**
 * <b> Media Voti Renderer</b>
 * <p>
 *  Questa classe realizza un renderer personalizzato per la media voti di un
 * sito.</b>
 * 
 * @see javax.swing.table. Default Table Renderer;
 * @see javax.swing.table. Table Cell Renderer;
 * @version  . 
 * @author  Mario  Gallo
 */
public class  Media Voti Renderer extends  Default Table Cell Renderer
{

	/**
	 *  Metodo che restituisce il componente personalizzato per la
	 * visualizzazione del dato contenuto nella cella di una table.
	 * 
	 * @param  J Table p Table - la tabella.
	 * @param  Object p Value - il dato.
	 * @param boolean p Selected -
	 *            <ul>
	 *            <li><i>true</i> se la cella � selezionata.
	 *            <li> <i>false</i> altrimenti.
	 *            </ul>
	 * @param boolean p Has Focus -
	 *            <ul>
	 *            <li><i>true</i> se la cella ha il focus.
	 *            <li><i> false</i> altrimenti.
	 *            </ul>
	 * @param int p Row - il numero di riga.
	 * @param int p Column - il numero di colonna.
	 * @return  Component - il componente che personalizza il render della cella.
	 * @throws  Illegal Argument Exception - se il valore della cella non può
	 *             essere renderizzato da questo renderer.
	 */
	public  Component get Table Cell Renderer Component( J Table p Table,
			 Object p Value, boolean p Selected, boolean p Focus, int p Row,
			int p Column) throws  Illegal Argument Exception
	{
		if (!(p Value instanceof  Double || p Value instanceof  Integer))
		{
			throw new  Illegal Argument Exception(" Valore cella inaspettato.");
		}
		double voto =  ;
		if (p Value instanceof  Double)
		{
			voto = ( Double) p Value;
		}
		else 
		{
			voto += ( Integer) p Value;
		}
		
		 J Label a Label = new  J Label("");
		a Label.set Horizontal Alignment( J Label. C E N T E R);
		
		if (voto >  )
		{
			a Label.set Icon(new  Image Icon(get Class().get Resource(
					 Home. U R L_ I M A G E S + "stella .gif")));
		}
		else if (voto <=   && voto >  )
		{
			a Label.set Icon(new  Image Icon(get Class().get Resource(
					 Home. U R L_ I M A G E S + "stella .gif")));
		}
		else if (voto <=   && voto >  )
		{
			a Label.set Icon(new  Image Icon(get Class().get Resource(
					 Home. U R L_ I M A G E S + "stella .gif")));
		}
		else if (voto <=   && voto >  )
		{
			a Label.set Icon(new  Image Icon(get Class().get Resource(
					 Home. U R L_ I M A G E S + "stella .gif")));
		}
		else
		{
			a Label.set Icon(new  Image Icon(get Class().get Resource(
					 Home. U R L_ I M A G E S + "stella .gif")));
		}
		return a Label;

	}

}
