package unisa.gps.etour.control. Gestione Utenti Registrati;

import java.rmi. Remote Exception;
import java.util. Array List;

import unisa.gps.etour.bean. Bean Turista;
import unisa.gps.etour.bean. Bean Visita B C;
import unisa.gps.etour.bean. Bean Visita P R;

/**
 *  Interfaccia per la gestione dei  Turisti dal lato dell' Operatore  Agenzia
 * 
 * @author  Morelli  Giuseppe
 * @version  .  �      e Tour  Project -  Copyright by  S E@ S A  Lab  D M I �  University
 *          of  Salerno
 */
public interface  I Gestione Turisti Agenzia extends  I Gestione Turista Comune
{

	/**
	 *  Metodo per la cancellazione di un  Turista dal  Data Base
	 * 
	 * @param p Id Turista  Identificativo del  Turista da eliminare
	 * @return  Booleano: true se l'operazione va a buon fine, false altrimenti
	 * @throws  Remote Exception  Eccezione  Remota
	 */
	public boolean cancella Turista(int p Id Turista) throws  Remote Exception;

	/**
	 *  Metodo per attivare un  Turista registrato
	 * 
	 * @param p Id Turista  Identificativo del  Turista da attivare
	 * @return  Booleano: true se l'operazione va a buon fine, false altrimenti
	 * @throws  Remote Exception  Eccezione  Remota
	 */
	public boolean attiva Turista(int p Id Turista) throws  Remote Exception;

	/**
	 *  Metodo per disattivare un  Turista attivato
	 * 
	 * @param p Id Turista  Identificativo del  Turista da disattivare
	 * @return  Booleano: true se l'operazione va a buon fine, false altrimenti
	 * @throws  Remote Exception  Eccezione  Remota
	 */
	public boolean disattiva Turista(int p Id Turista) throws  Remote Exception;

	/**
	 *  Metodo per ottenere una collezione di  Turisti
	 * 
	 * @return  Array List di  Bean Turista
	 * @throws  Remote Exception  Eccezione  Remota
	 */
	public  Array List< Bean Turista> ottieni Turisti() throws  Remote Exception;

	/**
	 *  Metodo per ottenere una collezione di  Turisti attivati o meno
	 * 
	 * @param stato Account  Booleano che permette di scegliere tra  Turisti
	 *            attivati o meno
	 * @return  Array List di  Bean Turista
	 * @throws  Remote Exception  Eccezione  Remota
	 */
	public  Array List< Bean Turista> ottieni Turisti(boolean stato Account)
			throws  Remote Exception;

	/**
	 *  Metodo per ottenere tutti i feedback rilasciati da un turista per i  Punti
	 * di  Ristoro
	 * 
	 * @param p Id Turista  Identificativo per il  Turista di cui prelevare i
	 *            feedback
	 * @return  Array List contenente tutti i bean di feedback rilasciati
	 * @throws  Remote Exception  Eccezione  Remota
	 */
	public  Array List< Bean Visita P R> ottieni Feedback P R(int p Id Turista)
			throws  Remote Exception;

	/**
	 *  Metodo per ottenere tutti i feedback rilasciati da un turista per i  Beni
	 *  Culturali
	 * 
	 * @param p Id Turista  Identificativo per il  Turista di cui prelevare i
	 *            feedback
	 * @return  Array List contenente tutti i bean di feedback rilasciati
	 * @throws  Remote Exception  Eccezione  Remota
	 */
	public  Array List< Bean Visita B C> ottieni Feedback B C(int p Id Turista)
			throws  Remote Exception;

}
